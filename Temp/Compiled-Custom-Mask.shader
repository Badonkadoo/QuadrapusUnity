// Compiled shader for PC, Mac & Linux Standalone

//////////////////////////////////////////////////////////////////////////
// 
// NOTE: This is *not* a valid shader file, the contents are provided just
// for information and for debugging purposes only.
// 
//////////////////////////////////////////////////////////////////////////
// Skipping shader variants that would not be included into build of current scene.

Shader "Custom/Mask" {
Properties {
 _Color ("Color", Color) = (1.000000,1.000000,1.000000,1.000000)
 _MainTex ("Albedo (RGB)", 2D) = "white" { }
 _Glossiness ("Smoothness", Range(0.000000,1.000000)) = 0.500000
 _Metallic ("Metallic", Range(0.000000,1.000000)) = 0.000000
}
SubShader { 
 LOD 200
 Tags { "RenderType"="Opaque" }


 // Stats for Vertex shader:
 //         d3d9: 44 avg math (26..63)
 //        d3d11: 35 avg math (22..48)
 // Stats for Fragment shader:
 //         d3d9: 147 avg math (147..148), 5 avg texture (5..6), 5 branch
 //        d3d11: 147 avg math (146..148), 4 avg texture (4..5), 6 branch
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL 
-- Vertex shader for "d3d9":
// Stats: 26 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _MainTex_ST at 14
Vector4 unity_SHBb at 12
Vector4 unity_SHBg at 11
Vector4 unity_SHBr at 10
Vector4 unity_SHC at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _MainTex_ST;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   glstate_matrix_mvp  c0       4
//   unity_ObjectToWorld c4       3
//   unity_WorldToObject c7       3
//   unity_SHBr          c10      1
//   unity_SHBg          c11      1
//   unity_SHBb          c12      1
//   unity_SHC           c13      1
//   _MainTex_ST         c14      1
//

    vs_3_0
    def c15, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord3 o4.xyz
    dcl_texcoord6 o5
    mad r0, v0.xyzx, c15.xxxy, c15.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c14, c14.zwzw
    dp4 o3.x, c4, v0
    dp4 o3.y, c5, v0
    dp4 o3.z, c6, v0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o2.xyz, r1
    dp4 r1.x, c10, r2
    dp4 r1.y, c11, r2
    dp4 r1.z, c12, r2
    mad o4.xyz, c13, r0.x, r1
    mov o5, c15.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 26 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 147 math, 5 textures, 5 branches
Vector4 _Color at 16
Float _Glossiness at 14
Vector4 _LightColor0 at 13
Float _Metallic at 15
Vector4 _WorldSpaceCameraPos at 0
Vector4 _WorldSpaceLightPos0 at 1
Vector4 unity_SHAb at 4
Vector4 unity_SHAg at 3
Vector4 unity_SHAr at 2
Vector4 unity_SpecCube0_BoxMax at 5
Vector4 unity_SpecCube0_BoxMin at 6
Vector4 unity_SpecCube0_HDR at 8
Vector4 unity_SpecCube0_ProbePosition at 7
Vector4 unity_SpecCube1_BoxMax at 9
Vector4 unity_SpecCube1_BoxMin at 10
Vector4 unity_SpecCube1_HDR at 12
Vector4 unity_SpecCube1_ProbePosition at 11

Set CUBE Texture "unity_SpecCube0" to slot 0
Set CUBE Texture "unity_SpecCube1" to slot 1
Set 2D Texture "_MainTex" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   _WorldSpaceCameraPos          c0       1
//   _WorldSpaceLightPos0          c1       1
//   unity_SHAr                    c2       1
//   unity_SHAg                    c3       1
//   unity_SHAb                    c4       1
//   unity_SpecCube0_BoxMax        c5       1
//   unity_SpecCube0_BoxMin        c6       1
//   unity_SpecCube0_ProbePosition c7       1
//   unity_SpecCube0_HDR           c8       1
//   unity_SpecCube1_BoxMax        c9       1
//   unity_SpecCube1_BoxMin        c10      1
//   unity_SpecCube1_ProbePosition c11      1
//   unity_SpecCube1_HDR           c12      1
//   _LightColor0                  c13      1
//   _Glossiness                   c14      1
//   _Metallic                     c15      1
//   _Color                        c16      1
//   unity_SpecCube0               s0       1
//   unity_SpecCube1               s1       1
//   _MainTex                      s2       1
//

    ps_3_0
    def c17, 1.05499995, -0.0549999997, 0.699999988, 1.70000005
    def c18, 1, 0, 0.416666657, 6
    def c19, 0.999989986, -0.220916301, 0.220916301, 0.779083729
    def c20, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c21, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c22, 0.00999999978, 0.280000001, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2 v2.xyz
    dcl_texcoord3_pp v3.xyz
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    add r0.xyz, c0, -v2
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul_pp r1.xyz, r0.w, r0
    texld r2, v0, s2
    mul_pp r3.xyz, r2, c16
    mov r4.xy, c18
    add_pp r1.w, r4.x, -c14.x
    dp3_pp r2.w, -r1, v1
    add_pp r2.w, r2.w, r2.w
    mad_pp r5.xyz, v1, -r2.w, -r1
    mad_pp r6, v1.xyzx, c18.xxxy, c18.yyyx
    dp4_pp r7.x, c2, r6
    dp4_pp r7.y, c3, r6
    dp4_pp r7.z, c4, r6
    add_pp r6.xyz, r7, v3
    max_pp r7.xyz, r6, c18.y
    log_pp r6.x, r7.x
    log_pp r6.y, r7.y
    log_pp r6.z, r7.z
    mul_pp r6.xyz, r6, c18.z
    exp_pp r7.x, r6.x
    exp_pp r7.y, r6.y
    exp_pp r7.z, r6.z
    mad_pp r6.xyz, r7, c17.x, c17.y
    max_pp r7.xyz, r6, c18.y
    if_lt -c7.w, r4.y
      nrm_pp r6.xyz, r5
      add r8.xyz, c5, -v2
      rcp r9.x, r6.x
      rcp r9.y, r6.y
      rcp r9.z, r6.z
      mul_pp r8.xyz, r8, r9
      add r10.xyz, c6, -v2
      mul_pp r9.xyz, r9, r10
      cmp_pp r8.xyz, -r6, r9, r8
      min_pp r2.w, r8.y, r8.x
      min_pp r3.w, r8.z, r2.w
      add r8.xyz, -c7, v2
      mad_pp r6.xyz, r6, r3.w, r8
    else
      mov_pp r6.xyz, r5
    endif
    mad_pp r2.w, r1.w, -c17.z, c17.w
    mul_pp r2.w, r1.w, r2.w
    mul_pp r6.w, r2.w, c18.w
    texldl_pp r8, r6, s0
    add r2.w, -r4.x, c8.w
    cmp_pp r2.w, -r2_abs.w, r8.w, c18.x
    mul_pp r2.w, r2.w, c8.x
    mul_pp r9.xyz, r8, r2.w
    mov r10, c19
    if_lt c6.w, r10.x
      if_lt -c11.w, r4.y
        nrm_pp r11.xyz, r5
        add r4.yzw, c9.xxyz, -v2.xxyz
        rcp r12.x, r11.x
        rcp r12.y, r11.y
        rcp r12.z, r11.z
        mul_pp r4.yzw, r4, r12.xxyz
        add r13.xyz, c10, -v2
        mul_pp r12.xyz, r12, r13
        cmp_pp r4.yzw, -r11.xxyz, r12.xxyz, r4
        min_pp r3.w, r4.z, r4.y
        min_pp r5.w, r4.w, r3.w
        add r4.yzw, -c11.xxyz, v2.xxyz
        mad_pp r6.xyz, r11, r5.w, r4.yzww
      else
        mov_pp r6.xyz, r5
      endif
      texldl_pp r5, r6, s1
      add r3.w, -r4.x, c12.w
      cmp_pp r3.w, -r3_abs.w, r5.w, c18.x
      mul_pp r3.w, r3.w, c12.x
      mul_pp r4.xyz, r5, r3.w
      mad r5.xyz, r2.w, r8, -r4
      mad_pp r9.xyz, c6.w, r5, r4
    endif
    nrm_pp r4.xyz, v1
    mad_pp r2.xyz, r2, c16, r10.y
    mad_pp r2.xyz, c15.x, r2, r10.z
    mad_pp r2.w, c15.x, -r10.w, r10.w
    mul_pp r3.xyz, r2.w, r3
    mad_pp r0.xyz, r0, r0.w, c1
    dp3_pp r0.w, r0, r0
    add r3.w, -r0.w, c20.x
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r3.w, c20.y, r0.w
    mul_pp r0.xyz, r0.w, r0
    dp3_pp r0.w, r4, r1
    dp3_sat_pp r1.x, r4, c1
    dp3_sat_pp r1.y, r4, r0
    dp3_sat_pp r0.x, c1, r0
    mul_pp r0.y, r0.x, r0.x
    dp2add_pp r0.y, r0.y, r1.w, c20.z
    add_pp r0.z, -r1.x, c18.x
    mul_pp r1.z, r0.z, r0.z
    mul_pp r1.z, r1.z, r1.z
    mul_pp r0.z, r0.z, r1.z
    mad_pp r0.z, r0.y, r0.z, c18.x
    add_pp r1.z, -r0_abs.w, c18.x
    mul_pp r3.w, r1.z, r1.z
    mul_pp r3.w, r3.w, r3.w
    mul_pp r1.z, r1.z, r3.w
    mad_pp r0.y, r0.y, r1.z, c18.x
    mul_pp r0.y, r0.y, r0.z
    mul_pp r0.z, r1.w, r1.w
    mad_pp r3.w, r1.w, -r1.w, c18.x
    mad_pp r4.x, r0_abs.w, r3.w, r0.z
    mad_pp r3.w, r1.x, r3.w, r0.z
    mul_pp r0.w, r0_abs.w, r3.w
    mad r0.w, r1.x, r4.x, r0.w
    add r0.w, r0.w, c20.w
    rcp r0.w, r0.w
    mul_pp r0.w, r0.w, -c20.z
    mul_pp r3.w, r0.z, r0.z
    mad_pp r4.x, r1.y, r3.w, -r1.y
    mad_pp r1.y, r4.x, r1.y, c18.x
    mul r3.w, r3.w, c21.x
    mad r1.y, r1.y, r1.y, c21.y
    rcp r1.y, r1.y
    mul_pp r1.y, r1.y, r3.w
    mul r0.w, r0.w, r1.y
    mul_pp r1.y, r0.w, c21.z
    mad r0.w, r0.w, -c21.z, c21.w
    rsq r1.y, r1.y
    rcp_pp r1.y, r1.y
    cmp_pp r0.w, r0.w, c22.x, r1.y
    mul_pp r0.yw, r1.x, r0
    mul_pp r0.z, r0.z, r1.w
    mad_pp r0.z, r0.z, -c22.y, c22.z
    dp3_pp r1.x, r2, r2
    cmp r1.x, -r1.x, c18.y, c18.x
    mul_pp r0.w, r0.w, r1.x
    add_pp r1.x, -r2.w, c18.x
    add_sat_pp r1.x, r1.x, c14.x
    mad_pp r4.xyz, c13, r0.y, r7
    mul_pp r5.xyz, r0.w, c13
    add_pp r0.x, -r0.x, c18.x
    mul_pp r0.y, r0.x, r0.x
    mul_pp r0.y, r0.y, r0.y
    mul_pp r0.x, r0.x, r0.y
    lrp_pp r6.xyz, r0.x, c18.x, r2
    mul_pp r0.xyw, r5.xyzz, r6.xyzz
    mad_pp r0.xyw, r3.xyzz, r4.xyzz, r0
    mul_pp r3.xyz, r9, r0.z
    lrp_pp r4.xyz, r1.z, r1.x, r2
    mad_pp oC0.xyz, r3, r4, r0.xyww
    mov_pp oC0.w, c18.x

// approximately 164 instruction slots used (5 texture, 159 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 22 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 2 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[45], immediateIndexed
      dcl_constantbuffer CB2[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
   5: dp3 r0.x, v2.xyzx, cb2[16].xyzx
   6: dp3 r0.y, v2.xyzx, cb2[17].xyzx
   7: dp3 r0.z, v2.xyzx, cb2[18].xyzx
   8: dp3 r0.w, r0.xyzx, r0.xyzx
   9: rsq r0.w, r0.w
  10: mul r0.xyz, r0.wwww, r0.xyzx
  11: mov o2.xyz, r0.xyzx
  12: mul r1.xyz, v0.yyyy, cb2[13].xyzx
  13: mad r1.xyz, cb2[12].xyzx, v0.xxxx, r1.xyzx
  14: mad r1.xyz, cb2[14].xyzx, v0.zzzz, r1.xyzx
  15: mad o3.xyz, cb2[15].xyzx, v0.wwww, r1.xyzx
  16: mul r0.w, r0.y, r0.y
  17: mad r0.w, r0.x, r0.x, -r0.w
  18: mul r1.xyzw, r0.yzzx, r0.xyzz
  19: dp4 r0.x, cb1[41].xyzw, r1.xyzw
  20: dp4 r0.y, cb1[42].xyzw, r1.xyzw
  21: dp4 r0.z, cb1[43].xyzw, r1.xyzw
  22: mad o4.xyz, cb1[44].xyzx, r0.wwww, r0.xyzx
  23: mov o5.xyzw, l(0,0,0,0)
  24: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 146 math, 4 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0
Set CUBE Texture "unity_SpecCube0" to slot 1
Set CUBE Texture "unity_SpecCube1" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _Glossiness at 64
  Float _Metallic at 68
  Vector4 _Color at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 6   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[41], immediateIndexed
      dcl_constantbuffer CB3[8], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 12
   0: add r0.xyz, -v3.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
   5: mul r3.xyz, r2.xyzx, cb0[5].xyzx
   6: add r1.w, -cb0[4].x, l(1.000000)
   7: dp3 r2.w, -r1.xyzx, v2.xyzx
   8: add r2.w, r2.w, r2.w
   9: mad r4.xyz, v2.xyzx, -r2.wwww, -r1.xyzx
  10: eq r2.w, cb4[0].x, l(1.000000)
  11: if_nz r2.w
  12:   eq r2.w, cb4[0].y, l(1.000000)
  13:   mul r5.xyz, v3.yyyy, cb4[2].xyzx
  14:   mad r5.xyz, cb4[1].xyzx, v3.xxxx, r5.xyzx
  15:   mad r5.xyz, cb4[3].xyzx, v3.zzzz, r5.xyzx
  16:   add r5.xyz, r5.xyzx, cb4[4].xyzx
  17:   movc r5.xyz, r2.wwww, r5.xyzx, v3.xyzx
  18:   add r5.xyz, r5.xyzx, -cb4[6].xyzx
  19:   mul r5.yzw, r5.xxyz, cb4[5].xxyz
  20:   mul r2.w, r5.y, l(0.250000)
  21:   mul r3.w, cb4[0].z, l(0.500000)
  22:   mad r4.w, -cb4[0].z, l(0.500000), l(0.250000)
  23:   max r2.w, r2.w, r3.w
  24:   min r5.x, r4.w, r2.w
  25:   sample r6.xyzw, r5.xzwx, t3.xyzw, s1
  26:   add r7.xyz, r5.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  27:   sample r7.xyzw, r7.xyzx, t3.xyzw, s1
  28:   add r5.xyz, r5.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  29:   sample r5.xyzw, r5.xyzx, t3.xyzw, s1
  30:   mov r8.xyz, v2.xyzx
  31:   mov r8.w, l(1.000000)
  32:   dp4 r6.x, r6.xyzw, r8.xyzw
  33:   dp4 r6.y, r7.xyzw, r8.xyzw
  34:   dp4 r6.z, r5.xyzw, r8.xyzw
  35: else 
  36:   mov r5.xyz, v2.xyzx
  37:   mov r5.w, l(1.000000)
  38:   dp4 r6.x, cb2[38].xyzw, r5.xyzw
  39:   dp4 r6.y, cb2[39].xyzw, r5.xyzw
  40:   dp4 r6.z, cb2[40].xyzw, r5.xyzw
  41: endif 
  42: add r5.xyz, r6.xyzx, v4.xyzx
  43: max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: log r5.xyz, r5.xyzx
  45: mul r5.xyz, r5.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  46: exp r5.xyz, r5.xyzx
  47: mad r5.xyz, r5.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  48: max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: lt r2.w, l(0.000000), cb3[2].w
  50: if_nz r2.w
  51:   dp3 r2.w, r4.xyzx, r4.xyzx
  52:   rsq r2.w, r2.w
  53:   mul r6.xyz, r2.wwww, r4.xyzx
  54:   add r7.xyz, -v3.xyzx, cb3[0].xyzx
  55:   div r7.xyz, r7.xyzx, r6.xyzx
  56:   add r8.xyz, -v3.xyzx, cb3[1].xyzx
  57:   div r8.xyz, r8.xyzx, r6.xyzx
  58:   lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  59:   movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  60:   min r2.w, r7.y, r7.x
  61:   min r2.w, r7.z, r2.w
  62:   add r7.xyz, v3.xyzx, -cb3[2].xyzx
  63:   mad r6.xyz, r6.xyzx, r2.wwww, r7.xyzx
  64: else 
  65:   mov r6.xyz, r4.xyzx
  66: endif 
  67: mad r2.w, -r1.w, l(0.700000), l(1.700000)
  68: mul r2.w, r1.w, r2.w
  69: mul r2.w, r2.w, l(6.000000)
  70: sample_l r6.xyzw, r6.xyzx, t1.xyzw, s0, r2.w
  71: eq r3.w, cb3[3].w, l(1.000000)
  72: movc r3.w, r3.w, r6.w, l(1.000000)
  73: mul r3.w, r3.w, cb3[3].x
  74: mul r7.xyz, r6.xyzx, r3.wwww
  75: lt r4.w, cb3[1].w, l(0.999990)
  76: if_nz r4.w
  77:   lt r4.w, l(0.000000), cb3[6].w
  78:   if_nz r4.w
  79:     dp3 r4.w, r4.xyzx, r4.xyzx
  80:     rsq r4.w, r4.w
  81:     mul r8.xyz, r4.wwww, r4.xyzx
  82:     add r9.xyz, -v3.xyzx, cb3[4].xyzx
  83:     div r9.xyz, r9.xyzx, r8.xyzx
  84:     add r10.xyz, -v3.xyzx, cb3[5].xyzx
  85:     div r10.xyz, r10.xyzx, r8.xyzx
  86:     lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  87:     movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  88:     min r4.w, r9.y, r9.x
  89:     min r4.w, r9.z, r4.w
  90:     add r9.xyz, v3.xyzx, -cb3[6].xyzx
  91:     mad r4.xyz, r8.xyzx, r4.wwww, r9.xyzx
  92:   endif 
  93:   sample_l r4.xyzw, r4.xyzx, t2.xyzw, s0, r2.w
  94:   eq r2.w, cb3[7].w, l(1.000000)
  95:   movc r2.w, r2.w, r4.w, l(1.000000)
  96:   mul r2.w, r2.w, cb3[7].x
  97:   mul r4.xyz, r4.xyzx, r2.wwww
  98:   mad r6.xyz, r3.wwww, r6.xyzx, -r4.xyzx
  99:   mad r7.xyz, cb3[1].wwww, r6.xyzx, r4.xyzx
 100: endif 
 101: dp3 r2.w, v2.xyzx, v2.xyzx
 102: rsq r2.w, r2.w
 103: mul r4.xyz, r2.wwww, v2.xyzx
 104: mad r2.xyz, r2.xyzx, cb0[5].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 105: mad r2.xyz, cb0[4].yyyy, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 106: mad r2.w, -cb0[4].y, l(0.779084), l(0.779084)
 107: mul r3.xyz, r2.wwww, r3.xyzx
 108: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 109: dp3 r0.w, r0.xyzx, r0.xyzx
 110: max r0.w, r0.w, l(0.001000)
 111: rsq r0.w, r0.w
 112: mul r0.xyz, r0.wwww, r0.xyzx
 113: dp3 r0.w, r4.xyzx, r1.xyzx
 114: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
 115: dp3_sat r1.y, r4.xyzx, r0.xyzx
 116: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 117: mul r0.y, r0.x, r0.x
 118: dp2 r0.y, r0.yyyy, r1.wwww
 119: add r0.y, r0.y, l(-0.500000)
 120: add r0.z, -r1.x, l(1.000000)
 121: mul r1.z, r0.z, r0.z
 122: mul r1.z, r1.z, r1.z
 123: mul r0.z, r0.z, r1.z
 124: mad r0.z, r0.y, r0.z, l(1.000000)
 125: add r1.z, -|r0.w|, l(1.000000)
 126: mul r3.w, r1.z, r1.z
 127: mul r3.w, r3.w, r3.w
 128: mul r1.z, r1.z, r3.w
 129: mad r0.y, r0.y, r1.z, l(1.000000)
 130: mul r0.y, r0.y, r0.z
 131: mul r0.z, r1.w, r1.w
 132: mad r3.w, -r1.w, r1.w, l(1.000000)
 133: mad r4.x, |r0.w|, r3.w, r0.z
 134: mad r3.w, r1.x, r3.w, r0.z
 135: mul r0.w, |r0.w|, r3.w
 136: mad r0.w, r1.x, r4.x, r0.w
 137: add r0.w, r0.w, l(0.000010)
 138: div r0.w, l(0.500000), r0.w
 139: mul r3.w, r0.z, r0.z
 140: mad r4.x, r1.y, r3.w, -r1.y
 141: mad r1.y, r4.x, r1.y, l(1.000000)
 142: mul r3.w, r3.w, l(0.318310)
 143: mad r1.y, r1.y, r1.y, l(0.000000)
 144: div r1.y, r3.w, r1.y
 145: mul r0.w, r0.w, r1.y
 146: mul r0.w, r0.w, l(3.141593)
 147: max r0.w, r0.w, l(0.000100)
 148: sqrt r0.w, r0.w
 149: mul r0.yw, r1.xxxx, r0.yyyw
 150: mul r0.z, r0.z, r1.w
 151: mad r0.z, -r0.z, l(0.280000), l(1.000000)
 152: dp3 r1.x, r2.xyzx, r2.xyzx
 153: ne r1.x, r1.x, l(0.000000)
 154: and r1.x, r1.x, l(0x3f800000)
 155: mul r0.w, r0.w, r1.x
 156: add r1.x, -r2.w, cb0[4].x
 157: add_sat r1.x, r1.x, l(1.000000)
 158: mad r4.xyz, cb0[2].xyzx, r0.yyyy, r5.xyzx
 159: mul r5.xyz, r0.wwww, cb0[2].xyzx
 160: add r0.x, -r0.x, l(1.000000)
 161: mul r0.y, r0.x, r0.x
 162: mul r0.y, r0.y, r0.y
 163: mul r0.x, r0.x, r0.y
 164: add r6.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 165: mad r0.xyw, r6.xyxz, r0.xxxx, r2.xyxz
 166: mul r0.xyw, r0.xyxw, r5.xyxz
 167: mad r0.xyw, r3.xyxz, r4.xyxz, r0.xyxw
 168: mul r3.xyz, r7.xyzx, r0.zzzz
 169: add r1.xyw, -r2.xyxz, r1.xxxx
 170: mad r1.xyz, r1.zzzz, r1.xywx, r2.xyzx
 171: mad o0.xyz, r3.xyzx, r1.xyzx, r0.xywx
 172: mov o0.w, l(1.000000)
 173: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN 
-- Vertex shader for "d3d9":
// Stats: 32 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _MainTex_ST at 15
Vector4 _ProjectionParams at 10
Vector4 unity_SHBb at 13
Vector4 unity_SHBg at 12
Vector4 unity_SHBr at 11
Vector4 unity_SHC at 14

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   glstate_matrix_mvp  c0       4
//   unity_ObjectToWorld c4       3
//   unity_WorldToObject c7       3
//   _ProjectionParams   c10      1
//   unity_SHBr          c11      1
//   unity_SHBg          c12      1
//   unity_SHBb          c13      1
//   unity_SHC           c14      1
//   _MainTex_ST         c15      1
//

    vs_3_0
    def c16, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord3 o4.xyz
    dcl_texcoord4 o5
    dcl_texcoord6 o6
    mad o1.xy, v2, c15, c15.zwzw
    dp4 o3.x, c4, v0
    dp4 o3.y, c5, v0
    dp4 o3.z, c6, v0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o2.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o4.xyz, c14, r0.x, r1
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.y, c1, r0
    mul r2.x, r1.y, c10.x
    mul r2.w, r2.x, c16.z
    dp4 r1.x, c0, r0
    dp4 r1.w, c3, r0
    dp4 r1.z, c2, r0
    mul r2.xz, r1.xyww, c16.z
    mov r3, r1
    mov o5.zw, r1
    add o5.xy, r2.z, r2.xwzw
    mov o6, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 32 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 148 math, 6 textures, 5 branches
Vector4 _Color at 16
Float _Glossiness at 14
Vector4 _LightColor0 at 13
Float _Metallic at 15
Vector4 _WorldSpaceCameraPos at 0
Vector4 _WorldSpaceLightPos0 at 1
Vector4 unity_SHAb at 4
Vector4 unity_SHAg at 3
Vector4 unity_SHAr at 2
Vector4 unity_SpecCube0_BoxMax at 5
Vector4 unity_SpecCube0_BoxMin at 6
Vector4 unity_SpecCube0_HDR at 8
Vector4 unity_SpecCube0_ProbePosition at 7
Vector4 unity_SpecCube1_BoxMax at 9
Vector4 unity_SpecCube1_BoxMin at 10
Vector4 unity_SpecCube1_HDR at 12
Vector4 unity_SpecCube1_ProbePosition at 11

Set CUBE Texture "unity_SpecCube0" to slot 0
Set CUBE Texture "unity_SpecCube1" to slot 1
Set 2D Texture "_ShadowMapTexture" to slot 2
Set 2D Texture "_MainTex" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   _WorldSpaceCameraPos          c0       1
//   _WorldSpaceLightPos0          c1       1
//   unity_SHAr                    c2       1
//   unity_SHAg                    c3       1
//   unity_SHAb                    c4       1
//   unity_SpecCube0_BoxMax        c5       1
//   unity_SpecCube0_BoxMin        c6       1
//   unity_SpecCube0_ProbePosition c7       1
//   unity_SpecCube0_HDR           c8       1
//   unity_SpecCube1_BoxMax        c9       1
//   unity_SpecCube1_BoxMin        c10      1
//   unity_SpecCube1_ProbePosition c11      1
//   unity_SpecCube1_HDR           c12      1
//   _LightColor0                  c13      1
//   _Glossiness                   c14      1
//   _Metallic                     c15      1
//   _Color                        c16      1
//   unity_SpecCube0               s0       1
//   unity_SpecCube1               s1       1
//   _ShadowMapTexture             s2       1
//   _MainTex                      s3       1
//

    ps_3_0
    def c17, 1.05499995, -0.0549999997, 0.699999988, 1.70000005
    def c18, 1, 0, 0.416666657, 6
    def c19, 0.999989986, -0.220916301, 0.220916301, 0.779083729
    def c20, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c21, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c22, 0.00999999978, 0.280000001, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2 v2.xyz
    dcl_texcoord3_pp v3.xyz
    dcl_texcoord4 v4
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    add r0.xyz, c0, -v2
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul_pp r1.xyz, r0.w, r0
    texld r2, v0, s3
    mul_pp r3.xyz, r2, c16
    texldp_pp r4, v4, s2
    mov r5.xy, c18
    add_pp r1.w, r5.x, -c14.x
    dp3_pp r2.w, -r1, v1
    add_pp r2.w, r2.w, r2.w
    mad_pp r4.yzw, v1.xxyz, -r2.w, -r1.xxyz
    mul_pp r6.xyz, r4.x, c13
    mad_pp r7, v1.xyzx, c18.xxxy, c18.yyyx
    dp4_pp r8.x, c2, r7
    dp4_pp r8.y, c3, r7
    dp4_pp r8.z, c4, r7
    add_pp r7.xyz, r8, v3
    max_pp r8.xyz, r7, c18.y
    log_pp r7.x, r8.x
    log_pp r7.y, r8.y
    log_pp r7.z, r8.z
    mul_pp r7.xyz, r7, c18.z
    exp_pp r8.x, r7.x
    exp_pp r8.y, r7.y
    exp_pp r8.z, r7.z
    mad_pp r7.xyz, r8, c17.x, c17.y
    max_pp r8.xyz, r7, c18.y
    if_lt -c7.w, r5.y
      nrm_pp r7.xyz, r4.yzww
      add r9.xyz, c5, -v2
      rcp r10.x, r7.x
      rcp r10.y, r7.y
      rcp r10.z, r7.z
      mul_pp r9.xyz, r9, r10
      add r11.xyz, c6, -v2
      mul_pp r10.xyz, r10, r11
      cmp_pp r9.xyz, -r7, r10, r9
      min_pp r2.w, r9.y, r9.x
      min_pp r3.w, r9.z, r2.w
      add r9.xyz, -c7, v2
      mad_pp r7.xyz, r7, r3.w, r9
    else
      mov_pp r7.xyz, r4.yzww
    endif
    mad_pp r2.w, r1.w, -c17.z, c17.w
    mul_pp r2.w, r1.w, r2.w
    mul_pp r7.w, r2.w, c18.w
    texldl_pp r9, r7, s0
    add r2.w, -r5.x, c8.w
    cmp_pp r2.w, -r2_abs.w, r9.w, c18.x
    mul_pp r2.w, r2.w, c8.x
    mul_pp r10.xyz, r9, r2.w
    mov r11, c19
    if_lt c6.w, r11.x
      if_lt -c11.w, r5.y
        nrm_pp r12.xyz, r4.yzww
        add r5.yzw, c9.xxyz, -v2.xxyz
        rcp r13.x, r12.x
        rcp r13.y, r12.y
        rcp r13.z, r12.z
        mul_pp r5.yzw, r5, r13.xxyz
        add r14.xyz, c10, -v2
        mul_pp r13.xyz, r13, r14
        cmp_pp r5.yzw, -r12.xxyz, r13.xxyz, r5
        min_pp r3.w, r5.z, r5.y
        min_pp r4.x, r5.w, r3.w
        add r5.yzw, -c11.xxyz, v2.xxyz
        mad_pp r7.xyz, r12, r4.x, r5.yzww
      else
        mov_pp r7.xyz, r4.yzww
      endif
      texldl_pp r4, r7, s1
      add r3.w, -r5.x, c12.w
      cmp_pp r3.w, -r3_abs.w, r4.w, c18.x
      mul_pp r3.w, r3.w, c12.x
      mul_pp r4.xyz, r4, r3.w
      mad r5.xyz, r2.w, r9, -r4
      mad_pp r10.xyz, c6.w, r5, r4
    endif
    nrm_pp r4.xyz, v1
    mad_pp r2.xyz, r2, c16, r11.y
    mad_pp r2.xyz, c15.x, r2, r11.z
    mad_pp r2.w, c15.x, -r11.w, r11.w
    mul_pp r3.xyz, r2.w, r3
    mad_pp r0.xyz, r0, r0.w, c1
    dp3_pp r0.w, r0, r0
    add r3.w, -r0.w, c20.x
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r3.w, c20.y, r0.w
    mul_pp r0.xyz, r0.w, r0
    dp3_pp r0.w, r4, r1
    dp3_sat_pp r1.x, r4, c1
    dp3_sat_pp r1.y, r4, r0
    dp3_sat_pp r0.x, c1, r0
    mul_pp r0.y, r0.x, r0.x
    dp2add_pp r0.y, r0.y, r1.w, c20.z
    add_pp r0.z, -r1.x, c18.x
    mul_pp r1.z, r0.z, r0.z
    mul_pp r1.z, r1.z, r1.z
    mul_pp r0.z, r0.z, r1.z
    mad_pp r0.z, r0.y, r0.z, c18.x
    add_pp r1.z, -r0_abs.w, c18.x
    mul_pp r3.w, r1.z, r1.z
    mul_pp r3.w, r3.w, r3.w
    mul_pp r1.z, r1.z, r3.w
    mad_pp r0.y, r0.y, r1.z, c18.x
    mul_pp r0.y, r0.y, r0.z
    mul_pp r0.z, r1.w, r1.w
    mad_pp r3.w, r1.w, -r1.w, c18.x
    mad_pp r4.x, r0_abs.w, r3.w, r0.z
    mad_pp r3.w, r1.x, r3.w, r0.z
    mul_pp r0.w, r0_abs.w, r3.w
    mad r0.w, r1.x, r4.x, r0.w
    add r0.w, r0.w, c20.w
    rcp r0.w, r0.w
    mul_pp r0.w, r0.w, -c20.z
    mul_pp r3.w, r0.z, r0.z
    mad_pp r4.x, r1.y, r3.w, -r1.y
    mad_pp r1.y, r4.x, r1.y, c18.x
    mul r3.w, r3.w, c21.x
    mad r1.y, r1.y, r1.y, c21.y
    rcp r1.y, r1.y
    mul_pp r1.y, r1.y, r3.w
    mul r0.w, r0.w, r1.y
    mul_pp r1.y, r0.w, c21.z
    mad r0.w, r0.w, -c21.z, c21.w
    rsq r1.y, r1.y
    rcp_pp r1.y, r1.y
    cmp_pp r0.w, r0.w, c22.x, r1.y
    mul_pp r0.yw, r1.x, r0
    mul_pp r0.z, r0.z, r1.w
    mad_pp r0.z, r0.z, -c22.y, c22.z
    dp3_pp r1.x, r2, r2
    cmp r1.x, -r1.x, c18.y, c18.x
    mul_pp r0.w, r0.w, r1.x
    add_pp r1.x, -r2.w, c18.x
    add_sat_pp r1.x, r1.x, c14.x
    mad_pp r4.xyz, r6, r0.y, r8
    mul_pp r5.xyz, r6, r0.w
    add_pp r0.x, -r0.x, c18.x
    mul_pp r0.y, r0.x, r0.x
    mul_pp r0.y, r0.y, r0.y
    mul_pp r0.x, r0.x, r0.y
    lrp_pp r6.xyz, r0.x, c18.x, r2
    mul_pp r0.xyw, r5.xyzz, r6.xyzz
    mad_pp r0.xyw, r3.xyzz, r4.xyzz, r0
    mul_pp r3.xyz, r10, r0.z
    lrp_pp r4.xyz, r1.z, r1.x, r2
    mad_pp oC0.xyz, r3, r4, r0.xyww
    mov_pp oC0.w, c18.x

// approximately 166 instruction slots used (6 texture, 160 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 25 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mov o0.xyzw, r0.xyzw
   5: mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
   6: dp3 r1.x, v2.xyzx, cb3[16].xyzx
   7: dp3 r1.y, v2.xyzx, cb3[17].xyzx
   8: dp3 r1.z, v2.xyzx, cb3[18].xyzx
   9: dp3 r1.w, r1.xyzx, r1.xyzx
  10: rsq r1.w, r1.w
  11: mul r1.xyz, r1.wwww, r1.xyzx
  12: mov o2.xyz, r1.xyzx
  13: mul r2.xyz, v0.yyyy, cb3[13].xyzx
  14: mad r2.xyz, cb3[12].xyzx, v0.xxxx, r2.xyzx
  15: mad r2.xyz, cb3[14].xyzx, v0.zzzz, r2.xyzx
  16: mad o3.xyz, cb3[15].xyzx, v0.wwww, r2.xyzx
  17: mul r1.w, r1.y, r1.y
  18: mad r1.w, r1.x, r1.x, -r1.w
  19: mul r2.xyzw, r1.yzzx, r1.xyzz
  20: dp4 r1.x, cb2[41].xyzw, r2.xyzw
  21: dp4 r1.y, cb2[42].xyzw, r2.xyzw
  22: dp4 r1.z, cb2[43].xyzw, r2.xyzw
  23: mad o4.xyz, cb2[44].xyzx, r1.wwww, r1.xyzx
  24: mul r0.y, r0.y, cb1[5].x
  25: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  26: mov o5.zw, r0.zzzw
  27: add o5.xy, r1.zzzz, r1.xwxx
  28: mov o6.xyzw, l(0,0,0,0)
  29: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 148 math, 5 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1
Set CUBE Texture "unity_SpecCube0" to slot 2
Set CUBE Texture "unity_SpecCube1" to slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 4

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _Glossiness at 64
  Float _Metallic at 68
  Vector4 _Color at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy w
// TEXCOORD                 6   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[41], immediateIndexed
      dcl_constantbuffer CB3[8], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: add r0.xyz, -v3.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s3
   5: mul r3.xyz, r2.xyzx, cb0[5].xyzx
   6: div r4.xy, v5.xyxx, v5.wwww
   7: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
   8: add r1.w, -cb0[4].x, l(1.000000)
   9: dp3 r2.w, -r1.xyzx, v2.xyzx
  10: add r2.w, r2.w, r2.w
  11: mad r4.yzw, v2.xxyz, -r2.wwww, -r1.xxyz
  12: mul r5.xyz, r4.xxxx, cb0[2].xyzx
  13: eq r2.w, cb4[0].x, l(1.000000)
  14: if_nz r2.w
  15:   eq r2.w, cb4[0].y, l(1.000000)
  16:   mul r6.xyz, v3.yyyy, cb4[2].xyzx
  17:   mad r6.xyz, cb4[1].xyzx, v3.xxxx, r6.xyzx
  18:   mad r6.xyz, cb4[3].xyzx, v3.zzzz, r6.xyzx
  19:   add r6.xyz, r6.xyzx, cb4[4].xyzx
  20:   movc r6.xyz, r2.wwww, r6.xyzx, v3.xyzx
  21:   add r6.xyz, r6.xyzx, -cb4[6].xyzx
  22:   mul r6.yzw, r6.xxyz, cb4[5].xxyz
  23:   mul r2.w, r6.y, l(0.250000)
  24:   mul r3.w, cb4[0].z, l(0.500000)
  25:   mad r4.x, -cb4[0].z, l(0.500000), l(0.250000)
  26:   max r2.w, r2.w, r3.w
  27:   min r6.x, r4.x, r2.w
  28:   sample r7.xyzw, r6.xzwx, t4.xyzw, s1
  29:   add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  30:   sample r8.xyzw, r8.xyzx, t4.xyzw, s1
  31:   add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  32:   sample r6.xyzw, r6.xyzx, t4.xyzw, s1
  33:   mov r9.xyz, v2.xyzx
  34:   mov r9.w, l(1.000000)
  35:   dp4 r7.x, r7.xyzw, r9.xyzw
  36:   dp4 r7.y, r8.xyzw, r9.xyzw
  37:   dp4 r7.z, r6.xyzw, r9.xyzw
  38: else 
  39:   mov r6.xyz, v2.xyzx
  40:   mov r6.w, l(1.000000)
  41:   dp4 r7.x, cb2[38].xyzw, r6.xyzw
  42:   dp4 r7.y, cb2[39].xyzw, r6.xyzw
  43:   dp4 r7.z, cb2[40].xyzw, r6.xyzw
  44: endif 
  45: add r6.xyz, r7.xyzx, v4.xyzx
  46: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: log r6.xyz, r6.xyzx
  48: mul r6.xyz, r6.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  49: exp r6.xyz, r6.xyzx
  50: mad r6.xyz, r6.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  51: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: lt r2.w, l(0.000000), cb3[2].w
  53: if_nz r2.w
  54:   dp3 r2.w, r4.yzwy, r4.yzwy
  55:   rsq r2.w, r2.w
  56:   mul r7.xyz, r2.wwww, r4.yzwy
  57:   add r8.xyz, -v3.xyzx, cb3[0].xyzx
  58:   div r8.xyz, r8.xyzx, r7.xyzx
  59:   add r9.xyz, -v3.xyzx, cb3[1].xyzx
  60:   div r9.xyz, r9.xyzx, r7.xyzx
  61:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  62:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  63:   min r2.w, r8.y, r8.x
  64:   min r2.w, r8.z, r2.w
  65:   add r8.xyz, v3.xyzx, -cb3[2].xyzx
  66:   mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
  67: else 
  68:   mov r7.xyz, r4.yzwy
  69: endif 
  70: mad r2.w, -r1.w, l(0.700000), l(1.700000)
  71: mul r2.w, r1.w, r2.w
  72: mul r2.w, r2.w, l(6.000000)
  73: sample_l r7.xyzw, r7.xyzx, t2.xyzw, s0, r2.w
  74: eq r3.w, cb3[3].w, l(1.000000)
  75: movc r3.w, r3.w, r7.w, l(1.000000)
  76: mul r3.w, r3.w, cb3[3].x
  77: mul r8.xyz, r7.xyzx, r3.wwww
  78: lt r4.x, cb3[1].w, l(0.999990)
  79: if_nz r4.x
  80:   lt r4.x, l(0.000000), cb3[6].w
  81:   if_nz r4.x
  82:     dp3 r4.x, r4.yzwy, r4.yzwy
  83:     rsq r4.x, r4.x
  84:     mul r9.xyz, r4.xxxx, r4.yzwy
  85:     add r10.xyz, -v3.xyzx, cb3[4].xyzx
  86:     div r10.xyz, r10.xyzx, r9.xyzx
  87:     add r11.xyz, -v3.xyzx, cb3[5].xyzx
  88:     div r11.xyz, r11.xyzx, r9.xyzx
  89:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  90:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  91:     min r4.x, r10.y, r10.x
  92:     min r4.x, r10.z, r4.x
  93:     add r10.xyz, v3.xyzx, -cb3[6].xyzx
  94:     mad r4.yzw, r9.xxyz, r4.xxxx, r10.xxyz
  95:   endif 
  96:   sample_l r4.xyzw, r4.yzwy, t3.xyzw, s0, r2.w
  97:   eq r2.w, cb3[7].w, l(1.000000)
  98:   movc r2.w, r2.w, r4.w, l(1.000000)
  99:   mul r2.w, r2.w, cb3[7].x
 100:   mul r4.xyz, r4.xyzx, r2.wwww
 101:   mad r7.xyz, r3.wwww, r7.xyzx, -r4.xyzx
 102:   mad r8.xyz, cb3[1].wwww, r7.xyzx, r4.xyzx
 103: endif 
 104: dp3 r2.w, v2.xyzx, v2.xyzx
 105: rsq r2.w, r2.w
 106: mul r4.xyz, r2.wwww, v2.xyzx
 107: mad r2.xyz, r2.xyzx, cb0[5].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 108: mad r2.xyz, cb0[4].yyyy, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 109: mad r2.w, -cb0[4].y, l(0.779084), l(0.779084)
 110: mul r3.xyz, r2.wwww, r3.xyzx
 111: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 112: dp3 r0.w, r0.xyzx, r0.xyzx
 113: max r0.w, r0.w, l(0.001000)
 114: rsq r0.w, r0.w
 115: mul r0.xyz, r0.wwww, r0.xyzx
 116: dp3 r0.w, r4.xyzx, r1.xyzx
 117: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
 118: dp3_sat r1.y, r4.xyzx, r0.xyzx
 119: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 120: mul r0.y, r0.x, r0.x
 121: dp2 r0.y, r0.yyyy, r1.wwww
 122: add r0.y, r0.y, l(-0.500000)
 123: add r0.z, -r1.x, l(1.000000)
 124: mul r1.z, r0.z, r0.z
 125: mul r1.z, r1.z, r1.z
 126: mul r0.z, r0.z, r1.z
 127: mad r0.z, r0.y, r0.z, l(1.000000)
 128: add r1.z, -|r0.w|, l(1.000000)
 129: mul r3.w, r1.z, r1.z
 130: mul r3.w, r3.w, r3.w
 131: mul r1.z, r1.z, r3.w
 132: mad r0.y, r0.y, r1.z, l(1.000000)
 133: mul r0.y, r0.y, r0.z
 134: mul r0.z, r1.w, r1.w
 135: mad r3.w, -r1.w, r1.w, l(1.000000)
 136: mad r4.x, |r0.w|, r3.w, r0.z
 137: mad r3.w, r1.x, r3.w, r0.z
 138: mul r0.w, |r0.w|, r3.w
 139: mad r0.w, r1.x, r4.x, r0.w
 140: add r0.w, r0.w, l(0.000010)
 141: div r0.w, l(0.500000), r0.w
 142: mul r3.w, r0.z, r0.z
 143: mad r4.x, r1.y, r3.w, -r1.y
 144: mad r1.y, r4.x, r1.y, l(1.000000)
 145: mul r3.w, r3.w, l(0.318310)
 146: mad r1.y, r1.y, r1.y, l(0.000000)
 147: div r1.y, r3.w, r1.y
 148: mul r0.w, r0.w, r1.y
 149: mul r0.w, r0.w, l(3.141593)
 150: max r0.w, r0.w, l(0.000100)
 151: sqrt r0.w, r0.w
 152: mul r0.yw, r1.xxxx, r0.yyyw
 153: mul r0.z, r0.z, r1.w
 154: mad r0.z, -r0.z, l(0.280000), l(1.000000)
 155: dp3 r1.x, r2.xyzx, r2.xyzx
 156: ne r1.x, r1.x, l(0.000000)
 157: and r1.x, r1.x, l(0x3f800000)
 158: mul r0.w, r0.w, r1.x
 159: add r1.x, -r2.w, cb0[4].x
 160: add_sat r1.x, r1.x, l(1.000000)
 161: mad r4.xyz, r5.xyzx, r0.yyyy, r6.xyzx
 162: mul r5.xyz, r5.xyzx, r0.wwww
 163: add r0.x, -r0.x, l(1.000000)
 164: mul r0.y, r0.x, r0.x
 165: mul r0.y, r0.y, r0.y
 166: mul r0.x, r0.x, r0.y
 167: add r6.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 168: mad r0.xyw, r6.xyxz, r0.xxxx, r2.xyxz
 169: mul r0.xyw, r0.xyxw, r5.xyxz
 170: mad r0.xyw, r3.xyxz, r4.xyxz, r0.xyxw
 171: mul r3.xyz, r8.xyzx, r0.zzzz
 172: add r1.xyw, -r2.xyxz, r1.xxxx
 173: mad r1.xyz, r1.zzzz, r1.xywx, r2.xyzx
 174: mad o0.xyz, r3.xyzx, r1.xyzx, r0.xywx
 175: mov o0.w, l(1.000000)
 176: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL VERTEXLIGHT_ON 
-- Vertex shader for "d3d9":
// Stats: 57 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 glstate_matrix_mvp at 4
Matrix4x3 unity_ObjectToWorld at 8
Matrix4x3 unity_WorldToObject at 11
Vector4 _MainTex_ST at 22
Vector4 unity_4LightAtten0 at 17
Vector4 unity_4LightPosX0 at 14
Vector4 unity_4LightPosY0 at 15
Vector4 unity_4LightPosZ0 at 16
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHBb at 20
Vector4 unity_SHBg at 19
Vector4 unity_SHBr at 18
Vector4 unity_SHC at 21

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _MainTex_ST;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_LightColor    c0       4
//   glstate_matrix_mvp  c4       4
//   unity_ObjectToWorld c8       3
//   unity_WorldToObject c11      3
//   unity_4LightPosX0   c14      1
//   unity_4LightPosY0   c15      1
//   unity_4LightPosZ0   c16      1
//   unity_4LightAtten0  c17      1
//   unity_SHBr          c18      1
//   unity_SHBg          c19      1
//   unity_SHBb          c20      1
//   unity_SHC           c21      1
//   _MainTex_ST         c22      1
//

    vs_3_0
    def c23, 1, 0, 9.99999997e-007, 0.0125228781
    def c24, 0.305306017, 0.682171106, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord3 o4.xyz
    dcl_texcoord6 o5
    mad r0, v0.xyzx, c23.xxxy, c23.yyyx
    dp4 r5.x, c4, r0
    dp4 r5.y, c5, r0
    dp4 r5.z, c6, r0
    dp4 r5.w, c7, r0
    mad o1.xy, v2, c22, c22.zwzw
    dp4 r0.x, c8, v0
    add r1, -r0.x, c14
    dp4 r0.y, c9, v0
    add r2, -r0.y, c15
    mul r3.xyz, c12, v1.y
    mad r3.xyz, v1.x, c11, r3
    mad r3.xyz, v1.z, c13, r3
    nrm r4.xyz, r3
    mul r3, r2, r4.y
    mul r2, r2, r2
    mad r2, r1, r1, r2
    mad r1, r1, r4.x, r3
    dp4 r0.z, c10, v0
    add r3, -r0.z, c16
    mov o3.xyz, r0
    mad r0, r3, r4.z, r1
    mad r1, r3, r3, r2
    max r1, r1, c23.z
    rsq r2.x, r1.x
    rsq r2.y, r1.y
    rsq r2.z, r1.z
    rsq r2.w, r1.w
    mov r3.x, c23.x
    mad r1, r1, c17, r3.x
    mul r0, r0, r2
    max r0, r0, c23.y
    rcp r2.x, r1.x
    rcp r2.y, r1.y
    rcp r2.z, r1.z
    rcp r2.w, r1.w
    mul r0, r0, r2
    mul r1.xyz, r0.y, c1
    mad r1.xyz, c0, r0.x, r1
    mad r0.xyz, c2, r0.z, r1
    mad r0.xyz, c3, r0.w, r0
    mad r1.xyz, r0, c24.x, c24.y
    mad r1.xyz, r0, r1, c23.w
    mul r0.w, r4.y, r4.y
    mad r0.w, r4.x, r4.x, -r0.w
    mul r2, r4.yzzx, r4.xyzz
    mov o2.xyz, r4
    dp4 r3.x, c18, r2
    dp4 r3.y, c19, r2
    dp4 r3.z, c20, r2
    mad r2.xyz, c21, r0.w, r3
    mad o4.xyz, r0, r1, r2
    mov o5, c23.y
    mad o0.xy, r5.w, c255, r5
    mov o0.zw, r5

// approximately 57 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 45 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 2 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[45], immediateIndexed
      dcl_constantbuffer CB2[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
   5: dp3 r0.x, v2.xyzx, cb2[16].xyzx
   6: dp3 r0.y, v2.xyzx, cb2[17].xyzx
   7: dp3 r0.z, v2.xyzx, cb2[18].xyzx
   8: dp3 r0.w, r0.xyzx, r0.xyzx
   9: rsq r0.w, r0.w
  10: mul r0.xyz, r0.wwww, r0.xyzx
  11: mov o2.xyz, r0.xyzx
  12: mul r1.xyz, v0.yyyy, cb2[13].xyzx
  13: mad r1.xyz, cb2[12].xyzx, v0.xxxx, r1.xyzx
  14: mad r1.xyz, cb2[14].xyzx, v0.zzzz, r1.xyzx
  15: mad r1.xyz, cb2[15].xyzx, v0.wwww, r1.xyzx
  16: mov o3.xyz, r1.xyzx
  17: add r2.xyzw, -r1.xxxx, cb1[2].xyzw
  18: add r3.xyzw, -r1.yyyy, cb1[3].xyzw
  19: add r1.xyzw, -r1.zzzz, cb1[4].xyzw
  20: mul r4.xyzw, r0.yyyy, r3.xyzw
  21: mul r3.xyzw, r3.xyzw, r3.xyzw
  22: mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
  23: mad r2.xyzw, r2.xyzw, r0.xxxx, r4.xyzw
  24: mad r2.xyzw, r1.xyzw, r0.zzzz, r2.xyzw
  25: mad r1.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
  26: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  27: rsq r3.xyzw, r1.xyzw
  28: mad r1.xyzw, r1.xyzw, cb1[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  29: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  30: mul r2.xyzw, r2.xyzw, r3.xyzw
  31: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  32: mul r1.xyzw, r1.xyzw, r2.xyzw
  33: mul r2.xyz, r1.yyyy, cb1[7].xyzx
  34: mad r2.xyz, cb1[6].xyzx, r1.xxxx, r2.xyzx
  35: mad r1.xyz, cb1[8].xyzx, r1.zzzz, r2.xyzx
  36: mad r1.xyz, cb1[9].xyzx, r1.wwww, r1.xyzx
  37: mad r2.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  38: mad r2.xyz, r1.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  39: mul r0.w, r0.y, r0.y
  40: mad r0.w, r0.x, r0.x, -r0.w
  41: mul r3.xyzw, r0.yzzx, r0.xyzz
  42: dp4 r0.x, cb1[41].xyzw, r3.xyzw
  43: dp4 r0.y, cb1[42].xyzw, r3.xyzw
  44: dp4 r0.z, cb1[43].xyzw, r3.xyzw
  45: mad r0.xyz, cb1[44].xyzx, r0.wwww, r0.xyzx
  46: mad o4.xyz, r1.xyzx, r2.xyzx, r0.xyzx
  47: mov o5.xyzw, l(0,0,0,0)
  48: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON 
-- Vertex shader for "d3d9":
// Stats: 63 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 glstate_matrix_mvp at 4
Matrix4x3 unity_ObjectToWorld at 8
Matrix4x3 unity_WorldToObject at 11
Vector4 _MainTex_ST at 23
Vector4 _ProjectionParams at 14
Vector4 unity_4LightAtten0 at 18
Vector4 unity_4LightPosX0 at 15
Vector4 unity_4LightPosY0 at 16
Vector4 unity_4LightPosZ0 at 17
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHBb at 21
Vector4 unity_SHBg at 20
Vector4 unity_SHBr at 19
Vector4 unity_SHC at 22

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_LightColor    c0       4
//   glstate_matrix_mvp  c4       4
//   unity_ObjectToWorld c8       3
//   unity_WorldToObject c11      3
//   _ProjectionParams   c14      1
//   unity_4LightPosX0   c15      1
//   unity_4LightPosY0   c16      1
//   unity_4LightPosZ0   c17      1
//   unity_4LightAtten0  c18      1
//   unity_SHBr          c19      1
//   unity_SHBg          c20      1
//   unity_SHBb          c21      1
//   unity_SHC           c22      1
//   _MainTex_ST         c23      1
//

    vs_3_0
    def c24, 1, 0, 9.99999997e-007, 0.0125228781
    def c25, 0.305306017, 0.682171106, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord3 o4.xyz
    dcl_texcoord4 o5
    dcl_texcoord6 o6
    mad o1.xy, v2, c23, c23.zwzw
    dp4 r0.x, c8, v0
    add r1, -r0.x, c15
    dp4 r0.y, c9, v0
    add r2, -r0.y, c16
    mul r3.xyz, c12, v1.y
    mad r3.xyz, v1.x, c11, r3
    mad r3.xyz, v1.z, c13, r3
    nrm r4.xyz, r3
    mul r3, r2, r4.y
    mul r2, r2, r2
    mad r2, r1, r1, r2
    mad r1, r1, r4.x, r3
    dp4 r0.z, c10, v0
    add r3, -r0.z, c17
    mov o3.xyz, r0
    mad r0, r3, r4.z, r1
    mad r1, r3, r3, r2
    max r1, r1, c24.z
    rsq r2.x, r1.x
    rsq r2.y, r1.y
    rsq r2.z, r1.z
    rsq r2.w, r1.w
    mov r3.x, c24.x
    mad r1, r1, c18, r3.x
    mul r0, r0, r2
    max r0, r0, c24.y
    rcp r2.x, r1.x
    rcp r2.y, r1.y
    rcp r2.z, r1.z
    rcp r2.w, r1.w
    mul r0, r0, r2
    mul r1.xyz, r0.y, c1
    mad r1.xyz, c0, r0.x, r1
    mad r0.xyz, c2, r0.z, r1
    mad r0.xyz, c3, r0.w, r0
    mad r1.xyz, r0, c25.x, c25.y
    mad r1.xyz, r0, r1, c24.w
    mul r0.w, r4.y, r4.y
    mad r0.w, r4.x, r4.x, -r0.w
    mul r2, r4.yzzx, r4.xyzz
    mov o2.xyz, r4
    dp4 r3.x, c19, r2
    dp4 r3.y, c20, r2
    dp4 r3.z, c21, r2
    mad r2.xyz, c22, r0.w, r3
    mad o4.xyz, r0, r1, r2
    mad r0, v0.xyzx, c24.xxxy, c24.yyyx
    dp4 r1.y, c5, r0
    mul r2.x, r1.y, c14.x
    mul r2.w, r2.x, c25.z
    dp4 r1.x, c4, r0
    dp4 r1.w, c7, r0
    dp4 r1.z, c6, r0
    mul r2.xz, r1.xyww, c25.z
    mov r5, r1
    mov o5.zw, r1
    add o5.xy, r2.z, r2.xwzw
    mov o6, c24.y
    mad o0.xy, r5.w, c255, r5
    mov o0.zw, r5

// approximately 63 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 48 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mov o0.xyzw, r0.xyzw
   5: mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
   6: dp3 r1.x, v2.xyzx, cb3[16].xyzx
   7: dp3 r1.y, v2.xyzx, cb3[17].xyzx
   8: dp3 r1.z, v2.xyzx, cb3[18].xyzx
   9: dp3 r1.w, r1.xyzx, r1.xyzx
  10: rsq r1.w, r1.w
  11: mul r1.xyz, r1.wwww, r1.xyzx
  12: mov o2.xyz, r1.xyzx
  13: mul r2.xyz, v0.yyyy, cb3[13].xyzx
  14: mad r2.xyz, cb3[12].xyzx, v0.xxxx, r2.xyzx
  15: mad r2.xyz, cb3[14].xyzx, v0.zzzz, r2.xyzx
  16: mad r2.xyz, cb3[15].xyzx, v0.wwww, r2.xyzx
  17: mov o3.xyz, r2.xyzx
  18: add r3.xyzw, -r2.xxxx, cb2[2].xyzw
  19: add r4.xyzw, -r2.yyyy, cb2[3].xyzw
  20: add r2.xyzw, -r2.zzzz, cb2[4].xyzw
  21: mul r5.xyzw, r1.yyyy, r4.xyzw
  22: mul r4.xyzw, r4.xyzw, r4.xyzw
  23: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  24: mad r3.xyzw, r3.xyzw, r1.xxxx, r5.xyzw
  25: mad r3.xyzw, r2.xyzw, r1.zzzz, r3.xyzw
  26: mad r2.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
  27: max r2.xyzw, r2.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  28: rsq r4.xyzw, r2.xyzw
  29: mad r2.xyzw, r2.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  30: div r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
  31: mul r3.xyzw, r3.xyzw, r4.xyzw
  32: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  33: mul r2.xyzw, r2.xyzw, r3.xyzw
  34: mul r3.xyz, r2.yyyy, cb2[7].xyzx
  35: mad r3.xyz, cb2[6].xyzx, r2.xxxx, r3.xyzx
  36: mad r2.xyz, cb2[8].xyzx, r2.zzzz, r3.xyzx
  37: mad r2.xyz, cb2[9].xyzx, r2.wwww, r2.xyzx
  38: mad r3.xyz, r2.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  39: mad r3.xyz, r2.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  40: mul r1.w, r1.y, r1.y
  41: mad r1.w, r1.x, r1.x, -r1.w
  42: mul r4.xyzw, r1.yzzx, r1.xyzz
  43: dp4 r1.x, cb2[41].xyzw, r4.xyzw
  44: dp4 r1.y, cb2[42].xyzw, r4.xyzw
  45: dp4 r1.z, cb2[43].xyzw, r4.xyzw
  46: mad r1.xyz, cb2[44].xyzx, r1.wwww, r1.xyzx
  47: mad o4.xyz, r2.xyzx, r3.xyzx, r1.xyzx
  48: mul r0.y, r0.y, cb1[5].x
  49: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  50: mov o5.zw, r0.zzzw
  51: add o5.xy, r1.zzzz, r1.xwxx
  52: mov o6.xyzw, l(0,0,0,0)
  53: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

 }


 // Stats for Vertex shader:
 //         d3d9: 19 avg math (17..23)
 //        d3d11: 17 avg math (15..23)
 // Stats for Fragment shader:
 //         d3d9: 90 avg math (76..104), 3 avg texture (1..7)
 //        d3d11: 83 avg math (70..95), 3 avg texture (1..7)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="ForwardAdd" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
  ZWrite Off
  Blend One One
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: POINT 
-- Vertex shader for "d3d9":
// Stats: 17 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _MainTex_ST at 10

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _MainTex_ST;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   glstate_matrix_mvp  c0       4
//   unity_ObjectToWorld c4       3
//   unity_WorldToObject c7       3
//   _MainTex_ST         c10      1
//

    vs_3_0
    def c11, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    mad r0, v0.xyzx, c11.xxxy, c11.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    mad o1.xy, v2, c10, c10.zwzw
    dp4 o3.x, c4, v0
    dp4 o3.y, c5, v0
    dp4 o3.z, c6, v0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul o2.xyz, r0.w, r0
    mad o0.xy, r1.w, c255, r1
    mov o0.zw, r1

// approximately 17 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 87 math, 2 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 8
Float _Glossiness at 6
Vector4 _LightColor0 at 5
Float _Metallic at 7
Vector4 _WorldSpaceCameraPos at 3
Vector4 _WorldSpaceLightPos0 at 4

Set 2D Texture "_LightTexture0" to slot 0
Set 2D Texture "_MainTex" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_WorldToLight   c0       3
//   _WorldSpaceCameraPos c3       1
//   _WorldSpaceLightPos0 c4       1
//   _LightColor0         c5       1
//   _Glossiness          c6       1
//   _Metallic            c7       1
//   _Color               c8       1
//   _LightTexture0       s0       1
//   _MainTex             s1       1
//

    ps_3_0
    def c9, 1, 0, -0.220916301, 0.220916301
    def c10, 0.779083729, 0.00100000005, 31.622776, -0.5
    def c11, 9.99999975e-006, 0.318309873, 1.00000001e-007, 3.14159274
    def c12, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2 v2.xyz
    dcl_2d s0
    dcl_2d s1
    add r0.xyz, c3, -v2
    nrm_pp r1.xyz, r0
    add r0.xyz, c4, -v2
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mad_pp r2.xyz, r0, r0.w, r1
    mul_pp r0.xyz, r0.w, r0
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c10.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c10.z, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r3.xyz, v1
    dp3_sat_pp r0.w, r3, r2
    dp3_sat_pp r1.w, r0, r2
    dp3_sat_pp r0.x, r3, r0
    dp3_pp r0.y, r3, r1
    mov r2.xzw, c9
    add_pp r0.z, r2.x, -c6.x
    mul_pp r1.x, r0.z, r0.z
    mul_pp r1.y, r1.x, r1.x
    mad_pp r1.z, r0.w, r1.y, -r0.w
    mad_pp r0.w, r1.z, r0.w, c9.x
    mad r0.w, r0.w, r0.w, c11.z
    rcp r0.w, r0.w
    mul r1.y, r1.y, c11.y
    mul_pp r0.w, r0.w, r1.y
    mad_pp r1.y, r0.z, -r0.z, c9.x
    mad_pp r1.z, r0_abs.y, r1.y, r1.x
    mad_pp r1.x, r0.x, r1.y, r1.x
    mul_pp r1.x, r0_abs.y, r1.x
    add_pp r0.y, -r0_abs.y, c9.x
    mad r1.x, r0.x, r1.z, r1.x
    add r1.x, r1.x, c11.x
    rcp r1.x, r1.x
    mul_pp r1.x, r1.x, -c10.w
    mul r0.w, r0.w, r1.x
    mul_pp r1.x, r0.w, c11.w
    mad r0.w, r0.w, -c12.x, c12.y
    rsq r1.x, r1.x
    rcp_pp r1.x, r1.x
    cmp_pp r0.w, r0.w, c12.z, r1.x
    mul_pp r0.w, r0.x, r0.w
    texld r3, v0, s1
    mad_pp r1.xyz, r3, c8, r2.z
    mul_pp r2.xyz, r3, c8
    mad_pp r1.xyz, c7.x, r1, r2.w
    dp3_pp r2.w, r1, r1
    cmp r2.w, -r2.w, c9.y, c9.x
    mul_pp r0.w, r0.w, r2.w
    mad r3, v2.xyzx, c9.xxxy, c9.yyyx
    dp4 r4.x, c0, r3
    dp4 r4.y, c1, r3
    dp4 r4.z, c2, r3
    dp3 r2.w, r4, r4
    texld_pp r3, r2.w, s0
    mul_pp r3.xyz, r3.x, c5
    mul_pp r4.xyz, r0.w, r3
    add_pp r0.w, -r1.w, c9.x
    mul_pp r1.w, r1.w, r1.w
    dp2add_pp r0.z, r1.w, r0.z, c10.w
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c9.x, r1
    mul_pp r1.xyz, r4, r5
    mul_pp r0.w, r0.y, r0.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.y, r0.y, r0.w
    mad_pp r0.y, r0.z, r0.y, c9.x
    add_pp r0.w, -r0.x, c9.x
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    mad_pp r0.z, r0.z, r0.w, c9.x
    mul_pp r0.y, r0.y, r0.z
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.xyz, r0.x, r3
    mov r3.x, c10.x
    mad_pp r0.w, c7.x, -r3.x, r3.x
    mul_pp r2.xyz, r0.w, r2
    mad_pp oC0.xyz, r2, r0, r1
    mov_pp oC0.w, c9.x

// approximately 88 instruction slots used (2 texture, 86 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 15 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 160
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 1 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_temps 1
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
   5: dp3 r0.x, v2.xyzx, cb1[16].xyzx
   6: dp3 r0.y, v2.xyzx, cb1[17].xyzx
   7: dp3 r0.z, v2.xyzx, cb1[18].xyzx
   8: dp3 r0.w, r0.xyzx, r0.xyzx
   9: rsq r0.w, r0.w
  10: mul o2.xyz, r0.wwww, r0.xyzx
  11: mul r0.xyz, v0.yyyy, cb1[13].xyzx
  12: mad r0.xyz, cb1[12].xyzx, v0.xxxx, r0.xyzx
  13: mad r0.xyz, cb1[14].xyzx, v0.zzzz, r0.xyzx
  14: mad o3.xyz, cb1[15].xyzx, v0.wwww, r0.xyzx
  15: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 80 math, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _Glossiness at 128
  Float _Metallic at 132
  Vector4 _Color at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v3.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: add r1.xyz, -v3.xyzx, cb2[0].xyzx
   5: dp3 r0.w, r1.xyzx, r1.xyzx
   6: rsq r0.w, r0.w
   7: mad r2.xyz, r1.xyzx, r0.wwww, r0.xyzx
   8: mul r1.xyz, r0.wwww, r1.xyzx
   9: dp3 r0.w, r2.xyzx, r2.xyzx
  10: max r0.w, r0.w, l(0.001000)
  11: rsq r0.w, r0.w
  12: mul r2.xyz, r0.wwww, r2.xyzx
  13: dp3 r0.w, v2.xyzx, v2.xyzx
  14: rsq r0.w, r0.w
  15: mul r3.xyz, r0.wwww, v2.xyzx
  16: dp3_sat r0.w, r3.xyzx, r2.xyzx
  17: dp3_sat r1.w, r1.xyzx, r2.xyzx
  18: dp3_sat r1.x, r3.xyzx, r1.xyzx
  19: dp3 r0.x, r3.xyzx, r0.xyzx
  20: add r0.y, -cb0[8].x, l(1.000000)
  21: mul r0.z, r0.y, r0.y
  22: mul r1.y, r0.z, r0.z
  23: mad r1.z, r0.w, r1.y, -r0.w
  24: mad r0.w, r1.z, r0.w, l(1.000000)
  25: mad r0.w, r0.w, r0.w, l(0.000000)
  26: mul r1.y, r1.y, l(0.318310)
  27: div r0.w, r1.y, r0.w
  28: mad r1.y, -r0.y, r0.y, l(1.000000)
  29: mad r1.z, |r0.x|, r1.y, r0.z
  30: mad r0.z, r1.x, r1.y, r0.z
  31: mul r0.z, r0.z, |r0.x|
  32: add r0.x, -|r0.x|, l(1.000000)
  33: mad r0.z, r1.x, r1.z, r0.z
  34: add r0.z, r0.z, l(0.000010)
  35: div r0.z, l(0.500000), r0.z
  36: mul r0.z, r0.w, r0.z
  37: mul r0.z, r0.z, l(3.141593)
  38: max r0.z, r0.z, l(0.000100)
  39: sqrt r0.z, r0.z
  40: mul r0.z, r1.x, r0.z
  41: sample r2.xyzw, v1.xyxx, t0.xyzw, s1
  42: mad r3.xyz, r2.xyzx, cb0[9].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  43: mul r2.xyz, r2.xyzx, cb0[9].xyzx
  44: mad r3.xyz, cb0[8].yyyy, r3.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  45: dp3 r0.w, r3.xyzx, r3.xyzx
  46: ne r0.w, r0.w, l(0.000000)
  47: and r0.w, r0.w, l(0x3f800000)
  48: mul r0.z, r0.w, r0.z
  49: mul r4.xyz, v3.yyyy, cb0[5].xyzx
  50: mad r4.xyz, cb0[4].xyzx, v3.xxxx, r4.xyzx
  51: mad r4.xyz, cb0[6].xyzx, v3.zzzz, r4.xyzx
  52: add r4.xyz, r4.xyzx, cb0[7].xyzx
  53: dp3 r0.w, r4.xyzx, r4.xyzx
  54: sample r4.xyzw, r0.wwww, t1.xyzw, s0
  55: mul r4.xyz, r4.xxxx, cb0[2].xyzx
  56: mul r5.xyz, r0.zzzz, r4.xyzx
  57: add r0.z, -r1.w, l(1.000000)
  58: mul r0.w, r1.w, r1.w
  59: dp2 r0.y, r0.wwww, r0.yyyy
  60: add r0.y, r0.y, l(-0.500000)
  61: mul r0.w, r0.z, r0.z
  62: mul r0.w, r0.w, r0.w
  63: mul r0.z, r0.z, r0.w
  64: add r1.yzw, -r3.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
  65: mad r1.yzw, r1.yyzw, r0.zzzz, r3.xxyz
  66: mul r1.yzw, r1.yyzw, r5.xxyz
  67: mul r0.z, r0.x, r0.x
  68: mul r0.z, r0.z, r0.z
  69: mul r0.x, r0.x, r0.z
  70: mad r0.x, r0.y, r0.x, l(1.000000)
  71: add r0.z, -r1.x, l(1.000000)
  72: mul r0.w, r0.z, r0.z
  73: mul r0.w, r0.w, r0.w
  74: mul r0.z, r0.z, r0.w
  75: mad r0.y, r0.y, r0.z, l(1.000000)
  76: mul r0.x, r0.x, r0.y
  77: mul r0.x, r1.x, r0.x
  78: mul r0.xyz, r0.xxxx, r4.xyzx
  79: mad r0.w, -cb0[8].y, l(0.779084), l(0.779084)
  80: mul r2.xyz, r0.wwww, r2.xyzx
  81: mad o0.xyz, r2.xyzx, r0.xyzx, r1.yzwy
  82: mov o0.w, l(1.000000)
  83: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

-- Vertex shader for "d3d9":
// Stats: 17 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _MainTex_ST at 10

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _MainTex_ST;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   glstate_matrix_mvp  c0       4
//   unity_ObjectToWorld c4       3
//   unity_WorldToObject c7       3
//   _MainTex_ST         c10      1
//

    vs_3_0
    def c11, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    mad r0, v0.xyzx, c11.xxxy, c11.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    mad o1.xy, v2, c10, c10.zwzw
    dp4 o3.x, c4, v0
    dp4 o3.y, c5, v0
    dp4 o3.z, c6, v0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul o2.xyz, r0.w, r0
    mad o0.xy, r1.w, c255, r1
    mov o0.zw, r1

// approximately 17 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 76 math, 1 textures
Vector4 _Color at 5
Float _Glossiness at 3
Vector4 _LightColor0 at 2
Float _Metallic at 4
Vector4 _WorldSpaceCameraPos at 0
Vector4 _WorldSpaceLightPos0 at 1

Set 2D Texture "_MainTex" to slot 0

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _WorldSpaceCameraPos c0       1
//   _WorldSpaceLightPos0 c1       1
//   _LightColor0         c2       1
//   _Glossiness          c3       1
//   _Metallic            c4       1
//   _Color               c5       1
//   _MainTex             s0       1
//

    ps_3_0
    def c6, -0.220916301, 0.220916301, 0.779083729, 1
    def c7, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c8, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c9, 0.00999999978, 0, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2 v2.xyz
    dcl_2d s0
    add r0.xyz, c0, -v2
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mad_pp r1.xyz, r0, r0.w, c1
    mul_pp r0.xyz, r0.w, r0
    dp3_pp r0.w, r1, r1
    add r1.w, -r0.w, c7.x
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c7.y, r0.w
    mul_pp r1.xyz, r0.w, r1
    nrm_pp r2.xyz, v1
    dp3_sat_pp r0.w, r2, r1
    dp3_sat_pp r1.x, c1, r1
    mov r3, c6
    add_pp r1.y, r3.w, -c3.x
    mul_pp r1.z, r1.y, r1.y
    mul_pp r1.w, r1.z, r1.z
    mad_pp r2.w, r0.w, r1.w, -r0.w
    mad_pp r0.w, r2.w, r0.w, c6.w
    mad r0.w, r0.w, r0.w, c8.y
    rcp r0.w, r0.w
    mul r1.w, r1.w, c8.x
    mul_pp r0.w, r0.w, r1.w
    dp3_pp r0.x, r2, r0
    dp3_sat_pp r0.y, r2, c1
    mad_pp r0.z, r1.y, -r1.y, c6.w
    mad_pp r1.w, r0_abs.x, r0.z, r1.z
    mad_pp r0.z, r0.y, r0.z, r1.z
    mul_pp r0.z, r0.z, r0_abs.x
    add_pp r0.x, -r0_abs.x, c6.w
    mad r0.z, r0.y, r1.w, r0.z
    add r0.z, r0.z, c7.w
    rcp r0.z, r0.z
    mul_pp r0.z, r0.z, -c7.z
    mul r0.z, r0.w, r0.z
    mul_pp r0.w, r0.z, c8.z
    mad r0.z, r0.z, -c8.z, c8.w
    rsq r0.w, r0.w
    rcp_pp r0.w, r0.w
    cmp_pp r0.z, r0.z, c9.x, r0.w
    mul_pp r0.z, r0.y, r0.z
    texld r2, v0, s0
    mad_pp r4.xyz, r2, c5, r3.x
    mul_pp r2.xyz, r2, c5
    mad_pp r3.xyw, c4.x, r4.xyzz, r3.y
    dp3_pp r0.w, r3.xyww, r3.xyww
    cmp r0.w, -r0.w, c9.y, c9.z
    mul_pp r0.z, r0.w, r0.z
    mul_pp r4.xyz, r0.z, c2
    add_pp r0.z, -r1.x, c6.w
    mul_pp r0.w, r1.x, r1.x
    dp2add_pp r0.w, r0.w, r1.y, c7.z
    mul_pp r1.x, r0.z, r0.z
    mul_pp r1.x, r1.x, r1.x
    mul_pp r0.z, r0.z, r1.x
    lrp_pp r1.xyz, r0.z, c6.w, r3.xyww
    mul_pp r1.xyz, r1, r4
    mul_pp r0.z, r0.x, r0.x
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    mad_pp r0.x, r0.w, r0.x, c6.w
    add_pp r0.z, -r0.y, c6.w
    mul_pp r1.w, r0.z, r0.z
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.z, r0.z, r1.w
    mad_pp r0.z, r0.w, r0.z, c6.w
    mul_pp r0.x, r0.x, r0.z
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.xyz, r0.x, c2
    mad_pp r0.w, c4.x, -r3.z, r3.z
    mul_pp r2.xyz, r0.w, r2
    mad_pp oC0.xyz, r2, r0, r1
    mov_pp oC0.w, c6.w

// approximately 76 instruction slots used (1 texture, 75 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 15 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 1 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_temps 1
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
   5: dp3 r0.x, v2.xyzx, cb1[16].xyzx
   6: dp3 r0.y, v2.xyzx, cb1[17].xyzx
   7: dp3 r0.z, v2.xyzx, cb1[18].xyzx
   8: dp3 r0.w, r0.xyzx, r0.xyzx
   9: rsq r0.w, r0.w
  10: mul o2.xyz, r0.wwww, r0.xyzx
  11: mul r0.xyz, v0.yyyy, cb1[13].xyzx
  12: mad r0.xyz, cb1[12].xyzx, v0.xxxx, r0.xyzx
  13: mad r0.xyz, cb1[14].xyzx, v0.zzzz, r0.xyzx
  14: mad o3.xyz, cb1[15].xyzx, v0.wwww, r0.xyzx
  15: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 70 math, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _Glossiness at 64
  Float _Metallic at 68
  Vector4 _Color at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 5
   0: add r0.xyz, -v3.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mad r1.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
   4: mul r0.xyz, r0.wwww, r0.xyzx
   5: dp3 r0.w, r1.xyzx, r1.xyzx
   6: max r0.w, r0.w, l(0.001000)
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, r1.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: dp3_sat r0.w, r2.xyzx, r1.xyzx
  13: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
  14: add r1.y, -cb0[4].x, l(1.000000)
  15: mul r1.z, r1.y, r1.y
  16: mul r1.w, r1.z, r1.z
  17: mad r2.w, r0.w, r1.w, -r0.w
  18: mad r0.w, r2.w, r0.w, l(1.000000)
  19: mad r0.w, r0.w, r0.w, l(0.000000)
  20: mul r1.w, r1.w, l(0.318310)
  21: div r0.w, r1.w, r0.w
  22: dp3 r0.x, r2.xyzx, r0.xyzx
  23: dp3_sat r0.y, r2.xyzx, cb2[0].xyzx
  24: mad r0.z, -r1.y, r1.y, l(1.000000)
  25: mad r1.w, |r0.x|, r0.z, r1.z
  26: mad r0.z, r0.y, r0.z, r1.z
  27: mul r0.z, r0.z, |r0.x|
  28: add r0.x, -|r0.x|, l(1.000000)
  29: mad r0.z, r0.y, r1.w, r0.z
  30: add r0.z, r0.z, l(0.000010)
  31: div r0.z, l(0.500000), r0.z
  32: mul r0.z, r0.w, r0.z
  33: mul r0.z, r0.z, l(3.141593)
  34: max r0.z, r0.z, l(0.000100)
  35: sqrt r0.z, r0.z
  36: mul r0.z, r0.y, r0.z
  37: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
  38: mad r3.xyz, r2.xyzx, cb0[5].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  39: mul r2.xyz, r2.xyzx, cb0[5].xyzx
  40: mad r3.xyz, cb0[4].yyyy, r3.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  41: dp3 r0.w, r3.xyzx, r3.xyzx
  42: ne r0.w, r0.w, l(0.000000)
  43: and r0.w, r0.w, l(0x3f800000)
  44: mul r0.z, r0.w, r0.z
  45: mul r4.xyz, r0.zzzz, cb0[2].xyzx
  46: add r0.z, -r1.x, l(1.000000)
  47: mul r0.w, r1.x, r1.x
  48: dp2 r0.w, r0.wwww, r1.yyyy
  49: add r0.w, r0.w, l(-0.500000)
  50: mul r1.x, r0.z, r0.z
  51: mul r1.x, r1.x, r1.x
  52: mul r0.z, r0.z, r1.x
  53: add r1.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  54: mad r1.xyz, r1.xyzx, r0.zzzz, r3.xyzx
  55: mul r1.xyz, r1.xyzx, r4.xyzx
  56: mul r0.z, r0.x, r0.x
  57: mul r0.z, r0.z, r0.z
  58: mul r0.x, r0.x, r0.z
  59: mad r0.x, r0.w, r0.x, l(1.000000)
  60: add r0.z, -r0.y, l(1.000000)
  61: mul r1.w, r0.z, r0.z
  62: mul r1.w, r1.w, r1.w
  63: mul r0.z, r0.z, r1.w
  64: mad r0.z, r0.w, r0.z, l(1.000000)
  65: mul r0.x, r0.x, r0.z
  66: mul r0.x, r0.y, r0.x
  67: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  68: mad r0.w, -cb0[4].y, l(0.779084), l(0.779084)
  69: mul r2.xyz, r0.wwww, r2.xyzx
  70: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
  71: mov o0.w, l(1.000000)
  72: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

-- Vertex shader for "d3d9":
// Stats: 17 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _MainTex_ST at 10

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _MainTex_ST;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   glstate_matrix_mvp  c0       4
//   unity_ObjectToWorld c4       3
//   unity_WorldToObject c7       3
//   _MainTex_ST         c10      1
//

    vs_3_0
    def c11, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    mad r0, v0.xyzx, c11.xxxy, c11.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    mad o1.xy, v2, c10, c10.zwzw
    dp4 o3.x, c4, v0
    dp4 o3.y, c5, v0
    dp4 o3.z, c6, v0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul o2.xyz, r0.w, r0
    mad o0.xy, r1.w, c255, r1
    mov o0.zw, r1

// approximately 17 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 92 math, 3 textures
Matrix4x4 unity_WorldToLight at 0
Vector4 _Color at 9
Float _Glossiness at 7
Vector4 _LightColor0 at 6
Float _Metallic at 8
Vector4 _WorldSpaceCameraPos at 4
Vector4 _WorldSpaceLightPos0 at 5

Set 2D Texture "_LightTexture0" to slot 0
Set 2D Texture "_LightTextureB0" to slot 1
Set 2D Texture "_MainTex" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_WorldToLight   c0       4
//   _WorldSpaceCameraPos c4       1
//   _WorldSpaceLightPos0 c5       1
//   _LightColor0         c6       1
//   _Glossiness          c7       1
//   _Metallic            c8       1
//   _Color               c9       1
//   _LightTexture0       s0       1
//   _LightTextureB0      s1       1
//   _MainTex             s2       1
//

    ps_3_0
    def c10, 1, 0, 0.5, -0.220916301
    def c11, 0.779083729, 0.00100000005, 31.622776, 9.99999975e-006
    def c12, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c13, 0.00999999978, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2 v2.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mad r0, v2.xyzx, c10.xxxy, c10.yyyx
    dp4 r1.x, c3, r0
    rcp r1.x, r1.x
    dp4 r2.x, c0, r0
    dp4 r2.y, c1, r0
    dp4 r2.z, c2, r0
    mad r0.xy, r2, r1.x, c10.z
    dp3 r0.z, r2, r2
    texld_pp r1, r0.z, s1
    texld_pp r0, r0, s0
    mul r0.x, r1.x, r0.w
    mul_pp r0.xyz, r0.x, c6
    cmp_pp r0.xyz, -r2.z, c10.y, r0
    add r1.xyz, c4, -v2
    nrm_pp r2.xyz, r1
    add r1.xyz, c5, -v2
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mad_pp r3.xyz, r1, r0.w, r2
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r3, r3
    add r1.w, -r0.w, c11.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c11.z, r0.w
    mul_pp r3.xyz, r0.w, r3
    nrm_pp r4.xyz, v1
    dp3_sat_pp r0.w, r4, r3
    dp3_sat_pp r1.w, r1, r3
    dp3_sat_pp r1.x, r4, r1
    dp3_pp r1.y, r4, r2
    mov r2.xw, c10
    add_pp r1.z, r2.x, -c7.x
    mul_pp r2.x, r1.z, r1.z
    mul_pp r2.y, r2.x, r2.x
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c10.x
    mad r0.w, r0.w, r0.w, c12.y
    rcp r0.w, r0.w
    mul r2.y, r2.y, c12.x
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.z, -r1.z, c10.x
    mad_pp r2.z, r1_abs.y, r2.y, r2.x
    mad_pp r2.x, r1.x, r2.y, r2.x
    mul_pp r2.x, r1_abs.y, r2.x
    add_pp r1.y, -r1_abs.y, c10.x
    mad r2.x, r1.x, r2.z, r2.x
    add r2.x, r2.x, c11.w
    rcp r2.x, r2.x
    mul_pp r2.x, r2.x, c10.z
    mul r0.w, r0.w, r2.x
    mul_pp r2.x, r0.w, c12.z
    mad r0.w, r0.w, -c12.z, c12.w
    rsq r2.x, r2.x
    rcp_pp r2.x, r2.x
    cmp_pp r0.w, r0.w, c13.x, r2.x
    mul_pp r0.w, r1.x, r0.w
    texld r3, v0, s2
    mad_pp r2.xyz, r3, c9, r2.w
    mul_pp r3.xyz, r3, c9
    mad_pp r2.xyz, c8.x, r2, -r2.w
    dp3_pp r2.w, r2, r2
    cmp r2.w, -r2.w, c10.y, c10.x
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.w, c10.x
    mul_pp r1.w, r1.w, r1.w
    dp2add_pp r1.z, r1.w, r1.z, -c10.z
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c10.x, r2
    mul_pp r2.xyz, r4, r5
    mul_pp r0.w, r1.y, r1.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.y, r0.w
    mad_pp r0.w, r1.z, r0.w, c10.x
    add_pp r1.y, -r1.x, c10.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.y, r1.z, r1.y, c10.x
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mov r1.x, c11.x
    mad_pp r0.w, c8.x, -r1.x, r1.x
    mul_pp r1.xyz, r0.w, r3
    mad_pp oC0.xyz, r1, r0, r2
    mov_pp oC0.w, c10.x

// approximately 94 instruction slots used (3 texture, 91 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 15 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 160
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 1 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_temps 1
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
   5: dp3 r0.x, v2.xyzx, cb1[16].xyzx
   6: dp3 r0.y, v2.xyzx, cb1[17].xyzx
   7: dp3 r0.z, v2.xyzx, cb1[18].xyzx
   8: dp3 r0.w, r0.xyzx, r0.xyzx
   9: rsq r0.w, r0.w
  10: mul o2.xyz, r0.wwww, r0.xyzx
  11: mul r0.xyz, v0.yyyy, cb1[13].xyzx
  12: mad r0.xyz, cb1[12].xyzx, v0.xxxx, r0.xyzx
  13: mad r0.xyz, cb1[14].xyzx, v0.zzzz, r0.xyzx
  14: mad o3.xyz, cb1[15].xyzx, v0.wwww, r0.xyzx
  15: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 86 math, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _Glossiness at 128
  Float _Metallic at 132
  Vector4 _Color at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v3.yyyy, cb0[5].xyzw
   1: mad r0.xyzw, cb0[4].xyzw, v3.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[6].xyzw, v3.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb0[7].xyzw
   4: div r1.xy, r0.xyxx, r0.wwww
   5: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: sample r1.xyzw, r1.xyxx, t1.xyzw, s0
   7: lt r0.w, l(0.000000), r0.z
   8: dp3 r0.x, r0.xyzx, r0.xyzx
   9: sample r2.xyzw, r0.xxxx, t2.xyzw, s1
  10: and r0.x, r0.w, l(0x3f800000)
  11: mul r0.x, r1.w, r0.x
  12: mul r0.x, r2.x, r0.x
  13: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  14: add r1.xyz, -v3.xyzx, cb1[4].xyzx
  15: dp3 r0.w, r1.xyzx, r1.xyzx
  16: rsq r0.w, r0.w
  17: mul r1.xyz, r0.wwww, r1.xyzx
  18: add r2.xyz, -v3.xyzx, cb2[0].xyzx
  19: dp3 r0.w, r2.xyzx, r2.xyzx
  20: rsq r0.w, r0.w
  21: mad r3.xyz, r2.xyzx, r0.wwww, r1.xyzx
  22: mul r2.xyz, r0.wwww, r2.xyzx
  23: dp3 r0.w, r3.xyzx, r3.xyzx
  24: max r0.w, r0.w, l(0.001000)
  25: rsq r0.w, r0.w
  26: mul r3.xyz, r0.wwww, r3.xyzx
  27: dp3 r0.w, v2.xyzx, v2.xyzx
  28: rsq r0.w, r0.w
  29: mul r4.xyz, r0.wwww, v2.xyzx
  30: dp3_sat r0.w, r4.xyzx, r3.xyzx
  31: dp3_sat r1.w, r2.xyzx, r3.xyzx
  32: dp3_sat r2.x, r4.xyzx, r2.xyzx
  33: dp3 r1.x, r4.xyzx, r1.xyzx
  34: add r1.y, -cb0[8].x, l(1.000000)
  35: mul r1.z, r1.y, r1.y
  36: mul r2.y, r1.z, r1.z
  37: mad r2.z, r0.w, r2.y, -r0.w
  38: mad r0.w, r2.z, r0.w, l(1.000000)
  39: mad r0.w, r0.w, r0.w, l(0.000000)
  40: mul r2.y, r2.y, l(0.318310)
  41: div r0.w, r2.y, r0.w
  42: mad r2.y, -r1.y, r1.y, l(1.000000)
  43: mad r2.z, |r1.x|, r2.y, r1.z
  44: mad r1.z, r2.x, r2.y, r1.z
  45: mul r1.z, r1.z, |r1.x|
  46: add r1.x, -|r1.x|, l(1.000000)
  47: mad r1.z, r2.x, r2.z, r1.z
  48: add r1.z, r1.z, l(0.000010)
  49: div r1.z, l(0.500000), r1.z
  50: mul r0.w, r0.w, r1.z
  51: mul r0.w, r0.w, l(3.141593)
  52: max r0.w, r0.w, l(0.000100)
  53: sqrt r0.w, r0.w
  54: mul r0.w, r2.x, r0.w
  55: sample r3.xyzw, v1.xyxx, t0.xyzw, s2
  56: mad r2.yzw, r3.xxyz, cb0[9].xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  57: mul r3.xyz, r3.xyzx, cb0[9].xyzx
  58: mad r2.yzw, cb0[8].yyyy, r2.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  59: dp3 r1.z, r2.yzwy, r2.yzwy
  60: ne r1.z, r1.z, l(0.000000)
  61: and r1.z, r1.z, l(0x3f800000)
  62: mul r0.w, r0.w, r1.z
  63: mul r4.xyz, r0.xyzx, r0.wwww
  64: add r0.w, -r1.w, l(1.000000)
  65: mul r1.z, r1.w, r1.w
  66: dp2 r1.y, r1.zzzz, r1.yyyy
  67: add r1.y, r1.y, l(-0.500000)
  68: mul r1.z, r0.w, r0.w
  69: mul r1.z, r1.z, r1.z
  70: mul r0.w, r0.w, r1.z
  71: add r5.xyz, -r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  72: mad r2.yzw, r5.xxyz, r0.wwww, r2.yyzw
  73: mul r2.yzw, r2.yyzw, r4.xxyz
  74: mul r0.w, r1.x, r1.x
  75: mul r0.w, r0.w, r0.w
  76: mul r0.w, r1.x, r0.w
  77: mad r0.w, r1.y, r0.w, l(1.000000)
  78: add r1.x, -r2.x, l(1.000000)
  79: mul r1.z, r1.x, r1.x
  80: mul r1.z, r1.z, r1.z
  81: mul r1.x, r1.x, r1.z
  82: mad r1.x, r1.y, r1.x, l(1.000000)
  83: mul r0.w, r0.w, r1.x
  84: mul r0.w, r2.x, r0.w
  85: mul r0.xyz, r0.wwww, r0.xyzx
  86: mad r0.w, -cb0[8].y, l(0.779084), l(0.779084)
  87: mul r1.xyz, r0.wwww, r3.xyzx
  88: mad o0.xyz, r1.xyzx, r0.xyzx, r2.yzwy
  89: mov o0.w, l(1.000000)
  90: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE 
-- Vertex shader for "d3d9":
// Stats: 17 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _MainTex_ST at 10

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _MainTex_ST;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   glstate_matrix_mvp  c0       4
//   unity_ObjectToWorld c4       3
//   unity_WorldToObject c7       3
//   _MainTex_ST         c10      1
//

    vs_3_0
    def c11, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    mad r0, v0.xyzx, c11.xxxy, c11.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    mad o1.xy, v2, c10, c10.zwzw
    dp4 o3.x, c4, v0
    dp4 o3.y, c5, v0
    dp4 o3.z, c6, v0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul o2.xyz, r0.w, r0
    mad o0.xy, r1.w, c255, r1
    mov o0.zw, r1

// approximately 17 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 88 math, 3 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 8
Float _Glossiness at 6
Vector4 _LightColor0 at 5
Float _Metallic at 7
Vector4 _WorldSpaceCameraPos at 3
Vector4 _WorldSpaceLightPos0 at 4

Set CUBE Texture "_LightTexture0" to slot 0
Set 2D Texture "_LightTextureB0" to slot 1
Set 2D Texture "_MainTex" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_WorldToLight   c0       3
//   _WorldSpaceCameraPos c3       1
//   _WorldSpaceLightPos0 c4       1
//   _LightColor0         c5       1
//   _Glossiness          c6       1
//   _Metallic            c7       1
//   _Color               c8       1
//   _LightTexture0       s0       1
//   _LightTextureB0      s1       1
//   _MainTex             s2       1
//

    ps_3_0
    def c9, 1, 0, -0.220916301, 0.220916301
    def c10, 0.779083729, 0.00100000005, 31.622776, -0.5
    def c11, 9.99999975e-006, 0.318309873, 1.00000001e-007, 3.14159274
    def c12, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2 v2.xyz
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    add r0.xyz, c3, -v2
    nrm_pp r1.xyz, r0
    add r0.xyz, c4, -v2
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mad_pp r2.xyz, r0, r0.w, r1
    mul_pp r0.xyz, r0.w, r0
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c10.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c10.z, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r3.xyz, v1
    dp3_sat_pp r0.w, r3, r2
    dp3_sat_pp r1.w, r0, r2
    dp3_sat_pp r0.x, r3, r0
    dp3_pp r0.y, r3, r1
    mov r2.xzw, c9
    add_pp r0.z, r2.x, -c6.x
    mul_pp r1.x, r0.z, r0.z
    mul_pp r1.y, r1.x, r1.x
    mad_pp r1.z, r0.w, r1.y, -r0.w
    mad_pp r0.w, r1.z, r0.w, c9.x
    mad r0.w, r0.w, r0.w, c11.z
    rcp r0.w, r0.w
    mul r1.y, r1.y, c11.y
    mul_pp r0.w, r0.w, r1.y
    mad_pp r1.y, r0.z, -r0.z, c9.x
    mad_pp r1.z, r0_abs.y, r1.y, r1.x
    mad_pp r1.x, r0.x, r1.y, r1.x
    mul_pp r1.x, r0_abs.y, r1.x
    add_pp r0.y, -r0_abs.y, c9.x
    mad r1.x, r0.x, r1.z, r1.x
    add r1.x, r1.x, c11.x
    rcp r1.x, r1.x
    mul_pp r1.x, r1.x, -c10.w
    mul r0.w, r0.w, r1.x
    mul_pp r1.x, r0.w, c11.w
    mad r0.w, r0.w, -c12.x, c12.y
    rsq r1.x, r1.x
    rcp_pp r1.x, r1.x
    cmp_pp r0.w, r0.w, c12.z, r1.x
    mul_pp r0.w, r0.x, r0.w
    texld r3, v0, s2
    mad_pp r1.xyz, r3, c8, r2.z
    mul_pp r2.xyz, r3, c8
    mad_pp r1.xyz, c7.x, r1, r2.w
    dp3_pp r2.w, r1, r1
    cmp r2.w, -r2.w, c9.y, c9.x
    mul_pp r0.w, r0.w, r2.w
    mad r3, v2.xyzx, c9.xxxy, c9.yyyx
    dp4 r4.x, c0, r3
    dp4 r4.y, c1, r3
    dp4 r4.z, c2, r3
    dp3 r2.w, r4, r4
    texld r3, r4, s0
    texld r4, r2.w, s1
    mul_pp r2.w, r3.w, r4.x
    mul_pp r3.xyz, r2.w, c5
    mul_pp r4.xyz, r0.w, r3
    add_pp r0.w, -r1.w, c9.x
    mul_pp r1.w, r1.w, r1.w
    dp2add_pp r0.z, r1.w, r0.z, c10.w
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c9.x, r1
    mul_pp r1.xyz, r4, r5
    mul_pp r0.w, r0.y, r0.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.y, r0.y, r0.w
    mad_pp r0.y, r0.z, r0.y, c9.x
    add_pp r0.w, -r0.x, c9.x
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    mad_pp r0.z, r0.z, r0.w, c9.x
    mul_pp r0.y, r0.y, r0.z
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.xyz, r0.x, r3
    mov r3.x, c10.x
    mad_pp r0.w, c7.x, -r3.x, r3.x
    mul_pp r2.xyz, r0.w, r2
    mad_pp oC0.xyz, r2, r0, r1
    mov_pp oC0.w, c9.x

// approximately 90 instruction slots used (3 texture, 87 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 15 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 160
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 1 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_temps 1
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
   5: dp3 r0.x, v2.xyzx, cb1[16].xyzx
   6: dp3 r0.y, v2.xyzx, cb1[17].xyzx
   7: dp3 r0.z, v2.xyzx, cb1[18].xyzx
   8: dp3 r0.w, r0.xyzx, r0.xyzx
   9: rsq r0.w, r0.w
  10: mul o2.xyz, r0.wwww, r0.xyzx
  11: mul r0.xyz, v0.yyyy, cb1[13].xyzx
  12: mad r0.xyz, cb1[12].xyzx, v0.xxxx, r0.xyzx
  13: mad r0.xyz, cb1[14].xyzx, v0.zzzz, r0.xyzx
  14: mad o3.xyz, cb1[15].xyzx, v0.wwww, r0.xyzx
  15: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 81 math, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTextureB0" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _Glossiness at 128
  Float _Metallic at 132
  Vector4 _Color at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v3.yyyy, cb0[5].xyzx
   1: mad r0.xyz, cb0[4].xyzx, v3.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[6].xyzx, v3.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[7].xyzx
   4: dp3 r0.w, r0.xyzx, r0.xyzx
   5: sample r1.xyzw, r0.xyzx, t2.xyzw, s0
   6: sample r0.xyzw, r0.wwww, t1.xyzw, s1
   7: mul r0.x, r1.w, r0.x
   8: mul r0.xyz, r0.xxxx, cb0[2].xyzx
   9: add r1.xyz, -v3.xyzx, cb1[4].xyzx
  10: dp3 r0.w, r1.xyzx, r1.xyzx
  11: rsq r0.w, r0.w
  12: mul r1.xyz, r0.wwww, r1.xyzx
  13: add r2.xyz, -v3.xyzx, cb2[0].xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: rsq r0.w, r0.w
  16: mad r3.xyz, r2.xyzx, r0.wwww, r1.xyzx
  17: mul r2.xyz, r0.wwww, r2.xyzx
  18: dp3 r0.w, r3.xyzx, r3.xyzx
  19: max r0.w, r0.w, l(0.001000)
  20: rsq r0.w, r0.w
  21: mul r3.xyz, r0.wwww, r3.xyzx
  22: dp3 r0.w, v2.xyzx, v2.xyzx
  23: rsq r0.w, r0.w
  24: mul r4.xyz, r0.wwww, v2.xyzx
  25: dp3_sat r0.w, r4.xyzx, r3.xyzx
  26: dp3_sat r1.w, r2.xyzx, r3.xyzx
  27: dp3_sat r2.x, r4.xyzx, r2.xyzx
  28: dp3 r1.x, r4.xyzx, r1.xyzx
  29: add r1.y, -cb0[8].x, l(1.000000)
  30: mul r1.z, r1.y, r1.y
  31: mul r2.y, r1.z, r1.z
  32: mad r2.z, r0.w, r2.y, -r0.w
  33: mad r0.w, r2.z, r0.w, l(1.000000)
  34: mad r0.w, r0.w, r0.w, l(0.000000)
  35: mul r2.y, r2.y, l(0.318310)
  36: div r0.w, r2.y, r0.w
  37: mad r2.y, -r1.y, r1.y, l(1.000000)
  38: mad r2.z, |r1.x|, r2.y, r1.z
  39: mad r1.z, r2.x, r2.y, r1.z
  40: mul r1.z, r1.z, |r1.x|
  41: add r1.x, -|r1.x|, l(1.000000)
  42: mad r1.z, r2.x, r2.z, r1.z
  43: add r1.z, r1.z, l(0.000010)
  44: div r1.z, l(0.500000), r1.z
  45: mul r0.w, r0.w, r1.z
  46: mul r0.w, r0.w, l(3.141593)
  47: max r0.w, r0.w, l(0.000100)
  48: sqrt r0.w, r0.w
  49: mul r0.w, r2.x, r0.w
  50: sample r3.xyzw, v1.xyxx, t0.xyzw, s2
  51: mad r2.yzw, r3.xxyz, cb0[9].xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  52: mul r3.xyz, r3.xyzx, cb0[9].xyzx
  53: mad r2.yzw, cb0[8].yyyy, r2.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  54: dp3 r1.z, r2.yzwy, r2.yzwy
  55: ne r1.z, r1.z, l(0.000000)
  56: and r1.z, r1.z, l(0x3f800000)
  57: mul r0.w, r0.w, r1.z
  58: mul r4.xyz, r0.xyzx, r0.wwww
  59: add r0.w, -r1.w, l(1.000000)
  60: mul r1.z, r1.w, r1.w
  61: dp2 r1.y, r1.zzzz, r1.yyyy
  62: add r1.y, r1.y, l(-0.500000)
  63: mul r1.z, r0.w, r0.w
  64: mul r1.z, r1.z, r1.z
  65: mul r0.w, r0.w, r1.z
  66: add r5.xyz, -r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  67: mad r2.yzw, r5.xxyz, r0.wwww, r2.yyzw
  68: mul r2.yzw, r2.yyzw, r4.xxyz
  69: mul r0.w, r1.x, r1.x
  70: mul r0.w, r0.w, r0.w
  71: mul r0.w, r1.x, r0.w
  72: mad r0.w, r1.y, r0.w, l(1.000000)
  73: add r1.x, -r2.x, l(1.000000)
  74: mul r1.z, r1.x, r1.x
  75: mul r1.z, r1.z, r1.z
  76: mul r1.x, r1.x, r1.z
  77: mad r1.x, r1.y, r1.x, l(1.000000)
  78: mul r0.w, r0.w, r1.x
  79: mul r0.w, r2.x, r0.w
  80: mul r0.xyz, r0.wwww, r0.xyzx
  81: mad r0.w, -cb0[8].y, l(0.779084), l(0.779084)
  82: mul r1.xyz, r0.wwww, r3.xyzx
  83: mad o0.xyz, r1.xyzx, r0.xyzx, r2.yzwy
  84: mov o0.w, l(1.000000)
  85: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

-- Vertex shader for "d3d9":
// Stats: 17 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _MainTex_ST at 10

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _MainTex_ST;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   glstate_matrix_mvp  c0       4
//   unity_ObjectToWorld c4       3
//   unity_WorldToObject c7       3
//   _MainTex_ST         c10      1
//

    vs_3_0
    def c11, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    mad r0, v0.xyzx, c11.xxxy, c11.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    mad o1.xy, v2, c10, c10.zwzw
    dp4 o3.x, c4, v0
    dp4 o3.y, c5, v0
    dp4 o3.z, c6, v0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul o2.xyz, r0.w, r0
    mad o0.xy, r1.w, c255, r1
    mov o0.zw, r1

// approximately 17 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 81 math, 2 textures
Matrix4x2 unity_WorldToLight at 0
Vector4 _Color at 7
Float _Glossiness at 5
Vector4 _LightColor0 at 4
Float _Metallic at 6
Vector4 _WorldSpaceCameraPos at 2
Vector4 _WorldSpaceLightPos0 at 3

Set 2D Texture "_LightTexture0" to slot 0
Set 2D Texture "_MainTex" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_WorldToLight   c0       2
//   _WorldSpaceCameraPos c2       1
//   _WorldSpaceLightPos0 c3       1
//   _LightColor0         c4       1
//   _Glossiness          c5       1
//   _Metallic            c6       1
//   _Color               c7       1
//   _LightTexture0       s0       1
//   _MainTex             s1       1
//

    ps_3_0
    def c8, 1, 0, -0.220916301, 0.220916301
    def c9, 0.779083729, 0.00100000005, 31.622776, -0.5
    def c10, 9.99999975e-006, 0.318309873, 1.00000001e-007, 3.14159274
    def c11, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2 v2.xyz
    dcl_2d s0
    dcl_2d s1
    add r0.xyz, c2, -v2
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mad_pp r1.xyz, r0, r0.w, c3
    mul_pp r0.xyz, r0.w, r0
    dp3_pp r0.w, r1, r1
    add r1.w, -r0.w, c9.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c9.z, r0.w
    mul_pp r1.xyz, r0.w, r1
    nrm_pp r2.xyz, v1
    dp3_sat_pp r0.w, r2, r1
    dp3_sat_pp r1.x, c3, r1
    mov r3.xzw, c8
    add_pp r1.y, r3.x, -c5.x
    mul_pp r1.z, r1.y, r1.y
    mul_pp r1.w, r1.z, r1.z
    mad_pp r2.w, r0.w, r1.w, -r0.w
    mad_pp r0.w, r2.w, r0.w, c8.x
    mad r0.w, r0.w, r0.w, c10.z
    rcp r0.w, r0.w
    mul r1.w, r1.w, c10.y
    mul_pp r0.w, r0.w, r1.w
    dp3_pp r0.x, r2, r0
    dp3_sat_pp r0.y, r2, c3
    mad_pp r0.z, r1.y, -r1.y, c8.x
    mad_pp r1.w, r0_abs.x, r0.z, r1.z
    mad_pp r0.z, r0.y, r0.z, r1.z
    mul_pp r0.z, r0.z, r0_abs.x
    add_pp r0.x, -r0_abs.x, c8.x
    mad r0.z, r0.y, r1.w, r0.z
    add r0.z, r0.z, c10.x
    rcp r0.z, r0.z
    mul_pp r0.z, r0.z, -c9.w
    mul r0.z, r0.w, r0.z
    mul_pp r0.w, r0.z, c10.w
    mad r0.z, r0.z, -c11.x, c11.y
    rsq r0.w, r0.w
    rcp_pp r0.w, r0.w
    cmp_pp r0.z, r0.z, c11.z, r0.w
    mul_pp r0.z, r0.y, r0.z
    texld r2, v0, s1
    mad_pp r3.xyz, r2, c7, r3.z
    mul_pp r2.xyz, r2, c7
    mad_pp r3.xyz, c6.x, r3, r3.w
    dp3_pp r0.w, r3, r3
    cmp r0.w, -r0.w, c8.y, c8.x
    mul_pp r0.z, r0.w, r0.z
    mad r4, v2.xyzx, c8.xxxy, c8.yyyx
    dp4 r5.x, c0, r4
    dp4 r5.y, c1, r4
    texld_pp r4, r5, s0
    mul_pp r4.xyz, r4.w, c4
    mul_pp r5.xyz, r0.z, r4
    add_pp r0.z, -r1.x, c8.x
    mul_pp r0.w, r1.x, r1.x
    dp2add_pp r0.w, r0.w, r1.y, c9.w
    mul_pp r1.x, r0.z, r0.z
    mul_pp r1.x, r1.x, r1.x
    mul_pp r0.z, r0.z, r1.x
    lrp_pp r1.xyz, r0.z, c8.x, r3
    mul_pp r1.xyz, r1, r5
    mul_pp r0.z, r0.x, r0.x
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    mad_pp r0.x, r0.w, r0.x, c8.x
    add_pp r0.z, -r0.y, c8.x
    mul_pp r1.w, r0.z, r0.z
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.z, r0.z, r1.w
    mad_pp r0.z, r0.w, r0.z, c8.x
    mul_pp r0.x, r0.x, r0.z
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.xyz, r0.x, r4
    mov r3.x, c9.x
    mad_pp r0.w, c6.x, -r3.x, r3.x
    mul_pp r2.xyz, r0.w, r2
    mad_pp oC0.xyz, r2, r0, r1
    mov_pp oC0.w, c8.x

// approximately 82 instruction slots used (2 texture, 80 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 15 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 160
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 1 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_temps 1
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
   5: dp3 r0.x, v2.xyzx, cb1[16].xyzx
   6: dp3 r0.y, v2.xyzx, cb1[17].xyzx
   7: dp3 r0.z, v2.xyzx, cb1[18].xyzx
   8: dp3 r0.w, r0.xyzx, r0.xyzx
   9: rsq r0.w, r0.w
  10: mul o2.xyz, r0.wwww, r0.xyzx
  11: mul r0.xyz, v0.yyyy, cb1[13].xyzx
  12: mad r0.xyz, cb1[12].xyzx, v0.xxxx, r0.xyzx
  13: mad r0.xyz, cb1[14].xyzx, v0.zzzz, r0.xyzx
  14: mad o3.xyz, cb1[15].xyzx, v0.wwww, r0.xyzx
  15: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 75 math, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _Glossiness at 128
  Float _Metallic at 132
  Vector4 _Color at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v3.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mad r1.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
   4: mul r0.xyz, r0.wwww, r0.xyzx
   5: dp3 r0.w, r1.xyzx, r1.xyzx
   6: max r0.w, r0.w, l(0.001000)
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, r1.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: dp3_sat r0.w, r2.xyzx, r1.xyzx
  13: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
  14: add r1.y, -cb0[8].x, l(1.000000)
  15: mul r1.z, r1.y, r1.y
  16: mul r1.w, r1.z, r1.z
  17: mad r2.w, r0.w, r1.w, -r0.w
  18: mad r0.w, r2.w, r0.w, l(1.000000)
  19: mad r0.w, r0.w, r0.w, l(0.000000)
  20: mul r1.w, r1.w, l(0.318310)
  21: div r0.w, r1.w, r0.w
  22: dp3 r0.x, r2.xyzx, r0.xyzx
  23: dp3_sat r0.y, r2.xyzx, cb2[0].xyzx
  24: mad r0.z, -r1.y, r1.y, l(1.000000)
  25: mad r1.w, |r0.x|, r0.z, r1.z
  26: mad r0.z, r0.y, r0.z, r1.z
  27: mul r0.z, r0.z, |r0.x|
  28: add r0.x, -|r0.x|, l(1.000000)
  29: mad r0.z, r0.y, r1.w, r0.z
  30: add r0.z, r0.z, l(0.000010)
  31: div r0.z, l(0.500000), r0.z
  32: mul r0.z, r0.w, r0.z
  33: mul r0.z, r0.z, l(3.141593)
  34: max r0.z, r0.z, l(0.000100)
  35: sqrt r0.z, r0.z
  36: mul r0.z, r0.y, r0.z
  37: sample r2.xyzw, v1.xyxx, t0.xyzw, s1
  38: mad r3.xyz, r2.xyzx, cb0[9].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  39: mul r2.xyz, r2.xyzx, cb0[9].xyzx
  40: mad r3.xyz, cb0[8].yyyy, r3.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  41: dp3 r0.w, r3.xyzx, r3.xyzx
  42: ne r0.w, r0.w, l(0.000000)
  43: and r0.w, r0.w, l(0x3f800000)
  44: mul r0.z, r0.w, r0.z
  45: mul r1.zw, v3.yyyy, cb0[5].xxxy
  46: mad r1.zw, cb0[4].xxxy, v3.xxxx, r1.zzzw
  47: mad r1.zw, cb0[6].xxxy, v3.zzzz, r1.zzzw
  48: add r1.zw, r1.zzzw, cb0[7].xxxy
  49: sample r4.xyzw, r1.zwzz, t1.xyzw, s0
  50: mul r4.xyz, r4.wwww, cb0[2].xyzx
  51: mul r5.xyz, r0.zzzz, r4.xyzx
  52: add r0.z, -r1.x, l(1.000000)
  53: mul r0.w, r1.x, r1.x
  54: dp2 r0.w, r0.wwww, r1.yyyy
  55: add r0.w, r0.w, l(-0.500000)
  56: mul r1.x, r0.z, r0.z
  57: mul r1.x, r1.x, r1.x
  58: mul r0.z, r0.z, r1.x
  59: add r1.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  60: mad r1.xyz, r1.xyzx, r0.zzzz, r3.xyzx
  61: mul r1.xyz, r1.xyzx, r5.xyzx
  62: mul r0.z, r0.x, r0.x
  63: mul r0.z, r0.z, r0.z
  64: mul r0.x, r0.x, r0.z
  65: mad r0.x, r0.w, r0.x, l(1.000000)
  66: add r0.z, -r0.y, l(1.000000)
  67: mul r1.w, r0.z, r0.z
  68: mul r1.w, r1.w, r1.w
  69: mul r0.z, r0.z, r1.w
  70: mad r0.z, r0.w, r0.z, l(1.000000)
  71: mul r0.x, r0.x, r0.z
  72: mul r0.x, r0.y, r0.x
  73: mul r0.xyz, r0.xxxx, r4.xyzx
  74: mad r0.w, -cb0[8].y, l(0.779084), l(0.779084)
  75: mul r2.xyz, r0.wwww, r2.xyzx
  76: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
  77: mov o0.w, l(1.000000)
  78: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

//////////////////////////////////////////////////////
Keywords set in this variant: SPOT SHADOWS_DEPTH 
-- Vertex shader for "d3d9":
// Stats: 23 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 glstate_matrix_mvp at 4
Matrix4x4 unity_ObjectToWorld at 8
Matrix4x3 unity_WorldToObject at 12
Matrix4x4 unity_WorldToShadow at 0
Vector4 _MainTex_ST at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _MainTex_ST;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//   row_major float4x4 unity_WorldToShadow[4];
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_WorldToShadow c0       4
//   glstate_matrix_mvp  c4       4
//   unity_ObjectToWorld c8       4
//   unity_WorldToObject c12      3
//   _MainTex_ST         c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord3 o4
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c4, r0
    dp4 r1.y, c5, r0
    dp4 r1.z, c6, r0
    dp4 r1.w, c7, r0
    mad o1.xy, v2, c15, c15.zwzw
    mul r0.xyz, c13, v1.y
    mad r0.xyz, v1.x, c12, r0
    mad r0.xyz, v1.z, c14, r0
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul o2.xyz, r0.w, r0
    dp4 r0.w, c11, v0
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    dp4 o4.x, c0, r0
    dp4 o4.y, c1, r0
    dp4 o4.z, c2, r0
    dp4 o4.w, c3, r0
    mov o3.xyz, r0
    mad o0.xy, r1.w, c255, r1
    mov o0.zw, r1

// approximately 23 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 95 math, 4 textures
Matrix4x4 unity_WorldToLight at 0
Vector4 _Color at 10
Float _Glossiness at 8
Vector4 _LightColor0 at 7
Vector4 _LightShadowData at 6
Float _Metallic at 9
Vector4 _WorldSpaceCameraPos at 4
Vector4 _WorldSpaceLightPos0 at 5

Set 2D Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2
Set 2D Texture "_MainTex" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_WorldToLight   c0       4
//   _WorldSpaceCameraPos c4       1
//   _WorldSpaceLightPos0 c5       1
//   _LightShadowData     c6       1
//   _LightColor0         c7       1
//   _Glossiness          c8       1
//   _Metallic            c9       1
//   _Color               c10      1
//   _ShadowMapTexture    s0       1
//   _LightTexture0       s1       1
//   _LightTextureB0      s2       1
//   _MainTex             s3       1
//

    ps_3_0
    def c11, 1, 0, 0.5, -0.220916301
    def c12, 0.779083729, 0.00100000005, 31.622776, 9.99999975e-006
    def c13, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c14, 0.00999999978, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2 v2.xyz
    dcl_texcoord3 v3
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    mad r0, v2.xyzx, c11.xxxy, c11.yyyx
    dp4 r1.x, c3, r0
    rcp r1.x, r1.x
    dp4 r2.x, c0, r0
    dp4 r2.y, c1, r0
    dp4 r2.z, c2, r0
    mad r0.xy, r2, r1.x, c11.z
    dp3 r0.z, r2, r2
    texld_pp r1, r0.z, s2
    texld_pp r0, r0, s1
    mul r0.x, r1.x, r0.w
    cmp r0.x, -r2.z, c11.y, r0.x
    texldp_pp r1, v3, s0
    mov r2.xw, c11
    lrp_pp r0.y, r1.x, r2.x, c6.x
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.xyz, r0.x, c7
    add r1.xyz, c4, -v2
    nrm_pp r3.xyz, r1
    add r1.xyz, c5, -v2
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mad_pp r4.xyz, r1, r0.w, r3
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r4, r4
    add r1.w, -r0.w, c12.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c12.z, r0.w
    mul_pp r4.xyz, r0.w, r4
    nrm_pp r5.xyz, v1
    dp3_sat_pp r0.w, r5, r4
    dp3_sat_pp r1.w, r1, r4
    dp3_sat_pp r1.x, r5, r1
    dp3_pp r1.y, r5, r3
    add_pp r1.z, r2.x, -c8.x
    mul_pp r2.x, r1.z, r1.z
    mul_pp r2.y, r2.x, r2.x
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c11.x
    mad r0.w, r0.w, r0.w, c13.y
    rcp r0.w, r0.w
    mul r2.y, r2.y, c13.x
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.z, -r1.z, c11.x
    mad_pp r2.z, r1_abs.y, r2.y, r2.x
    mad_pp r2.x, r1.x, r2.y, r2.x
    mul_pp r2.x, r1_abs.y, r2.x
    add_pp r1.y, -r1_abs.y, c11.x
    mad r2.x, r1.x, r2.z, r2.x
    add r2.x, r2.x, c12.w
    rcp r2.x, r2.x
    mul_pp r2.x, r2.x, c11.z
    mul r0.w, r0.w, r2.x
    mul_pp r2.x, r0.w, c13.z
    mad r0.w, r0.w, -c13.z, c13.w
    rsq r2.x, r2.x
    rcp_pp r2.x, r2.x
    cmp_pp r0.w, r0.w, c14.x, r2.x
    mul_pp r0.w, r1.x, r0.w
    texld r3, v0, s3
    mad_pp r2.xyz, r3, c10, r2.w
    mul_pp r3.xyz, r3, c10
    mad_pp r2.xyz, c9.x, r2, -r2.w
    dp3_pp r2.w, r2, r2
    cmp r2.w, -r2.w, c11.y, c11.x
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.w, c11.x
    mul_pp r1.w, r1.w, r1.w
    dp2add_pp r1.z, r1.w, r1.z, -c11.z
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c11.x, r2
    mul_pp r2.xyz, r4, r5
    mul_pp r0.w, r1.y, r1.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.y, r0.w
    mad_pp r0.w, r1.z, r0.w, c11.x
    add_pp r1.y, -r1.x, c11.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.y, r1.z, r1.y, c11.x
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mov r1.x, c12.x
    mad_pp r0.w, c9.x, -r1.x, r1.x
    mul_pp r1.xyz, r0.w, r3
    mad_pp oC0.xyz, r1, r0, r2
    mov_pp oC0.w, c11.x

// approximately 97 instruction slots used (4 texture, 93 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 160
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Matrix4x4 unity_WorldToShadow[4] at 128
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 2 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[12], immediateIndexed
      dcl_constantbuffer CB2[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
   5: dp3 r0.x, v2.xyzx, cb2[16].xyzx
   6: dp3 r0.y, v2.xyzx, cb2[17].xyzx
   7: dp3 r0.z, v2.xyzx, cb2[18].xyzx
   8: dp3 r0.w, r0.xyzx, r0.xyzx
   9: rsq r0.w, r0.w
  10: mul o2.xyz, r0.wwww, r0.xyzx
  11: mul r0.xyz, v0.yyyy, cb2[13].xyzx
  12: mad r0.xyz, cb2[12].xyzx, v0.xxxx, r0.xyzx
  13: mad r0.xyz, cb2[14].xyzx, v0.zzzz, r0.xyzx
  14: mad o3.xyz, cb2[15].xyzx, v0.wwww, r0.xyzx
  15: mul r0.xyzw, v0.yyyy, cb2[13].xyzw
  16: mad r0.xyzw, cb2[12].xyzw, v0.xxxx, r0.xyzw
  17: mad r0.xyzw, cb2[14].xyzw, v0.zzzz, r0.xyzw
  18: mad r0.xyzw, cb2[15].xyzw, v0.wwww, r0.xyzw
  19: mul r1.xyzw, r0.yyyy, cb1[9].xyzw
  20: mad r1.xyzw, cb1[8].xyzw, r0.xxxx, r1.xyzw
  21: mad r1.xyzw, cb1[10].xyzw, r0.zzzz, r1.xyzw
  22: mad o4.xyzw, cb1[11].xyzw, r0.wwww, r1.xyzw
  23: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 90 math, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2
Set 2D Texture "_ShadowMapTexture" to slot 3

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _Glossiness at 128
  Float _Metallic at 132
  Vector4 _Color at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[25], immediateIndexed
      dcl_sampler s0, mode_comparison
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v3.yyyy, cb0[5].xyzw
   1: mad r0.xyzw, cb0[4].xyzw, v3.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[6].xyzw, v3.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb0[7].xyzw
   4: div r1.xy, r0.xyxx, r0.wwww
   5: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
   7: lt r0.w, l(0.000000), r0.z
   8: dp3 r0.x, r0.xyzx, r0.xyzx
   9: sample r2.xyzw, r0.xxxx, t2.xyzw, s2
  10: and r0.x, r0.w, l(0x3f800000)
  11: mul r0.x, r1.w, r0.x
  12: mul r0.x, r2.x, r0.x
  13: div r0.yzw, v4.xxyz, v4.wwww
  14: sample_c_lz r0.y, r0.yzyy, t3.xxxx, s0, r0.w
  15: add r0.z, -cb3[24].x, l(1.000000)
  16: mad r0.y, r0.y, r0.z, cb3[24].x
  17: mul r0.x, r0.y, r0.x
  18: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  19: add r1.xyz, -v3.xyzx, cb1[4].xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: rsq r0.w, r0.w
  22: mul r1.xyz, r0.wwww, r1.xyzx
  23: add r2.xyz, -v3.xyzx, cb2[0].xyzx
  24: dp3 r0.w, r2.xyzx, r2.xyzx
  25: rsq r0.w, r0.w
  26: mad r3.xyz, r2.xyzx, r0.wwww, r1.xyzx
  27: mul r2.xyz, r0.wwww, r2.xyzx
  28: dp3 r0.w, r3.xyzx, r3.xyzx
  29: max r0.w, r0.w, l(0.001000)
  30: rsq r0.w, r0.w
  31: mul r3.xyz, r0.wwww, r3.xyzx
  32: dp3 r0.w, v2.xyzx, v2.xyzx
  33: rsq r0.w, r0.w
  34: mul r4.xyz, r0.wwww, v2.xyzx
  35: dp3_sat r0.w, r4.xyzx, r3.xyzx
  36: dp3_sat r1.w, r2.xyzx, r3.xyzx
  37: dp3_sat r2.x, r4.xyzx, r2.xyzx
  38: dp3 r1.x, r4.xyzx, r1.xyzx
  39: add r1.y, -cb0[8].x, l(1.000000)
  40: mul r1.z, r1.y, r1.y
  41: mul r2.y, r1.z, r1.z
  42: mad r2.z, r0.w, r2.y, -r0.w
  43: mad r0.w, r2.z, r0.w, l(1.000000)
  44: mad r0.w, r0.w, r0.w, l(0.000000)
  45: mul r2.y, r2.y, l(0.318310)
  46: div r0.w, r2.y, r0.w
  47: mad r2.y, -r1.y, r1.y, l(1.000000)
  48: mad r2.z, |r1.x|, r2.y, r1.z
  49: mad r1.z, r2.x, r2.y, r1.z
  50: mul r1.z, r1.z, |r1.x|
  51: add r1.x, -|r1.x|, l(1.000000)
  52: mad r1.z, r2.x, r2.z, r1.z
  53: add r1.z, r1.z, l(0.000010)
  54: div r1.z, l(0.500000), r1.z
  55: mul r0.w, r0.w, r1.z
  56: mul r0.w, r0.w, l(3.141593)
  57: max r0.w, r0.w, l(0.000100)
  58: sqrt r0.w, r0.w
  59: mul r0.w, r2.x, r0.w
  60: sample r3.xyzw, v1.xyxx, t0.xyzw, s3
  61: mad r2.yzw, r3.xxyz, cb0[9].xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  62: mul r3.xyz, r3.xyzx, cb0[9].xyzx
  63: mad r2.yzw, cb0[8].yyyy, r2.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  64: dp3 r1.z, r2.yzwy, r2.yzwy
  65: ne r1.z, r1.z, l(0.000000)
  66: and r1.z, r1.z, l(0x3f800000)
  67: mul r0.w, r0.w, r1.z
  68: mul r4.xyz, r0.xyzx, r0.wwww
  69: add r0.w, -r1.w, l(1.000000)
  70: mul r1.z, r1.w, r1.w
  71: dp2 r1.y, r1.zzzz, r1.yyyy
  72: add r1.y, r1.y, l(-0.500000)
  73: mul r1.z, r0.w, r0.w
  74: mul r1.z, r1.z, r1.z
  75: mul r0.w, r0.w, r1.z
  76: add r5.xyz, -r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  77: mad r2.yzw, r5.xxyz, r0.wwww, r2.yyzw
  78: mul r2.yzw, r2.yyzw, r4.xxyz
  79: mul r0.w, r1.x, r1.x
  80: mul r0.w, r0.w, r0.w
  81: mul r0.w, r1.x, r0.w
  82: mad r0.w, r1.y, r0.w, l(1.000000)
  83: add r1.x, -r2.x, l(1.000000)
  84: mul r1.z, r1.x, r1.x
  85: mul r1.z, r1.z, r1.z
  86: mul r1.x, r1.x, r1.z
  87: mad r1.x, r1.y, r1.x, l(1.000000)
  88: mul r0.w, r0.w, r1.x
  89: mul r0.w, r2.x, r0.w
  90: mul r0.xyz, r0.wwww, r0.xyzx
  91: mad r0.w, -cb0[8].y, l(0.779084), l(0.779084)
  92: mul r1.xyz, r0.wwww, r3.xyzx
  93: mad o0.xyz, r1.xyzx, r0.xyzx, r2.yzwy
  94: mov o0.w, l(1.000000)
  95: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN 
-- Vertex shader for "d3d9":
// Stats: 23 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _MainTex_ST at 11
Vector4 _ProjectionParams at 10

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   glstate_matrix_mvp  c0       4
//   unity_ObjectToWorld c4       3
//   unity_WorldToObject c7       3
//   _ProjectionParams   c10      1
//   _MainTex_ST         c11      1
//

    vs_3_0
    def c12, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord3 o4
    mad o1.xy, v2, c11, c11.zwzw
    dp4 o3.x, c4, v0
    dp4 o3.y, c5, v0
    dp4 o3.z, c6, v0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul o2.xyz, r0.w, r0
    mad r0, v0.xyzx, c12.xxxy, c12.yyyx
    dp4 r1.y, c1, r0
    mul r2.x, r1.y, c10.x
    mul r2.w, r2.x, c12.z
    dp4 r1.x, c0, r0
    dp4 r1.w, c3, r0
    dp4 r1.z, c2, r0
    mul r2.xz, r1.xyww, c12.z
    mov r3, r1
    mov o4.zw, r1
    add o4.xy, r2.z, r2.xwzw
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 23 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 77 math, 2 textures
Vector4 _Color at 5
Float _Glossiness at 3
Vector4 _LightColor0 at 2
Float _Metallic at 4
Vector4 _WorldSpaceCameraPos at 0
Vector4 _WorldSpaceLightPos0 at 1

Set 2D Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _WorldSpaceCameraPos c0       1
//   _WorldSpaceLightPos0 c1       1
//   _LightColor0         c2       1
//   _Glossiness          c3       1
//   _Metallic            c4       1
//   _Color               c5       1
//   _ShadowMapTexture    s0       1
//   _MainTex             s1       1
//

    ps_3_0
    def c6, -0.220916301, 0.220916301, 0.779083729, 1
    def c7, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c8, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c9, 0.00999999978, 0, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2 v2.xyz
    dcl_texcoord3 v3
    dcl_2d s0
    dcl_2d s1
    add r0.xyz, c0, -v2
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mad_pp r1.xyz, r0, r0.w, c1
    mul_pp r0.xyz, r0.w, r0
    dp3_pp r0.w, r1, r1
    add r1.w, -r0.w, c7.x
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c7.y, r0.w
    mul_pp r1.xyz, r0.w, r1
    nrm_pp r2.xyz, v1
    dp3_sat_pp r0.w, r2, r1
    dp3_sat_pp r1.x, c1, r1
    mov r3, c6
    add_pp r1.y, r3.w, -c3.x
    mul_pp r1.z, r1.y, r1.y
    mul_pp r1.w, r1.z, r1.z
    mad_pp r2.w, r0.w, r1.w, -r0.w
    mad_pp r0.w, r2.w, r0.w, c6.w
    mad r0.w, r0.w, r0.w, c8.y
    rcp r0.w, r0.w
    mul r1.w, r1.w, c8.x
    mul_pp r0.w, r0.w, r1.w
    dp3_pp r0.x, r2, r0
    dp3_sat_pp r0.y, r2, c1
    mad_pp r0.z, r1.y, -r1.y, c6.w
    mad_pp r1.w, r0_abs.x, r0.z, r1.z
    mad_pp r0.z, r0.y, r0.z, r1.z
    mul_pp r0.z, r0.z, r0_abs.x
    add_pp r0.x, -r0_abs.x, c6.w
    mad r0.z, r0.y, r1.w, r0.z
    add r0.z, r0.z, c7.w
    rcp r0.z, r0.z
    mul_pp r0.z, r0.z, -c7.z
    mul r0.z, r0.w, r0.z
    mul_pp r0.w, r0.z, c8.z
    mad r0.z, r0.z, -c8.z, c8.w
    rsq r0.w, r0.w
    rcp_pp r0.w, r0.w
    cmp_pp r0.z, r0.z, c9.x, r0.w
    mul_pp r0.z, r0.y, r0.z
    texld r2, v0, s1
    mad_pp r4.xyz, r2, c5, r3.x
    mul_pp r2.xyz, r2, c5
    mad_pp r3.xyw, c4.x, r4.xyzz, r3.y
    dp3_pp r0.w, r3.xyww, r3.xyww
    cmp r0.w, -r0.w, c9.y, c9.z
    mul_pp r0.z, r0.w, r0.z
    texldp_pp r4, v3, s0
    mul_pp r4.xyz, r4.x, c2
    mul_pp r5.xyz, r0.z, r4
    add_pp r0.z, -r1.x, c6.w
    mul_pp r0.w, r1.x, r1.x
    dp2add_pp r0.w, r0.w, r1.y, c7.z
    mul_pp r1.x, r0.z, r0.z
    mul_pp r1.x, r1.x, r1.x
    mul_pp r0.z, r0.z, r1.x
    lrp_pp r1.xyz, r0.z, c6.w, r3.xyww
    mul_pp r1.xyz, r1, r5
    mul_pp r0.z, r0.x, r0.x
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    mad_pp r0.x, r0.w, r0.x, c6.w
    add_pp r0.z, -r0.y, c6.w
    mul_pp r1.w, r0.z, r0.z
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.z, r0.z, r1.w
    mad_pp r0.z, r0.w, r0.z, c6.w
    mul_pp r0.x, r0.x, r0.z
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.xyz, r0.x, r4
    mad_pp r0.w, c4.x, -r3.z, r3.z
    mul_pp r2.xyz, r0.w, r2
    mad_pp oC0.xyz, r2, r0, r1
    mov_pp oC0.w, c6.w

// approximately 78 instruction slots used (2 texture, 76 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 18 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 2 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mov o0.xyzw, r0.xyzw
   5: mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
   6: dp3 r1.x, v2.xyzx, cb2[16].xyzx
   7: dp3 r1.y, v2.xyzx, cb2[17].xyzx
   8: dp3 r1.z, v2.xyzx, cb2[18].xyzx
   9: dp3 r1.w, r1.xyzx, r1.xyzx
  10: rsq r1.w, r1.w
  11: mul o2.xyz, r1.wwww, r1.xyzx
  12: mul r1.xyz, v0.yyyy, cb2[13].xyzx
  13: mad r1.xyz, cb2[12].xyzx, v0.xxxx, r1.xyzx
  14: mad r1.xyz, cb2[14].xyzx, v0.zzzz, r1.xyzx
  15: mad o3.xyz, cb2[15].xyzx, v0.wwww, r1.xyzx
  16: mul r0.y, r0.y, cb1[5].x
  17: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  18: mov o4.zw, r0.zzzw
  19: add o4.xy, r1.zzzz, r1.xwxx
  20: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 72 math, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _Glossiness at 64
  Float _Metallic at 68
  Vector4 _Color at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v3.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mad r1.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
   4: mul r0.xyz, r0.wwww, r0.xyzx
   5: dp3 r0.w, r1.xyzx, r1.xyzx
   6: max r0.w, r0.w, l(0.001000)
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, r1.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: dp3_sat r0.w, r2.xyzx, r1.xyzx
  13: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
  14: add r1.y, -cb0[4].x, l(1.000000)
  15: mul r1.z, r1.y, r1.y
  16: mul r1.w, r1.z, r1.z
  17: mad r2.w, r0.w, r1.w, -r0.w
  18: mad r0.w, r2.w, r0.w, l(1.000000)
  19: mad r0.w, r0.w, r0.w, l(0.000000)
  20: mul r1.w, r1.w, l(0.318310)
  21: div r0.w, r1.w, r0.w
  22: dp3 r0.x, r2.xyzx, r0.xyzx
  23: dp3_sat r0.y, r2.xyzx, cb2[0].xyzx
  24: mad r0.z, -r1.y, r1.y, l(1.000000)
  25: mad r1.w, |r0.x|, r0.z, r1.z
  26: mad r0.z, r0.y, r0.z, r1.z
  27: mul r0.z, r0.z, |r0.x|
  28: add r0.x, -|r0.x|, l(1.000000)
  29: mad r0.z, r0.y, r1.w, r0.z
  30: add r0.z, r0.z, l(0.000010)
  31: div r0.z, l(0.500000), r0.z
  32: mul r0.z, r0.w, r0.z
  33: mul r0.z, r0.z, l(3.141593)
  34: max r0.z, r0.z, l(0.000100)
  35: sqrt r0.z, r0.z
  36: mul r0.z, r0.y, r0.z
  37: sample r2.xyzw, v1.xyxx, t0.xyzw, s1
  38: mad r3.xyz, r2.xyzx, cb0[5].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  39: mul r2.xyz, r2.xyzx, cb0[5].xyzx
  40: mad r3.xyz, cb0[4].yyyy, r3.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  41: dp3 r0.w, r3.xyzx, r3.xyzx
  42: ne r0.w, r0.w, l(0.000000)
  43: and r0.w, r0.w, l(0x3f800000)
  44: mul r0.z, r0.w, r0.z
  45: div r1.zw, v4.xxxy, v4.wwww
  46: sample r4.xyzw, r1.zwzz, t1.xyzw, s0
  47: mul r4.xyz, r4.xxxx, cb0[2].xyzx
  48: mul r5.xyz, r0.zzzz, r4.xyzx
  49: add r0.z, -r1.x, l(1.000000)
  50: mul r0.w, r1.x, r1.x
  51: dp2 r0.w, r0.wwww, r1.yyyy
  52: add r0.w, r0.w, l(-0.500000)
  53: mul r1.x, r0.z, r0.z
  54: mul r1.x, r1.x, r1.x
  55: mul r0.z, r0.z, r1.x
  56: add r1.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  57: mad r1.xyz, r1.xyzx, r0.zzzz, r3.xyzx
  58: mul r1.xyz, r1.xyzx, r5.xyzx
  59: mul r0.z, r0.x, r0.x
  60: mul r0.z, r0.z, r0.z
  61: mul r0.x, r0.x, r0.z
  62: mad r0.x, r0.w, r0.x, l(1.000000)
  63: add r0.z, -r0.y, l(1.000000)
  64: mul r1.w, r0.z, r0.z
  65: mul r1.w, r1.w, r1.w
  66: mul r0.z, r0.z, r1.w
  67: mad r0.z, r0.w, r0.z, l(1.000000)
  68: mul r0.x, r0.x, r0.z
  69: mul r0.x, r0.y, r0.x
  70: mul r0.xyz, r0.xxxx, r4.xyzx
  71: mad r0.w, -cb0[4].y, l(0.779084), l(0.779084)
  72: mul r2.xyz, r0.wwww, r2.xyzx
  73: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
  74: mov o0.w, l(1.000000)
  75: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL_COOKIE SHADOWS_SCREEN 
-- Vertex shader for "d3d9":
// Stats: 23 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _MainTex_ST at 11
Vector4 _ProjectionParams at 10

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   glstate_matrix_mvp  c0       4
//   unity_ObjectToWorld c4       3
//   unity_WorldToObject c7       3
//   _ProjectionParams   c10      1
//   _MainTex_ST         c11      1
//

    vs_3_0
    def c12, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord3 o4
    mad o1.xy, v2, c11, c11.zwzw
    dp4 o3.x, c4, v0
    dp4 o3.y, c5, v0
    dp4 o3.z, c6, v0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul o2.xyz, r0.w, r0
    mad r0, v0.xyzx, c12.xxxy, c12.yyyx
    dp4 r1.y, c1, r0
    mul r2.x, r1.y, c10.x
    mul r2.w, r2.x, c12.z
    dp4 r1.x, c0, r0
    dp4 r1.w, c3, r0
    dp4 r1.z, c2, r0
    mul r2.xz, r1.xyww, c12.z
    mov r3, r1
    mov o4.zw, r1
    add o4.xy, r2.z, r2.xwzw
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 23 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 82 math, 3 textures
Matrix4x2 unity_WorldToLight at 0
Vector4 _Color at 7
Float _Glossiness at 5
Vector4 _LightColor0 at 4
Float _Metallic at 6
Vector4 _WorldSpaceCameraPos at 2
Vector4 _WorldSpaceLightPos0 at 3

Set 2D Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_MainTex" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_WorldToLight   c0       2
//   _WorldSpaceCameraPos c2       1
//   _WorldSpaceLightPos0 c3       1
//   _LightColor0         c4       1
//   _Glossiness          c5       1
//   _Metallic            c6       1
//   _Color               c7       1
//   _ShadowMapTexture    s0       1
//   _LightTexture0       s1       1
//   _MainTex             s2       1
//

    ps_3_0
    def c8, 1, 0, -0.220916301, 0.220916301
    def c9, 0.779083729, 0.00100000005, 31.622776, -0.5
    def c10, 9.99999975e-006, 0.318309873, 1.00000001e-007, 3.14159274
    def c11, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2 v2.xyz
    dcl_texcoord3 v3
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    add r0.xyz, c2, -v2
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mad_pp r1.xyz, r0, r0.w, c3
    mul_pp r0.xyz, r0.w, r0
    dp3_pp r0.w, r1, r1
    add r1.w, -r0.w, c9.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c9.z, r0.w
    mul_pp r1.xyz, r0.w, r1
    nrm_pp r2.xyz, v1
    dp3_sat_pp r0.w, r2, r1
    dp3_sat_pp r1.x, c3, r1
    mov r3.xzw, c8
    add_pp r1.y, r3.x, -c5.x
    mul_pp r1.z, r1.y, r1.y
    mul_pp r1.w, r1.z, r1.z
    mad_pp r2.w, r0.w, r1.w, -r0.w
    mad_pp r0.w, r2.w, r0.w, c8.x
    mad r0.w, r0.w, r0.w, c10.z
    rcp r0.w, r0.w
    mul r1.w, r1.w, c10.y
    mul_pp r0.w, r0.w, r1.w
    dp3_pp r0.x, r2, r0
    dp3_sat_pp r0.y, r2, c3
    mad_pp r0.z, r1.y, -r1.y, c8.x
    mad_pp r1.w, r0_abs.x, r0.z, r1.z
    mad_pp r0.z, r0.y, r0.z, r1.z
    mul_pp r0.z, r0.z, r0_abs.x
    add_pp r0.x, -r0_abs.x, c8.x
    mad r0.z, r0.y, r1.w, r0.z
    add r0.z, r0.z, c10.x
    rcp r0.z, r0.z
    mul_pp r0.z, r0.z, -c9.w
    mul r0.z, r0.w, r0.z
    mul_pp r0.w, r0.z, c10.w
    mad r0.z, r0.z, -c11.x, c11.y
    rsq r0.w, r0.w
    rcp_pp r0.w, r0.w
    cmp_pp r0.z, r0.z, c11.z, r0.w
    mul_pp r0.z, r0.y, r0.z
    texld r2, v0, s2
    mad_pp r3.xyz, r2, c7, r3.z
    mul_pp r2.xyz, r2, c7
    mad_pp r3.xyz, c6.x, r3, r3.w
    dp3_pp r0.w, r3, r3
    cmp r0.w, -r0.w, c8.y, c8.x
    mul_pp r0.z, r0.w, r0.z
    mad r4, v2.xyzx, c8.xxxy, c8.yyyx
    dp4 r5.x, c0, r4
    dp4 r5.y, c1, r4
    texld r4, r5, s1
    texldp_pp r5, v3, s0
    mul_pp r0.w, r4.w, r5.x
    mul_pp r4.xyz, r0.w, c4
    mul_pp r5.xyz, r0.z, r4
    add_pp r0.z, -r1.x, c8.x
    mul_pp r0.w, r1.x, r1.x
    dp2add_pp r0.w, r0.w, r1.y, c9.w
    mul_pp r1.x, r0.z, r0.z
    mul_pp r1.x, r1.x, r1.x
    mul_pp r0.z, r0.z, r1.x
    lrp_pp r1.xyz, r0.z, c8.x, r3
    mul_pp r1.xyz, r1, r5
    mul_pp r0.z, r0.x, r0.x
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    mad_pp r0.x, r0.w, r0.x, c8.x
    add_pp r0.z, -r0.y, c8.x
    mul_pp r1.w, r0.z, r0.z
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.z, r0.z, r1.w
    mad_pp r0.z, r0.w, r0.z, c8.x
    mul_pp r0.x, r0.x, r0.z
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.xyz, r0.x, r4
    mov r3.x, c9.x
    mad_pp r0.w, c6.x, -r3.x, r3.x
    mul_pp r2.xyz, r0.w, r2
    mad_pp oC0.xyz, r2, r0, r1
    mov_pp oC0.w, c8.x

// approximately 84 instruction slots used (3 texture, 81 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 18 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 160
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 2 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mov o0.xyzw, r0.xyzw
   5: mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
   6: dp3 r1.x, v2.xyzx, cb2[16].xyzx
   7: dp3 r1.y, v2.xyzx, cb2[17].xyzx
   8: dp3 r1.z, v2.xyzx, cb2[18].xyzx
   9: dp3 r1.w, r1.xyzx, r1.xyzx
  10: rsq r1.w, r1.w
  11: mul o2.xyz, r1.wwww, r1.xyzx
  12: mul r1.xyz, v0.yyyy, cb2[13].xyzx
  13: mad r1.xyz, cb2[12].xyzx, v0.xxxx, r1.xyzx
  14: mad r1.xyz, cb2[14].xyzx, v0.zzzz, r1.xyzx
  15: mad o3.xyz, cb2[15].xyzx, v0.wwww, r1.xyzx
  16: mul r0.y, r0.y, cb1[5].x
  17: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  18: mov o4.zw, r0.zzzw
  19: add o4.xy, r1.zzzz, r1.xwxx
  20: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 77 math, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_ShadowMapTexture" to slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _Glossiness at 128
  Float _Metallic at 132
  Vector4 _Color at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xy, v3.yyyy, cb0[5].xyxx
   1: mad r0.xy, cb0[4].xyxx, v3.xxxx, r0.xyxx
   2: mad r0.xy, cb0[6].xyxx, v3.zzzz, r0.xyxx
   3: add r0.xy, r0.xyxx, cb0[7].xyxx
   4: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
   5: div r0.xy, v4.xyxx, v4.wwww
   6: sample r1.xyzw, r0.xyxx, t2.xyzw, s0
   7: mul r0.x, r0.w, r1.x
   8: mul r0.xyz, r0.xxxx, cb0[2].xyzx
   9: add r1.xyz, -v3.xyzx, cb1[4].xyzx
  10: dp3 r0.w, r1.xyzx, r1.xyzx
  11: rsq r0.w, r0.w
  12: mad r2.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
  13: mul r1.xyz, r0.wwww, r1.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.001000)
  16: rsq r0.w, r0.w
  17: mul r2.xyz, r0.wwww, r2.xyzx
  18: dp3 r0.w, v2.xyzx, v2.xyzx
  19: rsq r0.w, r0.w
  20: mul r3.xyz, r0.wwww, v2.xyzx
  21: dp3_sat r0.w, r3.xyzx, r2.xyzx
  22: dp3_sat r1.w, cb2[0].xyzx, r2.xyzx
  23: add r2.x, -cb0[8].x, l(1.000000)
  24: mul r2.y, r2.x, r2.x
  25: mul r2.z, r2.y, r2.y
  26: mad r2.w, r0.w, r2.z, -r0.w
  27: mad r0.w, r2.w, r0.w, l(1.000000)
  28: mad r0.w, r0.w, r0.w, l(0.000000)
  29: mul r2.z, r2.z, l(0.318310)
  30: div r0.w, r2.z, r0.w
  31: dp3 r1.x, r3.xyzx, r1.xyzx
  32: dp3_sat r1.y, r3.xyzx, cb2[0].xyzx
  33: mad r1.z, -r2.x, r2.x, l(1.000000)
  34: mad r2.z, |r1.x|, r1.z, r2.y
  35: mad r1.z, r1.y, r1.z, r2.y
  36: mul r1.z, r1.z, |r1.x|
  37: add r1.x, -|r1.x|, l(1.000000)
  38: mad r1.z, r1.y, r2.z, r1.z
  39: add r1.z, r1.z, l(0.000010)
  40: div r1.z, l(0.500000), r1.z
  41: mul r0.w, r0.w, r1.z
  42: mul r0.w, r0.w, l(3.141593)
  43: max r0.w, r0.w, l(0.000100)
  44: sqrt r0.w, r0.w
  45: mul r0.w, r1.y, r0.w
  46: sample r3.xyzw, v1.xyxx, t0.xyzw, s2
  47: mad r2.yzw, r3.xxyz, cb0[9].xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  48: mul r3.xyz, r3.xyzx, cb0[9].xyzx
  49: mad r2.yzw, cb0[8].yyyy, r2.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  50: dp3 r1.z, r2.yzwy, r2.yzwy
  51: ne r1.z, r1.z, l(0.000000)
  52: and r1.z, r1.z, l(0x3f800000)
  53: mul r0.w, r0.w, r1.z
  54: mul r4.xyz, r0.xyzx, r0.wwww
  55: add r0.w, -r1.w, l(1.000000)
  56: mul r1.z, r1.w, r1.w
  57: dp2 r1.z, r1.zzzz, r2.xxxx
  58: add r1.z, r1.z, l(-0.500000)
  59: mul r1.w, r0.w, r0.w
  60: mul r1.w, r1.w, r1.w
  61: mul r0.w, r0.w, r1.w
  62: add r5.xyz, -r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  63: mad r2.xyz, r5.xyzx, r0.wwww, r2.yzwy
  64: mul r2.xyz, r2.xyzx, r4.xyzx
  65: mul r0.w, r1.x, r1.x
  66: mul r0.w, r0.w, r0.w
  67: mul r0.w, r1.x, r0.w
  68: mad r0.w, r1.z, r0.w, l(1.000000)
  69: add r1.x, -r1.y, l(1.000000)
  70: mul r1.w, r1.x, r1.x
  71: mul r1.w, r1.w, r1.w
  72: mul r1.x, r1.x, r1.w
  73: mad r1.x, r1.z, r1.x, l(1.000000)
  74: mul r0.w, r0.w, r1.x
  75: mul r0.w, r1.y, r0.w
  76: mul r0.xyz, r0.wwww, r0.xyzx
  77: mad r0.w, -cb0[8].y, l(0.779084), l(0.779084)
  78: mul r1.xyz, r0.wwww, r3.xyzx
  79: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
  80: mov o0.w, l(1.000000)
  81: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT SHADOWS_CUBE 
-- Vertex shader for "d3d9":
// Stats: 19 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _LightPositionRange at 10
Vector4 _MainTex_ST at 11

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   glstate_matrix_mvp  c0       4
//   unity_ObjectToWorld c4       3
//   unity_WorldToObject c7       3
//   _LightPositionRange c10      1
//   _MainTex_ST         c11      1
//

    vs_3_0
    def c12, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord3 o4.xyz
    mad r0, v0.xyzx, c12.xxxy, c12.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    mad o1.xy, v2, c11, c11.zwzw
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul o2.xyz, r0.w, r0
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o4.xyz, r0, -c10
    mov o3.xyz, r0
    mad o0.xy, r1.w, c255, r1
    mov o0.zw, r1

// approximately 19 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 94 math, 3 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 10
Float _Glossiness at 8
Vector4 _LightColor0 at 7
Vector4 _LightPositionRange at 5
Vector4 _LightShadowData at 6
Float _Metallic at 9
Vector4 _WorldSpaceCameraPos at 3
Vector4 _WorldSpaceLightPos0 at 4

Set CUBE Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_MainTex" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_WorldToLight   c0       3
//   _WorldSpaceCameraPos c3       1
//   _WorldSpaceLightPos0 c4       1
//   _LightPositionRange  c5       1
//   _LightShadowData     c6       1
//   _LightColor0         c7       1
//   _Glossiness          c8       1
//   _Metallic            c9       1
//   _Color               c10      1
//   _ShadowMapTexture    s0       1
//   _LightTexture0       s1       1
//   _MainTex             s2       1
//

    ps_3_0
    def c11, 1, 0, 0.970000029, -0.220916301
    def c12, 0.779083729, 0.00100000005, 31.622776, -0.5
    def c13, 9.99999975e-006, 0.318309873, 1.00000001e-007, 3.14159274
    def c14, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2 v2.xyz
    dcl_texcoord3 v3.xyz
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    dp3 r0.x, v3, v3
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    mul r0.x, r0.x, c5.w
    texld r1, v3, s0
    mad r0.x, r0.x, -c11.z, r1.x
    mov r1.xw, c11
    cmp_pp r0.x, r0.x, r1.x, c6.x
    mad r2, v2.xyzx, c11.xxxy, c11.yyyx
    dp4 r3.x, c0, r2
    dp4 r3.y, c1, r2
    dp4 r3.z, c2, r2
    dp3 r0.y, r3, r3
    texld r2, r0.y, s1
    mul_pp r0.x, r0.x, r2.x
    mul_pp r0.xyz, r0.x, c7
    add r2.xyz, c3, -v2
    nrm_pp r3.xyz, r2
    add r2.xyz, c4, -v2
    dp3 r0.w, r2, r2
    rsq r0.w, r0.w
    mad_pp r4.xyz, r2, r0.w, r3
    mul_pp r2.xyz, r0.w, r2
    dp3_pp r0.w, r4, r4
    add r1.y, -r0.w, c12.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.y, c12.z, r0.w
    mul_pp r4.xyz, r0.w, r4
    nrm_pp r5.xyz, v1
    dp3_sat_pp r0.w, r5, r4
    dp3_sat_pp r1.y, r2, r4
    dp3_sat_pp r1.z, r5, r2
    dp3_pp r2.x, r5, r3
    add_pp r1.x, r1.x, -c8.x
    mul_pp r2.y, r1.x, r1.x
    mul_pp r2.z, r2.y, r2.y
    mad_pp r2.w, r0.w, r2.z, -r0.w
    mad_pp r0.w, r2.w, r0.w, c11.x
    mad r0.w, r0.w, r0.w, c13.z
    rcp r0.w, r0.w
    mul r2.z, r2.z, c13.y
    mul_pp r0.w, r0.w, r2.z
    mad_pp r2.z, r1.x, -r1.x, c11.x
    mad_pp r2.w, r2_abs.x, r2.z, r2.y
    mad_pp r2.y, r1.z, r2.z, r2.y
    mul_pp r2.y, r2.y, r2_abs.x
    add_pp r2.x, -r2_abs.x, c11.x
    mad r2.y, r1.z, r2.w, r2.y
    add r2.y, r2.y, c13.x
    rcp r2.y, r2.y
    mul_pp r2.y, r2.y, -c12.w
    mul r0.w, r0.w, r2.y
    mul_pp r2.y, r0.w, c13.w
    mad r0.w, r0.w, -c14.x, c14.y
    rsq r2.y, r2.y
    rcp_pp r2.y, r2.y
    cmp_pp r0.w, r0.w, c14.z, r2.y
    mul_pp r0.w, r1.z, r0.w
    texld r3, v0, s2
    mad_pp r2.yzw, r3.xxyz, c10.xxyz, r1.w
    mul_pp r3.xyz, r3, c10
    mad_pp r2.yzw, c9.x, r2, -r1.w
    dp3_pp r1.w, r2.yzww, r2.yzww
    cmp r1.w, -r1.w, c11.y, c11.x
    mul_pp r0.w, r0.w, r1.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.y, c11.x
    mul_pp r1.y, r1.y, r1.y
    dp2add_pp r1.x, r1.y, r1.x, c12.w
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r5.xyz, r0.w, c11.x, r2.yzww
    mul_pp r2.yzw, r4.xxyz, r5.xxyz
    mul_pp r0.w, r2.x, r2.x
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r2.x, r0.w
    mad_pp r0.w, r1.x, r0.w, c11.x
    add_pp r1.y, -r1.z, c11.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c11.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.z, r0.w
    mul_pp r0.xyz, r0.w, r0
    mov r1.x, c12.x
    mad_pp r0.w, c9.x, -r1.x, r1.x
    mul_pp r1.xyz, r0.w, r3
    mad_pp oC0.xyz, r1, r0, r2.yzww
    mov_pp oC0.w, c11.x

// approximately 96 instruction slots used (3 texture, 93 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 16 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 160
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 2 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_constantbuffer CB2[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_temps 1
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
   5: dp3 r0.x, v2.xyzx, cb2[16].xyzx
   6: dp3 r0.y, v2.xyzx, cb2[17].xyzx
   7: dp3 r0.z, v2.xyzx, cb2[18].xyzx
   8: dp3 r0.w, r0.xyzx, r0.xyzx
   9: rsq r0.w, r0.w
  10: mul o2.xyz, r0.wwww, r0.xyzx
  11: mul r0.xyz, v0.yyyy, cb2[13].xyzx
  12: mad r0.xyz, cb2[12].xyzx, v0.xxxx, r0.xyzx
  13: mad r0.xyz, cb2[14].xyzx, v0.zzzz, r0.xyzx
  14: mad r0.xyz, cb2[15].xyzx, v0.wwww, r0.xyzx
  15: mov o3.xyz, r0.xyzx
  16: add o4.xyz, r0.xyzx, -cb1[1].xyzx
  17: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 86 math, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set CUBE Texture "_ShadowMapTexture" to slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _Glossiness at 128
  Float _Metallic at 132
  Vector4 _Color at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_constantbuffer CB3[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: sqrt r0.x, r0.x
   2: mul r0.x, r0.x, cb2[1].w
   3: mul r0.x, r0.x, l(0.970000)
   4: sample r1.xyzw, v4.xyzx, t2.xyzw, s0
   5: lt r0.x, r1.x, r0.x
   6: movc r0.x, r0.x, cb3[24].x, l(1.000000)
   7: mul r0.yzw, v3.yyyy, cb0[5].xxyz
   8: mad r0.yzw, cb0[4].xxyz, v3.xxxx, r0.yyzw
   9: mad r0.yzw, cb0[6].xxyz, v3.zzzz, r0.yyzw
  10: add r0.yzw, r0.yyzw, cb0[7].xxyz
  11: dp3 r0.y, r0.yzwy, r0.yzwy
  12: sample r1.xyzw, r0.yyyy, t1.xyzw, s1
  13: mul r0.x, r0.x, r1.x
  14: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  15: add r1.xyz, -v3.xyzx, cb1[4].xyzx
  16: dp3 r0.w, r1.xyzx, r1.xyzx
  17: rsq r0.w, r0.w
  18: mul r1.xyz, r0.wwww, r1.xyzx
  19: add r2.xyz, -v3.xyzx, cb2[0].xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: rsq r0.w, r0.w
  22: mad r3.xyz, r2.xyzx, r0.wwww, r1.xyzx
  23: mul r2.xyz, r0.wwww, r2.xyzx
  24: dp3 r0.w, r3.xyzx, r3.xyzx
  25: max r0.w, r0.w, l(0.001000)
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v2.xyzx, v2.xyzx
  29: rsq r0.w, r0.w
  30: mul r4.xyz, r0.wwww, v2.xyzx
  31: dp3_sat r0.w, r4.xyzx, r3.xyzx
  32: dp3_sat r1.w, r2.xyzx, r3.xyzx
  33: dp3_sat r2.x, r4.xyzx, r2.xyzx
  34: dp3 r1.x, r4.xyzx, r1.xyzx
  35: add r1.y, -cb0[8].x, l(1.000000)
  36: mul r1.z, r1.y, r1.y
  37: mul r2.y, r1.z, r1.z
  38: mad r2.z, r0.w, r2.y, -r0.w
  39: mad r0.w, r2.z, r0.w, l(1.000000)
  40: mad r0.w, r0.w, r0.w, l(0.000000)
  41: mul r2.y, r2.y, l(0.318310)
  42: div r0.w, r2.y, r0.w
  43: mad r2.y, -r1.y, r1.y, l(1.000000)
  44: mad r2.z, |r1.x|, r2.y, r1.z
  45: mad r1.z, r2.x, r2.y, r1.z
  46: mul r1.z, r1.z, |r1.x|
  47: add r1.x, -|r1.x|, l(1.000000)
  48: mad r1.z, r2.x, r2.z, r1.z
  49: add r1.z, r1.z, l(0.000010)
  50: div r1.z, l(0.500000), r1.z
  51: mul r0.w, r0.w, r1.z
  52: mul r0.w, r0.w, l(3.141593)
  53: max r0.w, r0.w, l(0.000100)
  54: sqrt r0.w, r0.w
  55: mul r0.w, r2.x, r0.w
  56: sample r3.xyzw, v1.xyxx, t0.xyzw, s2
  57: mad r2.yzw, r3.xxyz, cb0[9].xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  58: mul r3.xyz, r3.xyzx, cb0[9].xyzx
  59: mad r2.yzw, cb0[8].yyyy, r2.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  60: dp3 r1.z, r2.yzwy, r2.yzwy
  61: ne r1.z, r1.z, l(0.000000)
  62: and r1.z, r1.z, l(0x3f800000)
  63: mul r0.w, r0.w, r1.z
  64: mul r4.xyz, r0.xyzx, r0.wwww
  65: add r0.w, -r1.w, l(1.000000)
  66: mul r1.z, r1.w, r1.w
  67: dp2 r1.y, r1.zzzz, r1.yyyy
  68: add r1.y, r1.y, l(-0.500000)
  69: mul r1.z, r0.w, r0.w
  70: mul r1.z, r1.z, r1.z
  71: mul r0.w, r0.w, r1.z
  72: add r5.xyz, -r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  73: mad r2.yzw, r5.xxyz, r0.wwww, r2.yyzw
  74: mul r2.yzw, r2.yyzw, r4.xxyz
  75: mul r0.w, r1.x, r1.x
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.x, r0.w
  78: mad r0.w, r1.y, r0.w, l(1.000000)
  79: add r1.x, -r2.x, l(1.000000)
  80: mul r1.z, r1.x, r1.x
  81: mul r1.z, r1.z, r1.z
  82: mul r1.x, r1.x, r1.z
  83: mad r1.x, r1.y, r1.x, l(1.000000)
  84: mul r0.w, r0.w, r1.x
  85: mul r0.w, r2.x, r0.w
  86: mul r0.xyz, r0.wwww, r0.xyzx
  87: mad r0.w, -cb0[8].y, l(0.779084), l(0.779084)
  88: mul r1.xyz, r0.wwww, r3.xyzx
  89: mad o0.xyz, r1.xyzx, r0.xyzx, r2.yzwy
  90: mov o0.w, l(1.000000)
  91: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE SHADOWS_CUBE 
-- Vertex shader for "d3d9":
// Stats: 19 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _LightPositionRange at 10
Vector4 _MainTex_ST at 11

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   glstate_matrix_mvp  c0       4
//   unity_ObjectToWorld c4       3
//   unity_WorldToObject c7       3
//   _LightPositionRange c10      1
//   _MainTex_ST         c11      1
//

    vs_3_0
    def c12, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord3 o4.xyz
    mad r0, v0.xyzx, c12.xxxy, c12.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    mad o1.xy, v2, c11, c11.zwzw
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul o2.xyz, r0.w, r0
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o4.xyz, r0, -c10
    mov o3.xyz, r0
    mad o0.xy, r1.w, c255, r1
    mov o0.zw, r1

// approximately 19 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 95 math, 4 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 10
Float _Glossiness at 8
Vector4 _LightColor0 at 7
Vector4 _LightPositionRange at 5
Vector4 _LightShadowData at 6
Float _Metallic at 9
Vector4 _WorldSpaceCameraPos at 3
Vector4 _WorldSpaceLightPos0 at 4

Set CUBE Texture "_ShadowMapTexture" to slot 0
Set CUBE Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2
Set 2D Texture "_MainTex" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_WorldToLight   c0       3
//   _WorldSpaceCameraPos c3       1
//   _WorldSpaceLightPos0 c4       1
//   _LightPositionRange  c5       1
//   _LightShadowData     c6       1
//   _LightColor0         c7       1
//   _Glossiness          c8       1
//   _Metallic            c9       1
//   _Color               c10      1
//   _ShadowMapTexture    s0       1
//   _LightTexture0       s1       1
//   _LightTextureB0      s2       1
//   _MainTex             s3       1
//

    ps_3_0
    def c11, 1, 0, 0.970000029, -0.220916301
    def c12, 0.779083729, 0.00100000005, 31.622776, -0.5
    def c13, 9.99999975e-006, 0.318309873, 1.00000001e-007, 3.14159274
    def c14, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2 v2.xyz
    dcl_texcoord3 v3.xyz
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    mad r0, v2.xyzx, c11.xxxy, c11.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp3 r0.x, r1, r1
    texld r1, r1, s1
    texld r0, r0.x, s2
    mul r0.x, r1.w, r0.x
    dp3 r0.y, v3, v3
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    mul r0.y, r0.y, c5.w
    texld r1, v3, s0
    mad r0.y, r0.y, -c11.z, r1.x
    mov r1.xw, c11
    cmp_pp r0.y, r0.y, r1.x, c6.x
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.xyz, r0.x, c7
    add r2.xyz, c3, -v2
    nrm_pp r3.xyz, r2
    add r2.xyz, c4, -v2
    dp3 r0.w, r2, r2
    rsq r0.w, r0.w
    mad_pp r4.xyz, r2, r0.w, r3
    mul_pp r2.xyz, r0.w, r2
    dp3_pp r0.w, r4, r4
    add r1.y, -r0.w, c12.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.y, c12.z, r0.w
    mul_pp r4.xyz, r0.w, r4
    nrm_pp r5.xyz, v1
    dp3_sat_pp r0.w, r5, r4
    dp3_sat_pp r1.y, r2, r4
    dp3_sat_pp r1.z, r5, r2
    dp3_pp r2.x, r5, r3
    add_pp r1.x, r1.x, -c8.x
    mul_pp r2.y, r1.x, r1.x
    mul_pp r2.z, r2.y, r2.y
    mad_pp r2.w, r0.w, r2.z, -r0.w
    mad_pp r0.w, r2.w, r0.w, c11.x
    mad r0.w, r0.w, r0.w, c13.z
    rcp r0.w, r0.w
    mul r2.z, r2.z, c13.y
    mul_pp r0.w, r0.w, r2.z
    mad_pp r2.z, r1.x, -r1.x, c11.x
    mad_pp r2.w, r2_abs.x, r2.z, r2.y
    mad_pp r2.y, r1.z, r2.z, r2.y
    mul_pp r2.y, r2.y, r2_abs.x
    add_pp r2.x, -r2_abs.x, c11.x
    mad r2.y, r1.z, r2.w, r2.y
    add r2.y, r2.y, c13.x
    rcp r2.y, r2.y
    mul_pp r2.y, r2.y, -c12.w
    mul r0.w, r0.w, r2.y
    mul_pp r2.y, r0.w, c13.w
    mad r0.w, r0.w, -c14.x, c14.y
    rsq r2.y, r2.y
    rcp_pp r2.y, r2.y
    cmp_pp r0.w, r0.w, c14.z, r2.y
    mul_pp r0.w, r1.z, r0.w
    texld r3, v0, s3
    mad_pp r2.yzw, r3.xxyz, c10.xxyz, r1.w
    mul_pp r3.xyz, r3, c10
    mad_pp r2.yzw, c9.x, r2, -r1.w
    dp3_pp r1.w, r2.yzww, r2.yzww
    cmp r1.w, -r1.w, c11.y, c11.x
    mul_pp r0.w, r0.w, r1.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.y, c11.x
    mul_pp r1.y, r1.y, r1.y
    dp2add_pp r1.x, r1.y, r1.x, c12.w
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r5.xyz, r0.w, c11.x, r2.yzww
    mul_pp r2.yzw, r4.xxyz, r5.xxyz
    mul_pp r0.w, r2.x, r2.x
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r2.x, r0.w
    mad_pp r0.w, r1.x, r0.w, c11.x
    add_pp r1.y, -r1.z, c11.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c11.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.z, r0.w
    mul_pp r0.xyz, r0.w, r0
    mov r1.x, c12.x
    mad_pp r0.w, c9.x, -r1.x, r1.x
    mul_pp r1.xyz, r0.w, r3
    mad_pp oC0.xyz, r1, r0, r2.yzww
    mov_pp oC0.w, c11.x

// approximately 98 instruction slots used (4 texture, 94 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 16 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 160
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 2 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_constantbuffer CB2[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_temps 1
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
   5: dp3 r0.x, v2.xyzx, cb2[16].xyzx
   6: dp3 r0.y, v2.xyzx, cb2[17].xyzx
   7: dp3 r0.z, v2.xyzx, cb2[18].xyzx
   8: dp3 r0.w, r0.xyzx, r0.xyzx
   9: rsq r0.w, r0.w
  10: mul o2.xyz, r0.wwww, r0.xyzx
  11: mul r0.xyz, v0.yyyy, cb2[13].xyzx
  12: mad r0.xyz, cb2[12].xyzx, v0.xxxx, r0.xyzx
  13: mad r0.xyz, cb2[14].xyzx, v0.zzzz, r0.xyzx
  14: mad r0.xyz, cb2[15].xyzx, v0.wwww, r0.xyzx
  15: mov o3.xyz, r0.xyzx
  16: add o4.xyz, r0.xyzx, -cb1[1].xyzx
  17: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 87 math, 4 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTextureB0" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 3

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _Glossiness at 128
  Float _Metallic at 132
  Vector4 _Color at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_constantbuffer CB3[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v3.yyyy, cb0[5].xyzx
   1: mad r0.xyz, cb0[4].xyzx, v3.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[6].xyzx, v3.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[7].xyzx
   4: dp3 r0.w, r0.xyzx, r0.xyzx
   5: sample r1.xyzw, r0.xyzx, t2.xyzw, s1
   6: sample r0.xyzw, r0.wwww, t1.xyzw, s2
   7: mul r0.x, r1.w, r0.x
   8: dp3 r0.y, v4.xyzx, v4.xyzx
   9: sqrt r0.y, r0.y
  10: mul r0.y, r0.y, cb2[1].w
  11: mul r0.y, r0.y, l(0.970000)
  12: sample r1.xyzw, v4.xyzx, t3.xyzw, s0
  13: lt r0.y, r1.x, r0.y
  14: movc r0.y, r0.y, cb3[24].x, l(1.000000)
  15: mul r0.x, r0.y, r0.x
  16: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  17: add r1.xyz, -v3.xyzx, cb1[4].xyzx
  18: dp3 r0.w, r1.xyzx, r1.xyzx
  19: rsq r0.w, r0.w
  20: mul r1.xyz, r0.wwww, r1.xyzx
  21: add r2.xyz, -v3.xyzx, cb2[0].xyzx
  22: dp3 r0.w, r2.xyzx, r2.xyzx
  23: rsq r0.w, r0.w
  24: mad r3.xyz, r2.xyzx, r0.wwww, r1.xyzx
  25: mul r2.xyz, r0.wwww, r2.xyzx
  26: dp3 r0.w, r3.xyzx, r3.xyzx
  27: max r0.w, r0.w, l(0.001000)
  28: rsq r0.w, r0.w
  29: mul r3.xyz, r0.wwww, r3.xyzx
  30: dp3 r0.w, v2.xyzx, v2.xyzx
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r0.wwww, v2.xyzx
  33: dp3_sat r0.w, r4.xyzx, r3.xyzx
  34: dp3_sat r1.w, r2.xyzx, r3.xyzx
  35: dp3_sat r2.x, r4.xyzx, r2.xyzx
  36: dp3 r1.x, r4.xyzx, r1.xyzx
  37: add r1.y, -cb0[8].x, l(1.000000)
  38: mul r1.z, r1.y, r1.y
  39: mul r2.y, r1.z, r1.z
  40: mad r2.z, r0.w, r2.y, -r0.w
  41: mad r0.w, r2.z, r0.w, l(1.000000)
  42: mad r0.w, r0.w, r0.w, l(0.000000)
  43: mul r2.y, r2.y, l(0.318310)
  44: div r0.w, r2.y, r0.w
  45: mad r2.y, -r1.y, r1.y, l(1.000000)
  46: mad r2.z, |r1.x|, r2.y, r1.z
  47: mad r1.z, r2.x, r2.y, r1.z
  48: mul r1.z, r1.z, |r1.x|
  49: add r1.x, -|r1.x|, l(1.000000)
  50: mad r1.z, r2.x, r2.z, r1.z
  51: add r1.z, r1.z, l(0.000010)
  52: div r1.z, l(0.500000), r1.z
  53: mul r0.w, r0.w, r1.z
  54: mul r0.w, r0.w, l(3.141593)
  55: max r0.w, r0.w, l(0.000100)
  56: sqrt r0.w, r0.w
  57: mul r0.w, r2.x, r0.w
  58: sample r3.xyzw, v1.xyxx, t0.xyzw, s3
  59: mad r2.yzw, r3.xxyz, cb0[9].xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  60: mul r3.xyz, r3.xyzx, cb0[9].xyzx
  61: mad r2.yzw, cb0[8].yyyy, r2.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  62: dp3 r1.z, r2.yzwy, r2.yzwy
  63: ne r1.z, r1.z, l(0.000000)
  64: and r1.z, r1.z, l(0x3f800000)
  65: mul r0.w, r0.w, r1.z
  66: mul r4.xyz, r0.xyzx, r0.wwww
  67: add r0.w, -r1.w, l(1.000000)
  68: mul r1.z, r1.w, r1.w
  69: dp2 r1.y, r1.zzzz, r1.yyyy
  70: add r1.y, r1.y, l(-0.500000)
  71: mul r1.z, r0.w, r0.w
  72: mul r1.z, r1.z, r1.z
  73: mul r0.w, r0.w, r1.z
  74: add r5.xyz, -r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  75: mad r2.yzw, r5.xxyz, r0.wwww, r2.yyzw
  76: mul r2.yzw, r2.yyzw, r4.xxyz
  77: mul r0.w, r1.x, r1.x
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.x, r0.w
  80: mad r0.w, r1.y, r0.w, l(1.000000)
  81: add r1.x, -r2.x, l(1.000000)
  82: mul r1.z, r1.x, r1.x
  83: mul r1.z, r1.z, r1.z
  84: mul r1.x, r1.x, r1.z
  85: mad r1.x, r1.y, r1.x, l(1.000000)
  86: mul r0.w, r0.w, r1.x
  87: mul r0.w, r2.x, r0.w
  88: mul r0.xyz, r0.wwww, r0.xyzx
  89: mad r0.w, -cb0[8].y, l(0.779084), l(0.779084)
  90: mul r1.xyz, r0.wwww, r3.xyzx
  91: mad o0.xyz, r1.xyzx, r0.xyzx, r2.yzwy
  92: mov o0.w, l(1.000000)
  93: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT SHADOWS_DEPTH SHADOWS_SOFT 
-- Vertex shader for "d3d9":
// Stats: 23 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 glstate_matrix_mvp at 4
Matrix4x4 unity_ObjectToWorld at 8
Matrix4x3 unity_WorldToObject at 12
Matrix4x4 unity_WorldToShadow at 0
Vector4 _MainTex_ST at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _MainTex_ST;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//   row_major float4x4 unity_WorldToShadow[4];
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_WorldToShadow c0       4
//   glstate_matrix_mvp  c4       4
//   unity_ObjectToWorld c8       4
//   unity_WorldToObject c12      3
//   _MainTex_ST         c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord3 o4
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c4, r0
    dp4 r1.y, c5, r0
    dp4 r1.z, c6, r0
    dp4 r1.w, c7, r0
    mad o1.xy, v2, c15, c15.zwzw
    mul r0.xyz, c13, v1.y
    mad r0.xyz, v1.x, c12, r0
    mad r0.xyz, v1.z, c14, r0
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul o2.xyz, r0.w, r0
    dp4 r0.w, c11, v0
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    dp4 o4.x, c0, r0
    dp4 o4.y, c1, r0
    dp4 o4.z, c2, r0
    dp4 o4.w, c3, r0
    mov o3.xyz, r0
    mad o0.xy, r1.w, c255, r1
    mov o0.zw, r1

// approximately 23 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 104 math, 7 textures
Matrix4x4 unity_WorldToLight at 4
Vector4 _Color at 14
Float _Glossiness at 12
Vector4 _LightColor0 at 11
Vector4 _LightShadowData at 10
Float _Metallic at 13
Vector4 _ShadowOffsets[4] at 0
Vector4 _WorldSpaceCameraPos at 8
Vector4 _WorldSpaceLightPos0 at 9

Set 2D Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2
Set 2D Texture "_MainTex" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float4 _ShadowOffsets[4];
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _ShadowOffsets       c0       4
//   unity_WorldToLight   c4       4
//   _WorldSpaceCameraPos c8       1
//   _WorldSpaceLightPos0 c9       1
//   _LightShadowData     c10      1
//   _LightColor0         c11      1
//   _Glossiness          c12      1
//   _Metallic            c13      1
//   _Color               c14      1
//   _ShadowMapTexture    s0       1
//   _LightTexture0       s1       1
//   _LightTextureB0      s2       1
//   _MainTex             s3       1
//

    ps_3_0
    def c15, 1, 0, 0.5, 0.25
    def c16, -0.220916301, 0.220916301, 0.779083729, 0.00100000005
    def c17, 31.622776, 9.99999975e-006, 0.318309873, 1.00000001e-007
    def c18, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2 v2.xyz
    dcl_texcoord3 v3
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    mov r0.x, c15.x
    rcp r0.y, v3.w
    mad r1, v3, r0.y, c0
    texldp_pp r1, r1, s0
    mad r2, v3, r0.y, c1
    texldp_pp r2, r2, s0
    mov_pp r1.y, r2.x
    mad r2, v3, r0.y, c2
    mad r3, v3, r0.y, c3
    texldp_pp r3, r3, s0
    mov_pp r1.w, r3.x
    texldp_pp r2, r2, s0
    mov_pp r1.z, r2.x
    lrp_pp r2, r1, r0.x, c10.x
    dp4_pp r0.y, r2, c15.w
    mad r1, v2.xyzx, c15.xxxy, c15.yyyx
    dp4 r0.z, c7, r1
    rcp r0.z, r0.z
    dp4 r2.x, c4, r1
    dp4 r2.y, c5, r1
    dp4 r2.z, c6, r1
    mad r0.zw, r2.xyxy, r0.z, c15.z
    dp3 r1.x, r2, r2
    texld_pp r1, r1.x, s2
    texld_pp r3, r0.zwzw, s1
    mul r0.z, r1.x, r3.w
    cmp r0.z, -r2.z, c15.y, r0.z
    mul_pp r0.y, r0.y, r0.z
    mul_pp r0.yzw, r0.y, c11.xxyz
    add r1.xyz, c8, -v2
    nrm_pp r2.xyz, r1
    add r1.xyz, c9, -v2
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mad_pp r3.xyz, r1, r1.w, r2
    mul_pp r1.xyz, r1.w, r1
    dp3_pp r1.w, r3, r3
    add r2.w, -r1.w, c16.w
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r2.w, c17.x, r1.w
    mul_pp r3.xyz, r1.w, r3
    nrm_pp r4.xyz, v1
    dp3_sat_pp r1.w, r4, r3
    dp3_sat_pp r2.w, r1, r3
    dp3_sat_pp r1.x, r4, r1
    dp3_pp r1.y, r4, r2
    add_pp r0.x, r0.x, -c12.x
    mul_pp r1.z, r0.x, r0.x
    mul_pp r2.x, r1.z, r1.z
    mad_pp r2.y, r1.w, r2.x, -r1.w
    mad_pp r1.w, r2.y, r1.w, c15.x
    mad r1.w, r1.w, r1.w, c17.w
    rcp r1.w, r1.w
    mul r2.x, r2.x, c17.z
    mul_pp r1.w, r1.w, r2.x
    mad_pp r2.x, r0.x, -r0.x, c15.x
    mad_pp r2.y, r1_abs.y, r2.x, r1.z
    mad_pp r1.z, r1.x, r2.x, r1.z
    mul_pp r1.z, r1.z, r1_abs.y
    add_pp r1.y, -r1_abs.y, c15.x
    mad r1.z, r1.x, r2.y, r1.z
    add r1.z, r1.z, c17.y
    rcp r1.z, r1.z
    mul_pp r1.z, r1.z, c15.z
    mul r1.z, r1.w, r1.z
    mul_pp r1.w, r1.z, c18.x
    mad r1.z, r1.z, -c18.x, c18.y
    rsq r1.w, r1.w
    rcp_pp r1.w, r1.w
    cmp_pp r1.z, r1.z, c18.z, r1.w
    mul_pp r1.z, r1.x, r1.z
    texld r3, v0, s3
    mov r2.xyz, c16
    mad_pp r4.xyz, r3, c14, r2.x
    mul_pp r3.xyz, r3, c14
    mad_pp r4.xyz, c13.x, r4, r2.y
    dp3_pp r1.w, r4, r4
    cmp r1.w, -r1.w, c15.y, c15.x
    mul_pp r1.z, r1.w, r1.z
    mul_pp r5.xyz, r0.yzww, r1.z
    add_pp r1.z, -r2.w, c15.x
    mul_pp r1.w, r2.w, r2.w
    dp2add_pp r0.x, r1.w, r0.x, -c15.z
    mul_pp r1.w, r1.z, r1.z
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.z, r1.z, r1.w
    lrp_pp r2.xyw, r1.z, c15.x, r4.xyzz
    mul_pp r2.xyw, r2, r5.xyzz
    mul_pp r1.z, r1.y, r1.y
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.y, r1.y, r1.z
    mad_pp r1.y, r0.x, r1.y, c15.x
    add_pp r1.z, -r1.x, c15.x
    mul_pp r1.w, r1.z, r1.z
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.z, r1.z, r1.w
    mad_pp r0.x, r0.x, r1.z, c15.x
    mul_pp r0.x, r1.y, r0.x
    mul_pp r0.x, r1.x, r0.x
    mul_pp r0.xyz, r0.x, r0.yzww
    mad_pp r0.w, c13.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r3
    mad_pp oC0.xyz, r1, r0, r2.xyww
    mov_pp oC0.w, c15.x

// approximately 109 instruction slots used (7 texture, 102 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 224
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Matrix4x4 unity_WorldToShadow[4] at 128
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 2 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[12], immediateIndexed
      dcl_constantbuffer CB2[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o1.xy, v3.xyxx, cb0[14].xyxx, cb0[14].zwzz
   5: dp3 r0.x, v2.xyzx, cb2[16].xyzx
   6: dp3 r0.y, v2.xyzx, cb2[17].xyzx
   7: dp3 r0.z, v2.xyzx, cb2[18].xyzx
   8: dp3 r0.w, r0.xyzx, r0.xyzx
   9: rsq r0.w, r0.w
  10: mul o2.xyz, r0.wwww, r0.xyzx
  11: mul r0.xyz, v0.yyyy, cb2[13].xyzx
  12: mad r0.xyz, cb2[12].xyzx, v0.xxxx, r0.xyzx
  13: mad r0.xyz, cb2[14].xyzx, v0.zzzz, r0.xyzx
  14: mad o3.xyz, cb2[15].xyzx, v0.wwww, r0.xyzx
  15: mul r0.xyzw, v0.yyyy, cb2[13].xyzw
  16: mad r0.xyzw, cb2[12].xyzw, v0.xxxx, r0.xyzw
  17: mad r0.xyzw, cb2[14].xyzw, v0.zzzz, r0.xyzw
  18: mad r0.xyzw, cb2[15].xyzw, v0.wwww, r0.xyzw
  19: mul r1.xyzw, r0.yyyy, cb1[9].xyzw
  20: mad r1.xyzw, cb1[8].xyzw, r0.xxxx, r1.xyzw
  21: mad r1.xyzw, cb1[10].xyzw, r0.zzzz, r1.xyzw
  22: mad o4.xyzw, cb1[11].xyzw, r0.wwww, r1.xyzw
  23: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 95 math, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2
Set 2D Texture "_ShadowMapTexture" to slot 3

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 128
  Vector4 _LightColor0 at 32
  Vector4 _ShadowOffsets[4] at 64
  Float _Glossiness at 192
  Float _Metallic at 196
  Vector4 _Color at 208
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[25], immediateIndexed
      dcl_sampler s0, mode_comparison
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v3.yyyy, cb0[9].xyzw
   1: mad r0.xyzw, cb0[8].xyzw, v3.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[10].xyzw, v3.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb0[11].xyzw
   4: div r1.xy, r0.xyxx, r0.wwww
   5: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
   7: lt r0.w, l(0.000000), r0.z
   8: dp3 r0.x, r0.xyzx, r0.xyzx
   9: sample r2.xyzw, r0.xxxx, t2.xyzw, s2
  10: and r0.x, r0.w, l(0x3f800000)
  11: mul r0.x, r1.w, r0.x
  12: mul r0.x, r2.x, r0.x
  13: add r0.y, -cb3[24].x, l(1.000000)
  14: div r1.xyz, v4.xyzx, v4.wwww
  15: add r2.xyz, r1.xyzx, cb0[4].xyzx
  16: sample_c_lz r2.x, r2.xyxx, t3.xxxx, s0, r2.z
  17: add r3.xyz, r1.xyzx, cb0[5].xyzx
  18: sample_c_lz r2.y, r3.xyxx, t3.xxxx, s0, r3.z
  19: add r3.xyz, r1.xyzx, cb0[6].xyzx
  20: add r1.xyz, r1.xyzx, cb0[7].xyzx
  21: sample_c_lz r2.w, r1.xyxx, t3.xxxx, s0, r1.z
  22: sample_c_lz r2.z, r3.xyxx, t3.xxxx, s0, r3.z
  23: mad r1.xyzw, r2.xyzw, r0.yyyy, cb3[24].xxxx
  24: dp4 r0.y, r1.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  25: mul r0.x, r0.y, r0.x
  26: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  27: add r1.xyz, -v3.xyzx, cb1[4].xyzx
  28: dp3 r0.w, r1.xyzx, r1.xyzx
  29: rsq r0.w, r0.w
  30: mul r1.xyz, r0.wwww, r1.xyzx
  31: add r2.xyz, -v3.xyzx, cb2[0].xyzx
  32: dp3 r0.w, r2.xyzx, r2.xyzx
  33: rsq r0.w, r0.w
  34: mad r3.xyz, r2.xyzx, r0.wwww, r1.xyzx
  35: mul r2.xyz, r0.wwww, r2.xyzx
  36: dp3 r0.w, r3.xyzx, r3.xyzx
  37: max r0.w, r0.w, l(0.001000)
  38: rsq r0.w, r0.w
  39: mul r3.xyz, r0.wwww, r3.xyzx
  40: dp3 r0.w, v2.xyzx, v2.xyzx
  41: rsq r0.w, r0.w
  42: mul r4.xyz, r0.wwww, v2.xyzx
  43: dp3_sat r0.w, r4.xyzx, r3.xyzx
  44: dp3_sat r1.w, r2.xyzx, r3.xyzx
  45: dp3_sat r2.x, r4.xyzx, r2.xyzx
  46: dp3 r1.x, r4.xyzx, r1.xyzx
  47: add r1.y, -cb0[12].x, l(1.000000)
  48: mul r1.z, r1.y, r1.y
  49: mul r2.y, r1.z, r1.z
  50: mad r2.z, r0.w, r2.y, -r0.w
  51: mad r0.w, r2.z, r0.w, l(1.000000)
  52: mad r0.w, r0.w, r0.w, l(0.000000)
  53: mul r2.y, r2.y, l(0.318310)
  54: div r0.w, r2.y, r0.w
  55: mad r2.y, -r1.y, r1.y, l(1.000000)
  56: mad r2.z, |r1.x|, r2.y, r1.z
  57: mad r1.z, r2.x, r2.y, r1.z
  58: mul r1.z, r1.z, |r1.x|
  59: add r1.x, -|r1.x|, l(1.000000)
  60: mad r1.z, r2.x, r2.z, r1.z
  61: add r1.z, r1.z, l(0.000010)
  62: div r1.z, l(0.500000), r1.z
  63: mul r0.w, r0.w, r1.z
  64: mul r0.w, r0.w, l(3.141593)
  65: max r0.w, r0.w, l(0.000100)
  66: sqrt r0.w, r0.w
  67: mul r0.w, r2.x, r0.w
  68: sample r3.xyzw, v1.xyxx, t0.xyzw, s3
  69: mad r2.yzw, r3.xxyz, cb0[13].xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  70: mul r3.xyz, r3.xyzx, cb0[13].xyzx
  71: mad r2.yzw, cb0[12].yyyy, r2.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  72: dp3 r1.z, r2.yzwy, r2.yzwy
  73: ne r1.z, r1.z, l(0.000000)
  74: and r1.z, r1.z, l(0x3f800000)
  75: mul r0.w, r0.w, r1.z
  76: mul r4.xyz, r0.xyzx, r0.wwww
  77: add r0.w, -r1.w, l(1.000000)
  78: mul r1.z, r1.w, r1.w
  79: dp2 r1.y, r1.zzzz, r1.yyyy
  80: add r1.y, r1.y, l(-0.500000)
  81: mul r1.z, r0.w, r0.w
  82: mul r1.z, r1.z, r1.z
  83: mul r0.w, r0.w, r1.z
  84: add r5.xyz, -r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  85: mad r2.yzw, r5.xxyz, r0.wwww, r2.yyzw
  86: mul r2.yzw, r2.yyzw, r4.xxyz
  87: mul r0.w, r1.x, r1.x
  88: mul r0.w, r0.w, r0.w
  89: mul r0.w, r1.x, r0.w
  90: mad r0.w, r1.y, r0.w, l(1.000000)
  91: add r1.x, -r2.x, l(1.000000)
  92: mul r1.z, r1.x, r1.x
  93: mul r1.z, r1.z, r1.z
  94: mul r1.x, r1.x, r1.z
  95: mad r1.x, r1.y, r1.x, l(1.000000)
  96: mul r0.w, r0.w, r1.x
  97: mul r0.w, r2.x, r0.w
  98: mul r0.xyz, r0.wwww, r0.xyzx
  99: mad r0.w, -cb0[12].y, l(0.779084), l(0.779084)
 100: mul r1.xyz, r0.wwww, r3.xyzx
 101: mad o0.xyz, r1.xyzx, r0.xyzx, r2.yzwy
 102: mov o0.w, l(1.000000)
 103: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT SHADOWS_CUBE SHADOWS_SOFT 
-- Vertex shader for "d3d9":
// Stats: 19 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _LightPositionRange at 10
Vector4 _MainTex_ST at 11

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   glstate_matrix_mvp  c0       4
//   unity_ObjectToWorld c4       3
//   unity_WorldToObject c7       3
//   _LightPositionRange c10      1
//   _MainTex_ST         c11      1
//

    vs_3_0
    def c12, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord3 o4.xyz
    mad r0, v0.xyzx, c12.xxxy, c12.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    mad o1.xy, v2, c11, c11.zwzw
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul o2.xyz, r0.w, r0
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o4.xyz, r0, -c10
    mov o3.xyz, r0
    mad o0.xy, r1.w, c255, r1
    mov o0.zw, r1

// approximately 19 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 103 math, 6 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 10
Float _Glossiness at 8
Vector4 _LightColor0 at 7
Vector4 _LightPositionRange at 5
Vector4 _LightShadowData at 6
Float _Metallic at 9
Vector4 _WorldSpaceCameraPos at 3
Vector4 _WorldSpaceLightPos0 at 4

Set CUBE Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_MainTex" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_WorldToLight   c0       3
//   _WorldSpaceCameraPos c3       1
//   _WorldSpaceLightPos0 c4       1
//   _LightPositionRange  c5       1
//   _LightShadowData     c6       1
//   _LightColor0         c7       1
//   _Glossiness          c8       1
//   _Metallic            c9       1
//   _Color               c10      1
//   _ShadowMapTexture    s0       1
//   _LightTexture0       s1       1
//   _MainTex             s2       1
//

    ps_3_0
    def c11, 0.970000029, 0.25, -0.220916301, 0.220916301
    def c12, 1, 0, 0.0078125, -0.0078125
    def c13, 0.779083729, 0.00100000005, 31.622776, -0.5
    def c14, 9.99999975e-006, 0.318309873, 1.00000001e-007, 3.14159274
    def c15, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2 v2.xyz
    dcl_texcoord3 v3.xyz
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    dp3 r0.x, v3, v3
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    mul r0.x, r0.x, c5.w
    add r0.yzw, c12.z, v3.xxyz
    texld r1, r0.yzww, s0
    add r0.yzw, c12.xwwz, v3.xxyz
    texld r2, r0.yzww, s0
    mov r1.y, r2.x
    add r0.yzw, c12.xwzw, v3.xxyz
    texld r2, r0.yzww, s0
    mov r1.z, r2.x
    add r0.yzw, c12.xzww, v3.xxyz
    texld r2, r0.yzww, s0
    mov r1.w, r2.x
    mad r0, r0.x, -c11.x, r1
    mov r1.x, c12.x
    cmp_pp r0, r0, r1.x, c6.x
    dp4_pp r0.x, r0, c11.y
    mad r2, v2.xyzx, c12.xxxy, c12.yyyx
    dp4 r3.x, c0, r2
    dp4 r3.y, c1, r2
    dp4 r3.z, c2, r2
    dp3 r0.y, r3, r3
    texld r2, r0.y, s1
    mul_pp r0.x, r0.x, r2.x
    mul_pp r0.xyz, r0.x, c7
    add r1.yzw, c3.xxyz, -v2.xxyz
    nrm_pp r2.xyz, r1.yzww
    add r1.yzw, c4.xxyz, -v2.xxyz
    dp3 r0.w, r1.yzww, r1.yzww
    rsq r0.w, r0.w
    mad_pp r3.xyz, r1.yzww, r0.w, r2
    mul_pp r1.yzw, r0.w, r1
    dp3_pp r0.w, r3, r3
    add r2.w, -r0.w, c13.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c13.z, r0.w
    mul_pp r3.xyz, r0.w, r3
    nrm_pp r4.xyz, v1
    dp3_sat_pp r0.w, r4, r3
    dp3_sat_pp r2.w, r1.yzww, r3
    dp3_sat_pp r1.y, r4, r1.yzww
    dp3_pp r1.z, r4, r2
    add_pp r1.x, r1.x, -c8.x
    mul_pp r1.w, r1.x, r1.x
    mul_pp r2.x, r1.w, r1.w
    mad_pp r2.y, r0.w, r2.x, -r0.w
    mad_pp r0.w, r2.y, r0.w, c12.x
    mad r0.w, r0.w, r0.w, c14.z
    rcp r0.w, r0.w
    mul r2.x, r2.x, c14.y
    mul_pp r0.w, r0.w, r2.x
    mad_pp r2.x, r1.x, -r1.x, c12.x
    mad_pp r2.y, r1_abs.z, r2.x, r1.w
    mad_pp r1.w, r1.y, r2.x, r1.w
    mul_pp r1.w, r1.w, r1_abs.z
    add_pp r1.z, -r1_abs.z, c12.x
    mad r1.w, r1.y, r2.y, r1.w
    add r1.w, r1.w, c14.x
    rcp r1.w, r1.w
    mul_pp r1.w, r1.w, -c13.w
    mul r0.w, r0.w, r1.w
    mul_pp r1.w, r0.w, c14.w
    mad r0.w, r0.w, -c15.x, c15.y
    rsq r1.w, r1.w
    rcp_pp r1.w, r1.w
    cmp_pp r0.w, r0.w, c15.z, r1.w
    mul_pp r0.w, r1.y, r0.w
    texld r3, v0, s2
    mov r4.zw, c11
    mad_pp r2.xyz, r3, c10, r4.z
    mul_pp r3.xyz, r3, c10
    mad_pp r2.xyz, c9.x, r2, r4.w
    dp3_pp r1.w, r2, r2
    cmp r1.w, -r1.w, c12.y, c12.x
    mul_pp r0.w, r0.w, r1.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r2.w, c12.x
    mul_pp r1.w, r2.w, r2.w
    dp2add_pp r1.x, r1.w, r1.x, c13.w
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c12.x, r2
    mul_pp r2.xyz, r4, r5
    mul_pp r0.w, r1.z, r1.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.z, r0.w
    mad_pp r0.w, r1.x, r0.w, c12.x
    add_pp r1.z, -r1.y, c12.x
    mul_pp r1.w, r1.z, r1.z
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.z, r1.z, r1.w
    mad_pp r1.x, r1.x, r1.z, c12.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.y, r0.w
    mul_pp r0.xyz, r0.w, r0
    mov r1.x, c13.x
    mad_pp r0.w, c9.x, -r1.x, r1.x
    mul_pp r1.xyz, r0.w, r3
    mad_pp oC0.xyz, r1, r0, r2
    mov_pp oC0.w, c12.x

// approximately 108 instruction slots used (6 texture, 102 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 16 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 160
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 2 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_constantbuffer CB2[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_temps 1
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
   5: dp3 r0.x, v2.xyzx, cb2[16].xyzx
   6: dp3 r0.y, v2.xyzx, cb2[17].xyzx
   7: dp3 r0.z, v2.xyzx, cb2[18].xyzx
   8: dp3 r0.w, r0.xyzx, r0.xyzx
   9: rsq r0.w, r0.w
  10: mul o2.xyz, r0.wwww, r0.xyzx
  11: mul r0.xyz, v0.yyyy, cb2[13].xyzx
  12: mad r0.xyz, cb2[12].xyzx, v0.xxxx, r0.xyzx
  13: mad r0.xyz, cb2[14].xyzx, v0.zzzz, r0.xyzx
  14: mad r0.xyz, cb2[15].xyzx, v0.wwww, r0.xyzx
  15: mov o3.xyz, r0.xyzx
  16: add o4.xyz, r0.xyzx, -cb1[1].xyzx
  17: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 91 math, 6 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set CUBE Texture "_ShadowMapTexture" to slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _Glossiness at 128
  Float _Metallic at 132
  Vector4 _Color at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_constantbuffer CB3[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: sqrt r0.x, r0.x
   2: mul r0.x, r0.x, cb2[1].w
   3: mul r0.x, r0.x, l(0.970000)
   4: add r0.yzw, v4.xxyz, l(0.000000, 0.007813, 0.007813, 0.007813)
   5: sample r1.xyzw, r0.yzwy, t2.xyzw, s0
   6: add r0.yzw, v4.xxyz, l(0.000000, -0.007813, -0.007813, 0.007813)
   7: sample r2.xyzw, r0.yzwy, t2.xyzw, s0
   8: mov r1.y, r2.x
   9: add r0.yzw, v4.xxyz, l(0.000000, -0.007813, 0.007813, -0.007813)
  10: sample r2.xyzw, r0.yzwy, t2.xyzw, s0
  11: mov r1.z, r2.x
  12: add r0.yzw, v4.xxyz, l(0.000000, 0.007813, -0.007813, -0.007813)
  13: sample r2.xyzw, r0.yzwy, t2.xyzw, s0
  14: mov r1.w, r2.x
  15: lt r0.xyzw, r1.xyzw, r0.xxxx
  16: movc r0.xyzw, r0.xyzw, cb3[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
  17: dp4 r0.x, r0.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  18: mul r0.yzw, v3.yyyy, cb0[5].xxyz
  19: mad r0.yzw, cb0[4].xxyz, v3.xxxx, r0.yyzw
  20: mad r0.yzw, cb0[6].xxyz, v3.zzzz, r0.yyzw
  21: add r0.yzw, r0.yyzw, cb0[7].xxyz
  22: dp3 r0.y, r0.yzwy, r0.yzwy
  23: sample r1.xyzw, r0.yyyy, t1.xyzw, s1
  24: mul r0.x, r0.x, r1.x
  25: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  26: add r1.xyz, -v3.xyzx, cb1[4].xyzx
  27: dp3 r0.w, r1.xyzx, r1.xyzx
  28: rsq r0.w, r0.w
  29: mul r1.xyz, r0.wwww, r1.xyzx
  30: add r2.xyz, -v3.xyzx, cb2[0].xyzx
  31: dp3 r0.w, r2.xyzx, r2.xyzx
  32: rsq r0.w, r0.w
  33: mad r3.xyz, r2.xyzx, r0.wwww, r1.xyzx
  34: mul r2.xyz, r0.wwww, r2.xyzx
  35: dp3 r0.w, r3.xyzx, r3.xyzx
  36: max r0.w, r0.w, l(0.001000)
  37: rsq r0.w, r0.w
  38: mul r3.xyz, r0.wwww, r3.xyzx
  39: dp3 r0.w, v2.xyzx, v2.xyzx
  40: rsq r0.w, r0.w
  41: mul r4.xyz, r0.wwww, v2.xyzx
  42: dp3_sat r0.w, r4.xyzx, r3.xyzx
  43: dp3_sat r1.w, r2.xyzx, r3.xyzx
  44: dp3_sat r2.x, r4.xyzx, r2.xyzx
  45: dp3 r1.x, r4.xyzx, r1.xyzx
  46: add r1.y, -cb0[8].x, l(1.000000)
  47: mul r1.z, r1.y, r1.y
  48: mul r2.y, r1.z, r1.z
  49: mad r2.z, r0.w, r2.y, -r0.w
  50: mad r0.w, r2.z, r0.w, l(1.000000)
  51: mad r0.w, r0.w, r0.w, l(0.000000)
  52: mul r2.y, r2.y, l(0.318310)
  53: div r0.w, r2.y, r0.w
  54: mad r2.y, -r1.y, r1.y, l(1.000000)
  55: mad r2.z, |r1.x|, r2.y, r1.z
  56: mad r1.z, r2.x, r2.y, r1.z
  57: mul r1.z, r1.z, |r1.x|
  58: add r1.x, -|r1.x|, l(1.000000)
  59: mad r1.z, r2.x, r2.z, r1.z
  60: add r1.z, r1.z, l(0.000010)
  61: div r1.z, l(0.500000), r1.z
  62: mul r0.w, r0.w, r1.z
  63: mul r0.w, r0.w, l(3.141593)
  64: max r0.w, r0.w, l(0.000100)
  65: sqrt r0.w, r0.w
  66: mul r0.w, r2.x, r0.w
  67: sample r3.xyzw, v1.xyxx, t0.xyzw, s2
  68: mad r2.yzw, r3.xxyz, cb0[9].xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  69: mul r3.xyz, r3.xyzx, cb0[9].xyzx
  70: mad r2.yzw, cb0[8].yyyy, r2.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  71: dp3 r1.z, r2.yzwy, r2.yzwy
  72: ne r1.z, r1.z, l(0.000000)
  73: and r1.z, r1.z, l(0x3f800000)
  74: mul r0.w, r0.w, r1.z
  75: mul r4.xyz, r0.xyzx, r0.wwww
  76: add r0.w, -r1.w, l(1.000000)
  77: mul r1.z, r1.w, r1.w
  78: dp2 r1.y, r1.zzzz, r1.yyyy
  79: add r1.y, r1.y, l(-0.500000)
  80: mul r1.z, r0.w, r0.w
  81: mul r1.z, r1.z, r1.z
  82: mul r0.w, r0.w, r1.z
  83: add r5.xyz, -r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  84: mad r2.yzw, r5.xxyz, r0.wwww, r2.yyzw
  85: mul r2.yzw, r2.yyzw, r4.xxyz
  86: mul r0.w, r1.x, r1.x
  87: mul r0.w, r0.w, r0.w
  88: mul r0.w, r1.x, r0.w
  89: mad r0.w, r1.y, r0.w, l(1.000000)
  90: add r1.x, -r2.x, l(1.000000)
  91: mul r1.z, r1.x, r1.x
  92: mul r1.z, r1.z, r1.z
  93: mul r1.x, r1.x, r1.z
  94: mad r1.x, r1.y, r1.x, l(1.000000)
  95: mul r0.w, r0.w, r1.x
  96: mul r0.w, r2.x, r0.w
  97: mul r0.xyz, r0.wwww, r0.xyzx
  98: mad r0.w, -cb0[8].y, l(0.779084), l(0.779084)
  99: mul r1.xyz, r0.wwww, r3.xyzx
 100: mad o0.xyz, r1.xyzx, r0.xyzx, r2.yzwy
 101: mov o0.w, l(1.000000)
 102: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT 
-- Vertex shader for "d3d9":
// Stats: 19 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _LightPositionRange at 10
Vector4 _MainTex_ST at 11

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   glstate_matrix_mvp  c0       4
//   unity_ObjectToWorld c4       3
//   unity_WorldToObject c7       3
//   _LightPositionRange c10      1
//   _MainTex_ST         c11      1
//

    vs_3_0
    def c12, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord3 o4.xyz
    mad r0, v0.xyzx, c12.xxxy, c12.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    mad o1.xy, v2, c11, c11.zwzw
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul o2.xyz, r0.w, r0
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o4.xyz, r0, -c10
    mov o3.xyz, r0
    mad o0.xy, r1.w, c255, r1
    mov o0.zw, r1

// approximately 19 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 104 math, 7 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 10
Float _Glossiness at 8
Vector4 _LightColor0 at 7
Vector4 _LightPositionRange at 5
Vector4 _LightShadowData at 6
Float _Metallic at 9
Vector4 _WorldSpaceCameraPos at 3
Vector4 _WorldSpaceLightPos0 at 4

Set CUBE Texture "_ShadowMapTexture" to slot 0
Set CUBE Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2
Set 2D Texture "_MainTex" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_WorldToLight   c0       3
//   _WorldSpaceCameraPos c3       1
//   _WorldSpaceLightPos0 c4       1
//   _LightPositionRange  c5       1
//   _LightShadowData     c6       1
//   _LightColor0         c7       1
//   _Glossiness          c8       1
//   _Metallic            c9       1
//   _Color               c10      1
//   _ShadowMapTexture    s0       1
//   _LightTexture0       s1       1
//   _LightTextureB0      s2       1
//   _MainTex             s3       1
//

    ps_3_0
    def c11, 0.970000029, 0.25, -0.220916301, 0.220916301
    def c12, 1, 0, 0.0078125, -0.0078125
    def c13, 0.779083729, 0.00100000005, 31.622776, -0.5
    def c14, 9.99999975e-006, 0.318309873, 1.00000001e-007, 3.14159274
    def c15, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2 v2.xyz
    dcl_texcoord3 v3.xyz
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dp3 r0.x, v3, v3
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    mul r0.x, r0.x, c5.w
    add r0.yzw, c12.z, v3.xxyz
    texld r1, r0.yzww, s0
    add r0.yzw, c12.xwwz, v3.xxyz
    texld r2, r0.yzww, s0
    mov r1.y, r2.x
    add r0.yzw, c12.xwzw, v3.xxyz
    texld r2, r0.yzww, s0
    mov r1.z, r2.x
    add r0.yzw, c12.xzww, v3.xxyz
    texld r2, r0.yzww, s0
    mov r1.w, r2.x
    mad r0, r0.x, -c11.x, r1
    mov r1.x, c12.x
    cmp_pp r0, r0, r1.x, c6.x
    dp4_pp r0.x, r0, c11.y
    mad r2, v2.xyzx, c12.xxxy, c12.yyyx
    dp4 r3.x, c0, r2
    dp4 r3.y, c1, r2
    dp4 r3.z, c2, r2
    dp3 r0.y, r3, r3
    texld r2, r3, s1
    texld r3, r0.y, s2
    mul r0.y, r2.w, r3.x
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.xyz, r0.x, c7
    add r1.yzw, c3.xxyz, -v2.xxyz
    nrm_pp r2.xyz, r1.yzww
    add r1.yzw, c4.xxyz, -v2.xxyz
    dp3 r0.w, r1.yzww, r1.yzww
    rsq r0.w, r0.w
    mad_pp r3.xyz, r1.yzww, r0.w, r2
    mul_pp r1.yzw, r0.w, r1
    dp3_pp r0.w, r3, r3
    add r2.w, -r0.w, c13.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c13.z, r0.w
    mul_pp r3.xyz, r0.w, r3
    nrm_pp r4.xyz, v1
    dp3_sat_pp r0.w, r4, r3
    dp3_sat_pp r2.w, r1.yzww, r3
    dp3_sat_pp r1.y, r4, r1.yzww
    dp3_pp r1.z, r4, r2
    add_pp r1.x, r1.x, -c8.x
    mul_pp r1.w, r1.x, r1.x
    mul_pp r2.x, r1.w, r1.w
    mad_pp r2.y, r0.w, r2.x, -r0.w
    mad_pp r0.w, r2.y, r0.w, c12.x
    mad r0.w, r0.w, r0.w, c14.z
    rcp r0.w, r0.w
    mul r2.x, r2.x, c14.y
    mul_pp r0.w, r0.w, r2.x
    mad_pp r2.x, r1.x, -r1.x, c12.x
    mad_pp r2.y, r1_abs.z, r2.x, r1.w
    mad_pp r1.w, r1.y, r2.x, r1.w
    mul_pp r1.w, r1.w, r1_abs.z
    add_pp r1.z, -r1_abs.z, c12.x
    mad r1.w, r1.y, r2.y, r1.w
    add r1.w, r1.w, c14.x
    rcp r1.w, r1.w
    mul_pp r1.w, r1.w, -c13.w
    mul r0.w, r0.w, r1.w
    mul_pp r1.w, r0.w, c14.w
    mad r0.w, r0.w, -c15.x, c15.y
    rsq r1.w, r1.w
    rcp_pp r1.w, r1.w
    cmp_pp r0.w, r0.w, c15.z, r1.w
    mul_pp r0.w, r1.y, r0.w
    texld r3, v0, s3
    mov r4.zw, c11
    mad_pp r2.xyz, r3, c10, r4.z
    mul_pp r3.xyz, r3, c10
    mad_pp r2.xyz, c9.x, r2, r4.w
    dp3_pp r1.w, r2, r2
    cmp r1.w, -r1.w, c12.y, c12.x
    mul_pp r0.w, r0.w, r1.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r2.w, c12.x
    mul_pp r1.w, r2.w, r2.w
    dp2add_pp r1.x, r1.w, r1.x, c13.w
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c12.x, r2
    mul_pp r2.xyz, r4, r5
    mul_pp r0.w, r1.z, r1.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.z, r0.w
    mad_pp r0.w, r1.x, r0.w, c12.x
    add_pp r1.z, -r1.y, c12.x
    mul_pp r1.w, r1.z, r1.z
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.z, r1.z, r1.w
    mad_pp r1.x, r1.x, r1.z, c12.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.y, r0.w
    mul_pp r0.xyz, r0.w, r0
    mov r1.x, c13.x
    mad_pp r0.w, c9.x, -r1.x, r1.x
    mul_pp r1.xyz, r0.w, r3
    mad_pp oC0.xyz, r1, r0, r2
    mov_pp oC0.w, c12.x

// approximately 110 instruction slots used (7 texture, 103 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 16 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 160
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 2 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_constantbuffer CB2[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_temps 1
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
   5: dp3 r0.x, v2.xyzx, cb2[16].xyzx
   6: dp3 r0.y, v2.xyzx, cb2[17].xyzx
   7: dp3 r0.z, v2.xyzx, cb2[18].xyzx
   8: dp3 r0.w, r0.xyzx, r0.xyzx
   9: rsq r0.w, r0.w
  10: mul o2.xyz, r0.wwww, r0.xyzx
  11: mul r0.xyz, v0.yyyy, cb2[13].xyzx
  12: mad r0.xyz, cb2[12].xyzx, v0.xxxx, r0.xyzx
  13: mad r0.xyz, cb2[14].xyzx, v0.zzzz, r0.xyzx
  14: mad r0.xyz, cb2[15].xyzx, v0.wwww, r0.xyzx
  15: mov o3.xyz, r0.xyzx
  16: add o4.xyz, r0.xyzx, -cb1[1].xyzx
  17: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 92 math, 7 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTextureB0" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 3

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _Glossiness at 128
  Float _Metallic at 132
  Vector4 _Color at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_constantbuffer CB3[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: sqrt r0.x, r0.x
   2: mul r0.x, r0.x, cb2[1].w
   3: mul r0.x, r0.x, l(0.970000)
   4: add r0.yzw, v4.xxyz, l(0.000000, 0.007813, 0.007813, 0.007813)
   5: sample r1.xyzw, r0.yzwy, t3.xyzw, s0
   6: add r0.yzw, v4.xxyz, l(0.000000, -0.007813, -0.007813, 0.007813)
   7: sample r2.xyzw, r0.yzwy, t3.xyzw, s0
   8: mov r1.y, r2.x
   9: add r0.yzw, v4.xxyz, l(0.000000, -0.007813, 0.007813, -0.007813)
  10: sample r2.xyzw, r0.yzwy, t3.xyzw, s0
  11: mov r1.z, r2.x
  12: add r0.yzw, v4.xxyz, l(0.000000, 0.007813, -0.007813, -0.007813)
  13: sample r2.xyzw, r0.yzwy, t3.xyzw, s0
  14: mov r1.w, r2.x
  15: lt r0.xyzw, r1.xyzw, r0.xxxx
  16: movc r0.xyzw, r0.xyzw, cb3[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
  17: dp4 r0.x, r0.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  18: mul r0.yzw, v3.yyyy, cb0[5].xxyz
  19: mad r0.yzw, cb0[4].xxyz, v3.xxxx, r0.yyzw
  20: mad r0.yzw, cb0[6].xxyz, v3.zzzz, r0.yyzw
  21: add r0.yzw, r0.yyzw, cb0[7].xxyz
  22: dp3 r1.x, r0.yzwy, r0.yzwy
  23: sample r2.xyzw, r0.yzwy, t2.xyzw, s1
  24: sample r1.xyzw, r1.xxxx, t1.xyzw, s2
  25: mul r0.y, r2.w, r1.x
  26: mul r0.x, r0.x, r0.y
  27: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  28: add r1.xyz, -v3.xyzx, cb1[4].xyzx
  29: dp3 r0.w, r1.xyzx, r1.xyzx
  30: rsq r0.w, r0.w
  31: mul r1.xyz, r0.wwww, r1.xyzx
  32: add r2.xyz, -v3.xyzx, cb2[0].xyzx
  33: dp3 r0.w, r2.xyzx, r2.xyzx
  34: rsq r0.w, r0.w
  35: mad r3.xyz, r2.xyzx, r0.wwww, r1.xyzx
  36: mul r2.xyz, r0.wwww, r2.xyzx
  37: dp3 r0.w, r3.xyzx, r3.xyzx
  38: max r0.w, r0.w, l(0.001000)
  39: rsq r0.w, r0.w
  40: mul r3.xyz, r0.wwww, r3.xyzx
  41: dp3 r0.w, v2.xyzx, v2.xyzx
  42: rsq r0.w, r0.w
  43: mul r4.xyz, r0.wwww, v2.xyzx
  44: dp3_sat r0.w, r4.xyzx, r3.xyzx
  45: dp3_sat r1.w, r2.xyzx, r3.xyzx
  46: dp3_sat r2.x, r4.xyzx, r2.xyzx
  47: dp3 r1.x, r4.xyzx, r1.xyzx
  48: add r1.y, -cb0[8].x, l(1.000000)
  49: mul r1.z, r1.y, r1.y
  50: mul r2.y, r1.z, r1.z
  51: mad r2.z, r0.w, r2.y, -r0.w
  52: mad r0.w, r2.z, r0.w, l(1.000000)
  53: mad r0.w, r0.w, r0.w, l(0.000000)
  54: mul r2.y, r2.y, l(0.318310)
  55: div r0.w, r2.y, r0.w
  56: mad r2.y, -r1.y, r1.y, l(1.000000)
  57: mad r2.z, |r1.x|, r2.y, r1.z
  58: mad r1.z, r2.x, r2.y, r1.z
  59: mul r1.z, r1.z, |r1.x|
  60: add r1.x, -|r1.x|, l(1.000000)
  61: mad r1.z, r2.x, r2.z, r1.z
  62: add r1.z, r1.z, l(0.000010)
  63: div r1.z, l(0.500000), r1.z
  64: mul r0.w, r0.w, r1.z
  65: mul r0.w, r0.w, l(3.141593)
  66: max r0.w, r0.w, l(0.000100)
  67: sqrt r0.w, r0.w
  68: mul r0.w, r2.x, r0.w
  69: sample r3.xyzw, v1.xyxx, t0.xyzw, s3
  70: mad r2.yzw, r3.xxyz, cb0[9].xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  71: mul r3.xyz, r3.xyzx, cb0[9].xyzx
  72: mad r2.yzw, cb0[8].yyyy, r2.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  73: dp3 r1.z, r2.yzwy, r2.yzwy
  74: ne r1.z, r1.z, l(0.000000)
  75: and r1.z, r1.z, l(0x3f800000)
  76: mul r0.w, r0.w, r1.z
  77: mul r4.xyz, r0.xyzx, r0.wwww
  78: add r0.w, -r1.w, l(1.000000)
  79: mul r1.z, r1.w, r1.w
  80: dp2 r1.y, r1.zzzz, r1.yyyy
  81: add r1.y, r1.y, l(-0.500000)
  82: mul r1.z, r0.w, r0.w
  83: mul r1.z, r1.z, r1.z
  84: mul r0.w, r0.w, r1.z
  85: add r5.xyz, -r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  86: mad r2.yzw, r5.xxyz, r0.wwww, r2.yyzw
  87: mul r2.yzw, r2.yyzw, r4.xxyz
  88: mul r0.w, r1.x, r1.x
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.x, r0.w
  91: mad r0.w, r1.y, r0.w, l(1.000000)
  92: add r1.x, -r2.x, l(1.000000)
  93: mul r1.z, r1.x, r1.x
  94: mul r1.z, r1.z, r1.z
  95: mul r1.x, r1.x, r1.z
  96: mad r1.x, r1.y, r1.x, l(1.000000)
  97: mul r0.w, r0.w, r1.x
  98: mul r0.w, r2.x, r0.w
  99: mul r0.xyz, r0.wwww, r0.xyzx
 100: mad r0.w, -cb0[8].y, l(0.779084), l(0.779084)
 101: mul r1.xyz, r0.wwww, r3.xyzx
 102: mad o0.xyz, r1.xyzx, r0.xyzx, r2.yzwy
 103: mov o0.w, l(1.000000)
 104: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //         d3d9: 26 math
 //        d3d11: 22 math
 // Stats for Fragment shader:
 //         d3d9: 29 avg math (28..31), 1 texture
 //        d3d11: 35 avg math (35..36), 4 texture, 2 branch
 Pass {
  Name "DEFERRED"
  Tags { "LIGHTMODE"="Deferred" "RenderType"="Opaque" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
No keywords set in this variant.
-- Vertex shader for "d3d9":
// Stats: 26 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _MainTex_ST at 14
Vector4 unity_SHBb at 12
Vector4 unity_SHBg at 11
Vector4 unity_SHBr at 10
Vector4 unity_SHC at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _MainTex_ST;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   glstate_matrix_mvp  c0       4
//   unity_ObjectToWorld c4       3
//   unity_WorldToObject c7       3
//   unity_SHBr          c10      1
//   unity_SHBg          c11      1
//   unity_SHBb          c12      1
//   unity_SHC           c13      1
//   _MainTex_ST         c14      1
//

    vs_3_0
    def c15, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord4 o4
    dcl_texcoord5 o5.xyz
    mad r0, v0.xyzx, c15.xxxy, c15.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c14, c14.zwzw
    dp4 o3.x, c4, v0
    dp4 o3.y, c5, v0
    dp4 o3.z, c6, v0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o2.xyz, r1
    dp4 r1.x, c10, r2
    dp4 r1.y, c11, r2
    dp4 r1.z, c12, r2
    mad o5.xyz, c13, r0.x, r1
    mov o4, c15.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 26 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 31 math, 1 textures
Vector4 _Color at 5
Float _Glossiness at 3
Float _Metallic at 4
Vector4 unity_SHAb at 2
Vector4 unity_SHAg at 1
Vector4 unity_SHAr at 0

Set 2D Texture "_MainTex" to slot 0

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   unity_SHAr   c0       1
//   unity_SHAg   c1       1
//   unity_SHAb   c2       1
//   _Glossiness  c3       1
//   _Metallic    c4       1
//   _Color       c5       1
//   _MainTex     s0       1
//

    ps_3_0
    def c6, 1.05499995, -0.0549999997, 0.779083729, 0
    def c7, 1, 0, 0.416666657, -0.220916301
    def c8, 0.5, 0, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    texld r0, v0, s0
    mov r0.w, c7.w
    mad_pp r1.xyz, r0, c5, r0.w
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c4.x, r1, -r0.w
    mad_pp r1, v1.xyzx, c7.xxxy, c7.yyyx
    dp4_pp r2.x, c0, r1
    dp4_pp r2.y, c1, r1
    dp4_pp r2.z, c2, r1
    add_pp r1.xyz, r2, v2
    max_pp r2.xyz, r1, c7.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c7.z
    exp_pp r2.x, r1.x
    exp_pp r2.y, r1.y
    exp_pp r2.z, r1.z
    mad_pp r1.xyz, r2, c6.x, c6.y
    max_pp r2.xyz, r1, c7.y
    mov r1.z, c6.z
    mad_pp r0.w, c4.x, -r1.z, r1.z
    mul_pp r0.xyz, r0.w, r0
    mul_pp r1.xyz, r2, r0
    mov_pp oC0.xyz, r0
    exp_pp oC3.x, -r1.x
    exp_pp oC3.y, -r1.y
    exp_pp oC3.z, -r1.z
    mov_pp oC0.w, c7.x
    mov_pp oC1.w, c3.x
    mad_pp oC2, v1.xyzx, c8.xxxy, c8.xxxz
    mov_pp oC3.w, c7.x

// approximately 32 instruction slots used (1 texture, 31 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 22 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 2 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[45], immediateIndexed
      dcl_constantbuffer CB2[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
   5: dp3 r0.x, v2.xyzx, cb2[16].xyzx
   6: dp3 r0.y, v2.xyzx, cb2[17].xyzx
   7: dp3 r0.z, v2.xyzx, cb2[18].xyzx
   8: dp3 r0.w, r0.xyzx, r0.xyzx
   9: rsq r0.w, r0.w
  10: mul r0.xyz, r0.wwww, r0.xyzx
  11: mov o2.xyz, r0.xyzx
  12: mul r1.xyz, v0.yyyy, cb2[13].xyzx
  13: mad r1.xyz, cb2[12].xyzx, v0.xxxx, r1.xyzx
  14: mad r1.xyz, cb2[14].xyzx, v0.zzzz, r1.xyzx
  15: mad o3.xyz, cb2[15].xyzx, v0.wwww, r1.xyzx
  16: mov o4.xyzw, l(0,0,0,0)
  17: mul r0.w, r0.y, r0.y
  18: mad r0.w, r0.x, r0.x, -r0.w
  19: mul r1.xyzw, r0.yzzx, r0.xyzz
  20: dp4 r0.x, cb1[41].xyzw, r1.xyzw
  21: dp4 r0.y, cb1[42].xyzw, r1.xyzw
  22: dp4 r0.z, cb1[43].xyzw, r1.xyzw
  23: mad o5.xyz, cb1[44].xyzx, r0.wwww, r0.xyzx
  24: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 36 math, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 1

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _Glossiness at 64
  Float _Metallic at 68
  Vector4 _Color at 80
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float       
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[5].xyzx
   2: eq r0.w, cb2[0].x, l(1.000000)
   3: if_nz r0.w
   4:   eq r0.w, cb2[0].y, l(1.000000)
   5:   mul r2.xyz, v3.yyyy, cb2[2].xyzx
   6:   mad r2.xyz, cb2[1].xyzx, v3.xxxx, r2.xyzx
   7:   mad r2.xyz, cb2[3].xyzx, v3.zzzz, r2.xyzx
   8:   add r2.xyz, r2.xyzx, cb2[4].xyzx
   9:   movc r2.xyz, r0.wwww, r2.xyzx, v3.xyzx
  10:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  11:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  12:   mul r0.w, r2.y, l(0.250000)
  13:   mul r1.w, cb2[0].z, l(0.500000)
  14:   mad r2.y, -cb2[0].z, l(0.500000), l(0.250000)
  15:   max r0.w, r0.w, r1.w
  16:   min r2.x, r2.y, r0.w
  17:   sample r3.xyzw, r2.xzwx, t1.xyzw, s0
  18:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  19:   sample r4.xyzw, r4.xyzx, t1.xyzw, s0
  20:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  21:   sample r2.xyzw, r2.xyzx, t1.xyzw, s0
  22:   mov r5.xyz, v2.xyzx
  23:   mov r5.w, l(1.000000)
  24:   dp4 r3.x, r3.xyzw, r5.xyzw
  25:   dp4 r3.y, r4.xyzw, r5.xyzw
  26:   dp4 r3.z, r2.xyzw, r5.xyzw
  27: else 
  28:   mov r2.xyz, v2.xyzx
  29:   mov r2.w, l(1.000000)
  30:   dp4 r3.x, cb1[38].xyzw, r2.xyzw
  31:   dp4 r3.y, cb1[39].xyzw, r2.xyzw
  32:   dp4 r3.z, cb1[40].xyzw, r2.xyzw
  33: endif 
  34: add r2.xyz, r3.xyzx, v5.xyzx
  35: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: log r2.xyz, r2.xyzx
  37: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  38: exp r2.xyz, r2.xyzx
  39: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  40: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mad r0.xyz, r0.xyzx, cb0[5].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  42: mad o1.xyz, cb0[4].yyyy, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  43: mad r0.x, -cb0[4].y, l(0.779084), l(0.779084)
  44: mul r0.xyz, r0.xxxx, r1.xyzx
  45: mul r1.xyz, r2.xyzx, r0.xyzx
  46: exp o3.xyz, -r1.xyzx
  47: mov o0.xyz, r0.xyzx
  48: mov o0.w, l(1.000000)
  49: mov o1.w, cb0[4].x
  50: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  51: mov o2.w, l(1.000000)
  52: mov o3.w, l(1.000000)
  53: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

//////////////////////////////////////////////////////
Keywords set in this variant: UNITY_HDR_ON 
-- Vertex shader for "d3d9":
// Stats: 26 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _MainTex_ST at 14
Vector4 unity_SHBb at 12
Vector4 unity_SHBg at 11
Vector4 unity_SHBr at 10
Vector4 unity_SHC at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _MainTex_ST;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   glstate_matrix_mvp  c0       4
//   unity_ObjectToWorld c4       3
//   unity_WorldToObject c7       3
//   unity_SHBr          c10      1
//   unity_SHBg          c11      1
//   unity_SHBb          c12      1
//   unity_SHC           c13      1
//   _MainTex_ST         c14      1
//

    vs_3_0
    def c15, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord4 o4
    dcl_texcoord5 o5.xyz
    mad r0, v0.xyzx, c15.xxxy, c15.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c14, c14.zwzw
    dp4 o3.x, c4, v0
    dp4 o3.y, c5, v0
    dp4 o3.z, c6, v0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o2.xyz, r1
    dp4 r1.x, c10, r2
    dp4 r1.y, c11, r2
    dp4 r1.z, c12, r2
    mad o5.xyz, c13, r0.x, r1
    mov o4, c15.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 26 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 28 math, 1 textures
Vector4 _Color at 5
Float _Glossiness at 3
Float _Metallic at 4
Vector4 unity_SHAb at 2
Vector4 unity_SHAg at 1
Vector4 unity_SHAr at 0

Set 2D Texture "_MainTex" to slot 0

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   unity_SHAr   c0       1
//   unity_SHAg   c1       1
//   unity_SHAb   c2       1
//   _Glossiness  c3       1
//   _Metallic    c4       1
//   _Color       c5       1
//   _MainTex     s0       1
//

    ps_3_0
    def c6, 1.05499995, -0.0549999997, 0.779083729, 0
    def c7, 1, 0, 0.416666657, -0.220916301
    def c8, 0.5, 0, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    texld r0, v0, s0
    mov r0.w, c7.w
    mad_pp r1.xyz, r0, c5, r0.w
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c4.x, r1, -r0.w
    mad_pp r1, v1.xyzx, c7.xxxy, c7.yyyx
    dp4_pp r2.x, c0, r1
    dp4_pp r2.y, c1, r1
    dp4_pp r2.z, c2, r1
    add_pp r1.xyz, r2, v2
    max_pp r2.xyz, r1, c7.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c7.z
    exp_pp r2.x, r1.x
    exp_pp r2.y, r1.y
    exp_pp r2.z, r1.z
    mad_pp r1.xyz, r2, c6.x, c6.y
    max_pp r2.xyz, r1, c7.y
    mov r1.z, c6.z
    mad_pp r0.w, c4.x, -r1.z, r1.z
    mul_pp r0.xyz, r0.w, r0
    mul_pp oC3.xyz, r2, r0
    mov_pp oC0.xyz, r0
    mov_pp oC0.w, c7.x
    mov_pp oC1.w, c3.x
    mad_pp oC2, v1.xyzx, c8.xxxy, c8.xxxz
    mov_pp oC3.w, c7.x

// approximately 29 instruction slots used (1 texture, 28 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 22 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 2 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[45], immediateIndexed
      dcl_constantbuffer CB2[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
   5: dp3 r0.x, v2.xyzx, cb2[16].xyzx
   6: dp3 r0.y, v2.xyzx, cb2[17].xyzx
   7: dp3 r0.z, v2.xyzx, cb2[18].xyzx
   8: dp3 r0.w, r0.xyzx, r0.xyzx
   9: rsq r0.w, r0.w
  10: mul r0.xyz, r0.wwww, r0.xyzx
  11: mov o2.xyz, r0.xyzx
  12: mul r1.xyz, v0.yyyy, cb2[13].xyzx
  13: mad r1.xyz, cb2[12].xyzx, v0.xxxx, r1.xyzx
  14: mad r1.xyz, cb2[14].xyzx, v0.zzzz, r1.xyzx
  15: mad o3.xyz, cb2[15].xyzx, v0.wwww, r1.xyzx
  16: mov o4.xyzw, l(0,0,0,0)
  17: mul r0.w, r0.y, r0.y
  18: mad r0.w, r0.x, r0.x, -r0.w
  19: mul r1.xyzw, r0.yzzx, r0.xyzz
  20: dp4 r0.x, cb1[41].xyzw, r1.xyzw
  21: dp4 r0.y, cb1[42].xyzw, r1.xyzw
  22: dp4 r0.z, cb1[43].xyzw, r1.xyzw
  23: mad o5.xyz, cb1[44].xyzx, r0.wwww, r0.xyzx
  24: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 35 math, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 1

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _Glossiness at 64
  Float _Metallic at 68
  Vector4 _Color at 80
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float       
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[5].xyzx
   2: eq r0.w, cb2[0].x, l(1.000000)
   3: if_nz r0.w
   4:   eq r0.w, cb2[0].y, l(1.000000)
   5:   mul r2.xyz, v3.yyyy, cb2[2].xyzx
   6:   mad r2.xyz, cb2[1].xyzx, v3.xxxx, r2.xyzx
   7:   mad r2.xyz, cb2[3].xyzx, v3.zzzz, r2.xyzx
   8:   add r2.xyz, r2.xyzx, cb2[4].xyzx
   9:   movc r2.xyz, r0.wwww, r2.xyzx, v3.xyzx
  10:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  11:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  12:   mul r0.w, r2.y, l(0.250000)
  13:   mul r1.w, cb2[0].z, l(0.500000)
  14:   mad r2.y, -cb2[0].z, l(0.500000), l(0.250000)
  15:   max r0.w, r0.w, r1.w
  16:   min r2.x, r2.y, r0.w
  17:   sample r3.xyzw, r2.xzwx, t1.xyzw, s0
  18:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  19:   sample r4.xyzw, r4.xyzx, t1.xyzw, s0
  20:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  21:   sample r2.xyzw, r2.xyzx, t1.xyzw, s0
  22:   mov r5.xyz, v2.xyzx
  23:   mov r5.w, l(1.000000)
  24:   dp4 r3.x, r3.xyzw, r5.xyzw
  25:   dp4 r3.y, r4.xyzw, r5.xyzw
  26:   dp4 r3.z, r2.xyzw, r5.xyzw
  27: else 
  28:   mov r2.xyz, v2.xyzx
  29:   mov r2.w, l(1.000000)
  30:   dp4 r3.x, cb1[38].xyzw, r2.xyzw
  31:   dp4 r3.y, cb1[39].xyzw, r2.xyzw
  32:   dp4 r3.z, cb1[40].xyzw, r2.xyzw
  33: endif 
  34: add r2.xyz, r3.xyzx, v5.xyzx
  35: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: log r2.xyz, r2.xyzx
  37: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  38: exp r2.xyz, r2.xyzx
  39: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  40: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mad r0.xyz, r0.xyzx, cb0[5].xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  42: mad o1.xyz, cb0[4].yyyy, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  43: mad r0.x, -cb0[4].y, l(0.779084), l(0.779084)
  44: mul r0.xyz, r0.xxxx, r1.xyzx
  45: mul o3.xyz, r2.xyzx, r0.xyzx
  46: mov o0.xyz, r0.xyzx
  47: mov o0.w, l(1.000000)
  48: mov o1.w, cb0[4].x
  49: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  50: mov o2.w, l(1.000000)
  51: mov o3.w, l(1.000000)
  52: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

 }
}
Fallback "Diffuse"
}